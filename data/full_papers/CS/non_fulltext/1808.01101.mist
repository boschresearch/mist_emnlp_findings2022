#0
Exploiting	_	_
Local	_	_
Indexing	_	_
and	_	_
Deep	_	_
Feature	_	_
Confidence	_	_
Scores	_	_
for	_	_
Fast	_	_
Image-to-Video	_	_
Search	_	_
Savas	_	_
Ozkan	_	_
,	_	_
Gozde	_	_
Bozdagi	_	_
Akar	_	_
Department	_	_
of	_	_
Electrical/Electronics	_	_
Engineering	_	_
,	_	_
Middle	_	_
East	_	_
Technical	_	_
University	_	_
06800	_	_
,	_	_
Ankara	_	_
,	_	_
Turkey	_	_
Abstract—The	_	_
cost-effective	_	_
visual	_	_
representation	_	_
and	_	_
fast	_	_
query-by-example	_	_
search	_	_
are	_	_
two	_	_
challenging	_	_
goals	_	_
that	_	_
should	_	_
be	_	_
maintained	_	_
for	_	_
web-scale	_	_
visual	_	_
retrieval	_	_
tasks	_	_
on	_	_
moderate	_	_
hardware	_	_
.	_	_

#1
This	_	_
paper	_	_
introduces	_	_
a	_	_
fast	_	_
and	_	_
robust	_	_
method	_	_
that	_	_
ensures	_	_
both	_	_
of	_	_
these	_	_
goals	_	_
by	_	_
obtaining	_	_
state-of-the-art	_	_
performance	_	_
for	_	_
an	_	_
image-to-video	_	_
search	_	_
scenario	_	_
.	_	_

#2
Hence	_	_
,	_	_
we	_	_
present	_	_
critical	_	_
enhancements	_	_
to	_	_
well-known	_	_
indexing	_	_
and	_	_
visual	_	_
representation	_	_
techniques	_	_
by	_	_
promoting	_	_
faster	_	_
,	_	_
better	_	_
and	_	_
moderate	_	_
retrieval	_	_
performance	_	_
.	_	_

#3
We	_	_
also	_	_
boost	_	_
the	_	_
superiority	_	_
of	_	_
our	_	_
method	_	_
for	_	_
some	_	_
visual	_	_
challenges	_	_
by	_	_
exploiting	_	_
individual	_	_
decisions	_	_
of	_	_
local	_	_
and	_	_
global	_	_
descriptors	_	_
at	_	_
query	_	_
time	_	_
.	_	_

#4
For	_	_
instance	_	_
,	_	_
local	_	_
content	_	_
descriptors	_	_
represent	_	_
copied/duplicated	_	_
scenes	_	_
with	_	_
large	_	_
geometric	_	_
deformations	_	_
such	_	_
as	_	_
scale	_	_
,	_	_
orientation	_	_
and	_	_
affine	_	_
transformation	_	_
.	_	_

#5
In	_	_
contrast	_	_
,	_	_
the	_	_
use	_	_
of	_	_
global	_	_
content	_	_
descriptors	_	_
is	_	_
more	_	_
practical	_	_
for	_	_
near-duplicate	_	_
and	_	_
semantic	_	_
searches	_	_
.	_	_

#6
Experiments	_	_
are	_	_
conducted	_	_
on	_	_
a	_	_
large-scale	_	_
Stanford	_	_
I2V	_	_
dataset	_	_
.	_	_

#7
The	_	_
experimental	_	_
results	_	_
show	_	_
that	_	_
our	_	_
method	_	_
is	_	_
useful	_	_
in	_	_
terms	_	_
of	_	_
complexity	_	_
and	_	_
query	_	_
processing	_	_
time	_	_
for	_	_
large-scale	_	_
visual	_	_
retrieval	_	_
scenarios	_	_
,	_	_
even	_	_
if	_	_
local	_	_
and	_	_
global	_	_
representations	_	_
are	_	_
used	_	_
together	_	_
.	_	_

#8
The	_	_
proposed	_	_
method	_	_
is	_	_
superior	_	_
and	_	_
achieves	_	_
state-of-the-art	_	_
performance	_	_
based	_	_
on	_	_
the	_	_
mean	_	_
average	_	_
precision	_	_
(	_	_
MAP	_	_
)	_	_
score	_	_
of	_	_
this	_	_
dataset	_	_
.	_	_

#9
Lastly	_	_
,	_	_
we	_	_
report	_	_
additional	_	_
MAP	_	_
scores	_	_
after	_	_
updating	_	_
the	_	_
ground	_	_
annotations	_	_
unveiled	_	_
by	_	_
retrieval	_	_
results	_	_
of	_	_
the	_	_
proposed	_	_
method	_	_
,	_	_
and	_	_
it	_	_
shows	_	_
that	_	_
the	_	_
actual	_	_
performance	_	_
.	_	_

#10
Index	_	_
Terms—Feature	_	_
Indexing	_	_
,	_	_
Deep	_	_
Features	_	_
,	_	_
Visual	_	_
Content	_	_
Retrieval	_	_
,	_	_
Image-to-Video	_	_
Search	_	_
I	_	_
.	_	_

#11
INTRODUCTION	_	_
In	_	_
the	_	_
last	_	_
decades	_	_
,	_	_
we	_	_
have	_	_
witnessed	_	_
an	_	_
unprecedented	_	_
proliferation	_	_
of	_	_
web-based	_	_
multimedia	_	_
data	_	_
.	_	_

#12
The	_	_
high-data	_	_
population	_	_
aggravates	_	_
to	_	_
retrieve	_	_
a	_	_
query	_	_
from	_	_
an	_	_
extensive	_	_
multimedia	_	_
collection	_	_
with	_	_
a	_	_
moderate	_	_
hardware	_	_
configuration	_	_
.	_	_

#13
Existing	_	_
works	_	_
[	_	_
1	_	_
]	_	_
–	_	_
[	_	_
9	_	_
]	_	_
primarily	_	_
focus	_	_
on	_	_
two	_	_
goals	_	_
:	_	_
high	_	_
performance	_	_
and	_	_
fast	_	_
query	_	_
.	_	_

#14
Visual	_	_
representations	_	_
computed	_	_
in	_	_
an	_	_
offline	_	_
step	_	_
are	_	_
not	_	_
marked	_	_
as	_	_
one	_	_
of	_	_
the	_	_
goals	_	_
since	_	_
it	_	_
is	_	_
done	_	_
before	_	_
the	_	_
query	_	_
is	_	_
made	_	_
.	_	_

#15
However	_	_
,	_	_
a	_	_
fundamental	_	_
question	_	_
that	_	_
needs	_	_
to	_	_
be	_	_
addressed	_	_
is	_	_
that	_	_
’Is	_	_
it	_	_
enough	_	_
to	_	_
obtain	_	_
the	_	_
highest	_	_
or	_	_
fastest	_	_
accuracy	_	_
to	_	_
deploy	_	_
a	_	_
complete	_	_
retrieval	_	_
system	_	_
for	_	_
users	_	_
?	_	_
’	_	_
.	_	_

#16
A	_	_
plausible	_	_
answer	_	_
should	_	_
be	_	_
that	_	_
,	_	_
especially	_	_
for	_	_
larger	_	_
multimedia	_	_
databases	_	_
(	_	_
i.e.	_	_
,	_	_
approaching	_	_
real-world	_	_
scenarios	_	_
)	_	_
,	_	_
solutions	_	_
must	deontic	_
consider	_	_
hardware	_	_
limitations	_	_
before	_	_
the	_	_
querying	_	_
to	_	_
mitigate	_	_
offline	_	_
step	_	_
complexity	_	_
.	_	_

#17
In	_	_
this	_	_
work	_	_
,	_	_
we	_	_
present	_	_
a	_	_
visual	_	_
multimedia	_	_
retrieval	_	_
method	_	_
that	_	_
aims	_	_
to	_	_
obtain	_	_
high	_	_
retrieval	_	_
accuracy	_	_
while	_	_
keeping	_	_
content	_	_
presentation/indexing	_	_
compact	_	_
.	_	_

#18
Our	_	_
main	_	_
contributions	_	_
are	_	_
as	_	_
follows	_	_
:	_	_
•	_	_
In	_	_
this	_	_
work	_	_
,	_	_
we	_	_
use	_	_
local	_	_
and	_	_
global	_	_
visual	_	_
features	_	_
together	_	_
.	_	_

#19
This	_	_
step	_	_
plays	_	_
a	_	_
crucial	_	_
role	_	_
by	_	_
solving	_	_
the	_	_
weaknesses	_	_
of	_	_
each	_	_
feature	_	_
set	_	_
with	_	_
the	_	_
superiority	_	_
of	_	_
other	_	_
methods	_	_
.	_	_

#20
More	_	_
specifically	_	_
,	_	_
local	_	_
features	_	_
tend	_	_
to	_	_
perform	_	_
better	_	_
with	_	_
severe	_	_
scale	_	_
,	_	_
rotation	_	_
,	_	_
and	_	_
translation	_	_
changes	_	_
[	_	_
1	_	_
]	_	_
,	_	_
[	_	_
10	_	_
]	_	_
.	_	_

#21
Similarly	_	_
,	_	_
global	_	_
features	_	_
can	_	_
provide	_	_
better	_	_
results	_	_
for	_	_
semantic	_	_
tasks	_	_
because	_	_
part-based	_	_
visual	_	_
representations	_	_
are	_	_
utilized	_	_
[	_	_
5	_	_
]	_	_
,	_	_
[	_	_
6	_	_
]	_	_
,	_	_
[	_	_
11	_	_
]	_	_
.	_	_

#22
For	_	_
this	_	_
purpose	_	_
,	_	_
we	_	_
combine	_	_
the	_	_
confidence	_	_
scores	_	_
of	_	_
local	_	_
and	_	_
global	_	_
features	_	_
detected	_	_
for	_	_
the	_	_
same	_	_
scenes	_	_
with	_	_
a	_	_
novel	_	_
fusion	_	_
technique	_	_
.	_	_

#23
The	_	_
direct	_	_
fusion	_	_
of	_	_
confidence	_	_
scores	_	_
is	_	_
not	_	_
appropriate	_	_
.	_	_

#24
Hence	_	_
,	_	_
our	_	_
method	_	_
aims	_	_
to	_	_
normalize	_	_
the	_	_
confidence	_	_
scores	_	_
of	_	_
both	_	_
local	_	_
and	_	_
global	_	_
features	_	_
first	_	_
.	_	_

#25
It	_	_
then	_	_
merges	_	_
them	_	_
into	_	_
a	_	_
final	_	_
ranking	_	_
list	_	_
by	_	_
adaptively	_	_
selecting	_	_
a	_	_
settling	_	_
point	_	_
for	_	_
each	_	_
query	_	_
.	_	_

#26
•	_	_
In	_	_
particular	_	_
,	_	_
the	_	_
utilization	_	_
of	_	_
local	_	_
and	_	_
global	_	_
descriptors	_	_
for	_	_
retrieval	_	_
scenarios	_	_
may	_	_
conflict	_	_
with	_	_
low-cost	_	_
computation	_	_
limitations	_	_
.	_	_

#27
Hence	_	_
,	_	_
we	_	_
introduce	_	_
improvements	_	_
to	_	_
well-known	_	_
indexing	_	_
and	_	_
global	_	_
pooling	_	_
techniques	_	_
;	_	_
namely	_	_
,	_	_
Product	_	_
Quantization	_	_
(	_	_
PQ	_	_
)	_	_
[	_	_
12	_	_
]	_	_
and	_	_
Compressed	_	_
Fisher	_	_
Vector	_	_
(	_	_
CFV	_	_
)	_	_
[	_	_
13	_	_
]	_	_
,	_	_
to	_	_
balance	_	_
the	_	_
workload	_	_
and	_	_
to	_	_
promote	_	_
modest	_	_
visual	_	_
description	_	_
.	_	_

#28
In	_	_
short	_	_
,	_	_
we	_	_
propose	_	_
a	_	_
non-parametric	_	_
weighting	_	_
function	_	_
to	_	_
compute	_	_
probabilistic	_	_
similarity	_	_
scores	_	_
between	_	_
local	_	_
features	_	_
for	_	_
query	_	_
and	_	_
reference	_	_
data	_	_
in	_	_
an	_	_
asymmetric	_	_
PQ	_	_
space	_	_
.	_	_

#29
Furthermore	_	_
,	_	_
we	_	_
replace	_	_
hand-crafted	_	_
features	_	_
[	_	_
10	_	_
]	_	_
and	_	_
sparse	_	_
keypoints	_	_
[	_	_
1	_	_
]	_	_
,	_	_
[	_	_
10	_	_
]	_	_
with	_	_
densely	_	_
sampled	_	_
mid-level	_	_
convolutional	_	_
features	_	_
.	_	_

#30
Notice	_	_
that	_	_
this	_	_
step	_	_
still	_	_
has	_	_
low	_	_
computation	_	_
workload	_	_
,	_	_
since	_	_
deep	_	_
features	_	_
are	_	_
densely	_	_
estimated	_	_
.	_	_

#31
In	_	_
addition	_	_
,	_	_
semantic	_	_
content	_	_
can	_	_
be	_	_
represented	_	_
precisely	_	_
with	_	_
deep	_	_
features	_	_
[	_	_
5	_	_
]	_	_
,	_	_
[	_	_
7	_	_
]	_	_
,	_	_
which	_	_
differs	_	_
from	_	_
the	_	_
local	_	_
content	_	_
(	_	_
relevant	_	_
to	_	_
the	_	_
goal	_	_
of	_	_
our	_	_
work	_	_
)	_	_
.	_	_

#32
Last	_	_
but	_	_
not	_	_
least	_	_
,	_	_
we	_	_
apply	_	_
an	_	_
approximate	_	_
binary	_	_
nearest	_	_
neighboring	_	_
search	_	_
(	_	_
NN	_	_
)	_	_
to	_	_
make	_	_
querying	_	_
operation	_	_
up	_	_
to	_	_
6x	_	_
faster	_	_
for	_	_
CFV	_	_
with	_	_
a	_	_
minor	_	_
decrease	_	_
for	_	_
accuracy	_	_
.	_	_

#33
•	_	_
To	_	_
this	_	_
end	_	_
,	_	_
the	_	_
proposed	_	_
method	_	_
enables	_	_
fast	_	_
query	_	_
and	_	_
low	_	_
computational	_	_
workloads	_	_
for	_	_
large-scale	_	_
datasets	_	_
while	_	_
it	_	_
outperforms	_	_
the	_	_
baselines	_	_
by	_	_
a	_	_
large	_	_
margin	_	_
.	_	_

#34
Moreover	_	_
,	_	_
ground	_	_
truth	_	_
annotations	_	_
for	_	_
Stanford	_	_
I2V	_	_
dataset	_	_
are	_	_
updated	_	_
that	_	_
allow	_	_
us	_	_
to	_	_
have	_	_
a	_	_
more	_	_
reliable	_	_
performance	_	_
evaluation	_	_
for	_	_
future	_	_
works	_	_
.	_	_

#35
II	_	_
.	_	_

#36
RELATED	_	_
WORK	_	_
Here	_	_
,	_	_
we	_	_
review	_	_
fundamentals	_	_
and	_	_
most	_	_
recent	_	_
studies	_	_
related	_	_
to	_	_
visual	_	_
content	_	_
search	_	_
tasks	_	_
.	_	_

#37
Local	_	_
and	_	_
Global	_	_
Descriptors	_	_
.	_	_

#38
With	_	_
the	_	_
advent	_	_
of	_	_
sparse	_	_
local	_	_
features	_	_
[	_	_
1	_	_
]	_	_
,	_	_
[	_	_
10	_	_
]	_	_
,	_	_
this	_	_
idea	_	_
instantly	_	_
becomes	_	_
popular	_	_
for	_	_
ar	_	_
X	_	_
iv	_	_
:1	_	_
8	_	_
.	_	_

#39
1v	_	_
2	_	_
[	_	_
cs	_	_
.C	_	_
V	_	_
]	_	_
1	_	_
2	_	_
D	_	_
ec	_	_
2	_	_
Fig.	_	_
1	_	_
.	_	_

#40
Non-annotated	_	_
scene	_	_
samples	_	_
are	_	_
unveiled	_	_
by	_	_
our	_	_
retrieval	_	_
results	_	_
on	_	_
Stanford	_	_
I2V	_	_
dataset	_	_
.	_	_

#41
Our	_	_
method	_	_
can	_	_
retrieve	_	_
queries	_	_
with	_	_
severe	_	_
viewpoint	_	_
and	_	_
conditional	_	_
changes	_	_
at	_	_
the	_	_
top	_	_
of	_	_
the	_	_
ranked	_	_
list	_	_
.	_	_

#42
the	_	_
visual	_	_
representation	_	_
domain	_	_
.	_	_

#43
However	_	_
,	_	_
the	_	_
usage	_	_
of	_	_
these	_	_
features	_	_
directly	_	_
is	_	_
not	_	_
possible	_	_
due	_	_
to	_	_
their	_	_
dimensionality	_	_
and	_	_
large	_	_
body	_	_
.	_	_

#44
Capturing	_	_
perfect	_	_
descriptor	_	_
relations	_	_
by	_	_
partitioning	_	_
feature	_	_
space	_	_
into	_	_
multiple	_	_
clusters	_	_
is	_	_
a	_	_
pioneering	_	_
technique	_	_
to	_	_
ease	_	_
this	_	_
limitation	_	_
[	_	_
2	_	_
]	_	_
.	_	_

#45
However	_	_
,	_	_
to	_	_
achieve	_	_
discriminative	_	_
hash	_	_
codes	_	_
,	_	_
cluster	_	_
size	_	_
should	_	_
be	_	_
quite	_	_
large	_	_
even	_	_
if	_	_
an	_	_
approximate	_	_
search	_	_
is	_	_
utilized	_	_
[	_	_
3	_	_
]	_	_
.	_	_

#46
Product	_	_
quantization	_	_
[	_	_
12	_	_
]	_	_
,	_	_
[	_	_
14	_	_
]	_	_
reduces	_	_
the	_	_
cost	_	_
of	_	_
feature	_	_
space	_	_
partitioning	_	_
significantly	_	_
and	_	_
mapping	_	_
,	_	_
since	_	_
complexity	_	_
is	_	_
decreased	_	_
by	_	_
splitting	_	_
a	_	_
feature	_	_
vector	_	_
into	_	_
multiple	_	_
subvectors	_	_
.	_	_

#47
Recently	_	_
,	_	_
the	_	_
studies	_	_
begin	_	_
to	_	_
focus	_	_
on	_	_
the	_	_
adaptation	_	_
of	_	_
end-to-end	_	_
learning	_	_
techniques	_	_
.	_	_

#48
Yi	_	_
et	_	_
al	_	_
[	_	_
4	_	_
]	_	_
propose	_	_
a	_	_
deep	_	_
network	_	_
pipeline	_	_
for	_	_
keypoint	_	_
detection	_	_
,	_	_
orientation	_	_
estimation	_	_
and	_	_
visual	_	_
description	_	_
in	_	_
a	_	_
unified	_	_
manner	_	_
.	_	_

#49
However	_	_
,	_	_
the	_	_
main	_	_
problem	_	_
is	_	_
that	_	_
relatively	_	_
high	_	_
hardware	_	_
configurations	_	_
are	_	_
needed	_	_
to	_	_
complete	_	_
computations	_	_
in	_	_
an	_	_
acceptable	_	_
time	_	_
.	_	_

#50
Recently	_	_
,	_	_
the	_	_
studies	_	_
concentrate	_	_
on	_	_
both	_	_
computation	_	_
and	_	_
performance	_	_
constraints	_	_
[	_	_
15	_	_
]	_	_
.	_	_

#51
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
orderless	_	_
feature	_	_
pooling	_	_
(	_	_
i.e.	_	_
,	_	_
global	_	_
descriptors	_	_
)	_	_
is	_	_
an	_	_
essential	_	_
technique	_	_
for	_	_
retrieval	_	_
tasks	_	_
to	_	_
produce	_	_
a	_	_
description	_	_
from	_	_
an	_	_
independent	_	_
set	_	_
of	_	_
features	_	_
[	_	_
11	_	_
]	_	_
.	_	_

#52
Similarly	_	_
,	_	_
large	_	_
dimensionality	_	_
aggravates	_	_
the	_	_
direct	_	_
use	_	_
of	_	_
these	_	_
descriptors	_	_
.	_	_

#53
Although	_	_
PCA-like	_	_
methods	_	_
can	_	_
be	_	_
used	_	_
to	_	_
transform	_	_
descriptors	_	_
to	_	_
several	_	_
principal	_	_
axes	_	_
,	_	_
binary	_	_
codes	_	_
that	_	_
are	_	_
calculated	_	_
with	_	_
a	_	_
simple	_	_
threshold	_	_
[	_	_
13	_	_
]	_	_
provide	_	_
several	_	_
advantages	_	_
as	_	_
explained	_	_
in	_	_
[	_	_
16	_	_
]	_	_
.	_	_

#54
Recently	_	_
,	_	_
neural	_	_
networks	_	_
are	_	_
also	_	_
used	_	_
to	_	_
compress	_	_
feature	_	_
vectors	_	_
for	_	_
effective	_	_
search	_	_
[	_	_
17	_	_
]	_	_
.	_	_

#55
Similarly	_	_
,	_	_
Babenko	_	_
et	_	_
al.	_	_
[	_	_
7	_	_
]	_	_
compute	_	_
deep	_	_
features	_	_
from	_	_
different	_	_
fragments	_	_
of	_	_
images	_	_
and	_	_
aggregate	_	_
them	_	_
with	_	_
the	_	_
VLAD	_	_
descriptor	_	_
.	_	_

#56
NetVlad	_	_
[	_	_
8	_	_
]	_	_
is	_	_
a	_	_
trainable	_	_
generalization	_	_
of	_	_
VLAD	_	_
to	_	_
recognize	_	_
the	_	_
geo-location	_	_
of	_	_
images	_	_
.	_	_

#57
Gordo	_	_
et	_	_
al.	_	_
[	_	_
9	_	_
]	_	_
improve	_	_
performance	_	_
on	_	_
the	_	_
visual	_	_
landmark	_	_
retrieval	_	_
task	_	_
by	_	_
finetuning	_	_
a	_	_
deep	_	_
model	_	_
with	_	_
a	_	_
Siamese	_	_
triplet	_	_
loss	_	_
.	_	_

#58
Lastly	_	_
,	_	_
[	_	_
18	_	_
]	_	_
shows	_	_
that	_	_
local	_	_
and	_	_
global	_	_
descriptors	_	_
should	_	_
be	_	_
jointly	_	_
used	_	_
to	_	_
eliminate	_	_
possible	_	_
outliers	_	_
for	_	_
accurate	_	_
retrieval	_	_
.	_	_

#59
However	_	_
,	_	_
note	_	_
that	_	_
these	_	_
methods	_	_
need	_	_
labeled	_	_
data	_	_
to	_	_
train/finetune	_	_
high-level	_	_
features	_	_
for	_	_
deep	_	_
models	_	_
,	_	_
that	_	_
is	_	_
impractical	_	_
for	_	_
all	_	_
datasets	_	_
.	_	_

#60
Low	_	_
Offline	_	_
Workload	_	_
.	_	_

#61
As	_	_
stated	_	_
,	_	_
a	_	_
limited	_	_
number	_	_
of	_	_
studies	_	_
primarily	_	_
consider	_	_
low	_	_
computational	_	_
workload	_	_
objectives	_	_
in	_	_
the	_	_
literature	_	_
[	_	_
13	_	_
]	_	_
,	_	_
[	_	_
19	_	_
]	_	_
.	_	_

#62
These	_	_
solutions	_	_
usually	_	_
rely	_	_
on	_	_
representing	_	_
a	_	_
scene	_	_
with	_	_
a	_	_
global	_	_
visual	_	_
descriptor	_	_
.	_	_

#63
Also	_	_
,	_	_
the	_	_
content	_	_
around	_	_
sparsely	_	_
sampled	_	_
points	_	_
is	_	_
used	_	_
to	_	_
achieve	_	_
a	_	_
reasonable	_	_
computational	_	_
workload	_	_
.	_	_

#64
However	_	_
,	_	_
these	_	_
descriptors	_	_
tend	_	_
to	_	_
capture	_	_
the	_	_
content	_	_
heavily	_	_
from	_	_
the	_	_
background	_	_
and	_	_
repetitive	_	_
parts	_	_
[	_	_
20	_	_
]	_	_
.	_	_

#65
Moreover	_	_
,	_	_
the	_	_
discriminative	_	_
power	_	_
of	_	_
representations	_	_
(	_	_
i.e.	_	_
,	_	_
for	_	_
binary	_	_
codes	_	_
)	_	_
can	_	_
decrease	_	_
exponentially	_	_
when	_	_
the	_	_
database	_	_
size	_	_
is	_	_
increased	_	_
[	_	_
21	_	_
]	_	_
.	_	_

#66
Therefore	_	_
,	_	_
the	_	_
single	_	_
use	_	_
of	_	_
global	_	_
descriptors	_	_
remains	_	_
weak	_	_
for	_	_
large-scale	_	_
data	_	_
,	_	_
and	_	_
additional	_	_
representations	_	_
should	_	_
be	_	_
exploited	_	_
without	_	_
sacrificing	_	_
computational	_	_
workload	_	_
too	_	_
much	_	_
.	_	_

#67
III	_	_
.	_	_

#68
PROPOSED	_	_
METHOD	_	_
Our	_	_
main	_	_
goal	_	_
is	_	_
to	_	_
enhance	_	_
the	_	_
performance	_	_
of	_	_
visual	_	_
retrieval	_	_
tasks	_	_
by	_	_
exploiting	_	_
the	_	_
confidence	_	_
scores	_	_
of	_	_
both	_	_
local	_	_
and	_	_
global	_	_
descriptors	_	_
for	_	_
the	_	_
same	_	_
scenes	_	_
.	_	_

#69
Thus	_	_
,	_	_
the	_	_
computational	_	_
load	_	_
should	_	_
be	_	_
low	_	_
so	_	_
that	_	_
a	_	_
large	_	_
amount	_	_
of	_	_
data	_	_
can	_	_
be	_	_
processed	_	_
within	_	_
a	_	_
reasonable	_	_
time	_	_
.	_	_

#70
Since	_	_
our	_	_
model	_	_
is	_	_
formulated	_	_
as	_	_
an	_	_
image-based	_	_
framework	_	_
,	_	_
keyframes	_	_
are	_	_
sampled	_	_
at	_	_
the	_	_
start	_	_
from	_	_
a	_	_
sequence	_	_
of	_	_
video	_	_
frames	_	_
V	_	_
=	_	_
{	_	_
v1	_	_
,	_	_
v2	_	_
,	_	_
...	_	_
,	_	_
vn	_	_
}	_	_
with	_	_
a	_	_
simple	_	_
heuristic	_	_
rule	_	_
.	_	_

#71
This	_	_
rule	_	_
enforces	_	_
a	_	_
uniform	_	_
sampling	_	_
strategy	_	_
1fpsand	_	_
a	_	_
constraint	_	_
that	_	_
each	_	_
frame	_	_
should	_	_
not	_	_
contain	_	_
any	_	_
sub-region	_	_
with	_	_
large	_	_
motion	_	_
variations	_	_
.	_	_

#72
Otherwise	_	_
,	_	_
these	_	_
frames	_	_
are	_	_
discarded	_	_
.	_	_

#73
A	_	_
.	_	_

#74
Local	_	_
Visual	_	_
Content	_	_
Representation	_	_
The	_	_
local	_	_
visual	_	_
content	_	_
of	_	_
an	_	_
input	_	_
frame	_	_
is	_	_
computed	_	_
from	_	_
sparsely	_	_
sampled	_	_
key	_	_
points	_	_
.	_	_

#75
Then	_	_
,	_	_
these	_	_
samples	_	_
are	_	_
converted	_	_
into	_	_
compact	_	_
hash	_	_
codes	_	_
.	_	_

#76
In	_	_
short	_	_
,	_	_
a	_	_
two-stage	_	_
quantization-based	_	_
approach	_	_
is	_	_
utilized	_	_
.	_	_

#77
Moreover	_	_
,	_	_
geometric	_	_
consistency	_	_
between	_	_
local	_	_
features	_	_
is	_	_
added	_	_
with	_	_
fast	_	_
geometric	_	_
filtering	_	_
at	_	_
the	_	_
end	_	_
.	_	_

#78
Local	_	_
Sparse	_	_
Features	_	_
.	_	_

#79
For	_	_
local	_	_
representation	_	_
,	_	_
we	_	_
use	_	_
Root	_	_
SIFT	_	_
[	_	_
22	_	_
]	_	_
and	_	_
Hessian	_	_
Laplacian	_	_
[	_	_
1	_	_
]	_	_
.	_	_

#80
Since	_	_
they	_	_
are	_	_
robust	_	_
to	_	_
scale	_	_
and	_	_
orientation	_	_
changes	_	_
,	_	_
we	_	_
expect	_	_
to	_	_
successfully	_	_
retrieve	_	_
any	_	_
query	_	_
that	_	_
presents	_	_
strong	_	_
geometric	_	_
deformations	_	_
(	_	_
duplicate/copy	_	_
)	_	_
from	_	_
the	_	_
reference	_	_
set	_	_
.	_	_

#81
In	_	_
addition	_	_
,	_	_
to	_	_
find	_	_
geometric	_	_
adjacency	_	_
of	_	_
local	_	_
matches	_	_
at	_	_
the	_	_
voting	_	_
step	_	_
,	_	_
we	_	_
store	_	_
coordinate	_	_
(	_	_
x	_	_
,	_	_
y	_	_
)	_	_
,	_	_
orientation	_	_
θ	_	_
and	_	_
scale	_	_
s	_	_
coefficients	_	_
of	_	_
each	_	_
local	_	_
point	_	_
in	_	_
quantized	_	_
forms	_	_
.	_	_

#82
Feature	_	_
Indexing	_	_
.	_	_

#83
As	_	_
mentioned	_	_
,	_	_
the	_	_
direct	_	_
use	_	_
of	_	_
local	_	_
features	_	_
is	_	_
impractical	_	_
and	_	_
should	_	_
be	_	_
converted	_	_
into	_	_
small	_	_
representations	_	_
.	_	_

#84
The	_	_
idea	_	_
of	_	_
Bag-of-Word-like	_	_
[	_	_
2	_	_
]	_	_
methods	_	_
is	_	_
to	_	_
quantize	_	_
(	_	_
Eq.	_	_
1	_	_
)	_	_
each	_	_
feature	_	_
vector	_	_
fh	_	_
∈	_	_
R128	_	_
(	_	_
note	_	_
that	_	_
dimension	_	_
of	_	_
SIFT	_	_
is	_	_
128	_	_
and	_	_
k-means	_	_
is	_	_
used	_	_
)	_	_
to	_	_
the	_	_
closest	_	_
center	_	_
ci	_	_
from	_	_
a	_	_
pre-clustered	_	_
feature	_	_
space	_	_
Cbow	_	_
∈	_	_
RDbow×128	_	_
:	_	_
qb	_	_
(	_	_
fh	_	_
)	_	_
=	_	_
min	_	_
i	_	_
‖	_	_
fh	_	_
−	_	_
ci	_	_
‖2	_	_
,	_	_
ci	_	_
∈	_	_
Cbow	_	_
,	_	_
(	_	_
1	_	_
)	_	_
However	_	_
,	_	_
the	_	_
number	_	_
of	_	_
cluster	_	_
centers	_	_
should	_	_
be	_	_
adequately	_	_
large	_	_
(	_	_
e.g.	_	_
Dbow	_	_
>	_	_
100K	_	_
)	_	_
in	_	_
order	_	_
to	_	_
achieve	_	_
discriminative	_	_
space	_	_
partitions	_	_
[	_	_
3	_	_
]	_	_
.	_	_

#85
This	_	_
requirement	_	_
leads	_	_
to	_	_
an	_	_
increase	_	_
in	_	_
offline	_	_
calculations	_	_
and	_	_
makes	_	_
it	_	_
difficult	_	_
to	_	_
represent	_	_
visual	_	_
content	_	_
with	_	_
local	_	_
features	_	_
.	_	_

#86
In	_	_
our	_	_
work	_	_
,	_	_
a	_	_
rational	_	_
computation	_	_
effort	_	_
is	_	_
achieved	_	_
by	_	_
encoding	_	_
residual	_	_
vector	_	_
(	_	_
r	_	_
=	_	_
fh	_	_
−	_	_
ci	_	_
)	_	_
with	_	_
an	_	_
additional	_	_
quantizer	_	_
qb	_	_
(	_	_
.	_	_
)	_	_
.	_	_

#87
Hence	_	_
,	_	_
relatively	_	_
smaller	_	_
cluster	_	_
sizes	_	_
(	_	_
i.e.	_	_
,	_	_
Dbow	_	_
≈	_	_
10K	_	_
)	_	_
can	_	_
be	_	_
selected	_	_
.	_	_

#88
PQ	_	_
space	_	_
[	_	_
12	_	_
]	_	_
Cpq	_	_
=	_	_
{	_	_
C1	_	_
pq	_	_
,	_	_
C	_	_
pq	_	_
,	_	_
...	_	_
,	_	_
C	_	_
m	_	_
pq	_	_
}	_	_
,	_	_
Ck	_	_
pq	_	_
∈	_	_
RDpq×128/m	_	_
is	_	_
selected	_	_
to	_	_
maximize	_	_
information	_	_
bit	_	_
per	_	_
component	_	_
by	_	_
splitting	_	_
residual	_	_
vector	_	_
into	_	_
m	_	_
non-overlapping	_	_
sub-vectors	_	_
r	_	_
=	_	_
{	_	_
r1	_	_
,	_	_
r2	_	_
,	_	_
...	_	_
,	_	_
rm	_	_
}	_	_
as	_	_
follows	_	_
:	_	_
qkpq	_	_
(	_	_
r	_	_
)	_	_
=	_	_
min	_	_
i	_	_
‖	_	_
rk	_	_
−	_	_
ci	_	_
‖2	_	_
,	_	_
ci	_	_
∈	_	_
Ck	_	_
pq	_	_
,	_	_
∀k	_	_
.	_	_

#89
(	_	_
2	_	_
)	_	_
At	_	_
the	_	_
end	_	_
,	_	_
each	_	_
feature	_	_
vector	_	_
is	_	_
converted	_	_
into	_	_
two	_	_
interrelated	_	_
hash	_	_
codes	_	_
where	_	_
hb	_	_
=	_	_
qb	_	_
and	_	_
hpq	_	_
=	_	_
{	_	_
q1pq	_	_
,	_	_
q2pq	_	_
,	_	_
...	_	_
,	_	_
qmpq	_	_
}	_	_
,	_	_
and	_	_
they	_	_
are	_	_
stored	_	_
in	_	_
an	_	_
inverted	_	_
file	_	_
structure	_	_
based	_	_
on	_	_
their	_	_
hb	_	_
values	_	_
.	_	_

#90
Throughout	_	_
this	_	_
work	_	_
,	_	_
m	_	_
and	_	_
Dpq	_	_
are	_	_
empirically	_	_
set	_	_
to	_	_
8	_	_
and	_	_
256	_	_
as	_	_
in	_	_
[	_	_
12	_	_
]	_	_
.	_	_

#91
In	_	_
a	_	_
nutshell	_	_
,	_	_
computation	_	_
cost	_	_
is	_	_
exponentially	_	_
reduced	_	_
with	_	_
low	_	_
cost	_	_
two-stage	_	_
indexing	_	_
scheme	_	_
and	_	_
local	_	_
representation	_	_
becomes	_	_
applicable	_	_
for	_	_
large-scale	_	_
databases	_	_
.	_	_

#92
Local	_	_
Voting	_	_
Scheme	_	_
.	_	_

#93
We	_	_
use	_	_
a	_	_
two-fold	_	_
approach	_	_
for	_	_
the	_	_
voting	_	_
scheme	_	_
:	_	_
First	_	_
,	_	_
we	_	_
estimate	_	_
the	_	_
best	_	_
locally	_	_
matching	_	_
candidates	_	_
based	_	_
on	_	_
similarities	_	_
between	_	_
hash	_	_
codes	_	_
.	_	_

#94
Later	_	_
,	_	_
outliers	_	_
are	_	_
eliminated	_	_
based	_	_
on	_	_
the	_	_
dominant	_	_
geometric	_	_
model	_	_
between	_	_
the	_	_
query	_	_
and	_	_
reference	_	_
frames	_	_
.	_	_

#95
Formally	_	_
,	_	_
in	_	_
order	_	_
to	_	_
say	_	_
that	_	_
query	_	_
and	_	_
reference	_	_
local	_	_
points	_	_
are	_	_
similar	_	_
,	_	_
coarse	_	_
hash	_	_
codes	_	_
should	_	_
be	_	_
the	_	_
same	_	_
(	_	_
hqb	_	_
=	_	_
hrb	_	_
)	_	_
,	_	_
while	_	_
residual	_	_
similarities	_	_
(	_	_
hrpq	_	_
and	_	_
hqpq	_	_
)	_	_
must	_	_
be	_	_
within	_	_
an	_	_
error	_	_
tolerance	_	_
.	_	_

#96
Otherwise	_	_
,	_	_
the	_	_
similarity	_	_
score	_	_
is	_	_
set	_	_
to	_	_
zero	_	_
and	_	_
discarded	_	_
from	_	_
initial	_	_
query	_	_
candidates	_	_
.	_	_

#97
This	_	_
work	_	_
proposes	_	_
a	_	_
novel	_	_
non-parametric	_	_
score	_	_
function	_	_
for	_	_
PQ	_	_
Euclidean	_	_
space	_	_
to	_	_
be	_	_
used	_	_
in	_	_
the	_	_
residual	_	_
similarity	_	_
calculation	_	_
.	_	_

#98
Ultimately	_	_
,	_	_
this	_	_
score	_	_
function	_	_
normalizes	_	_
asymmetric	_	_
Euclidean	_	_
distance	_	_
of	_	_
two	_	_
residual	_	_
hash	_	_
codes	_	_
with	_	_
a	_	_
maximum	_	_
asymmetric	_	_
distance	_	_
between	_	_
all	_	_
cluster	_	_
centers	_	_
.	_	_

#99
Later	_	_
,	_	_
the	_	_
final	_	_
residual	_	_
similarity	_	_
score	_	_
is	_	_
equal	_	_
to	_	_
the	_	_
average	_	_
of	_	_
all	_	_
subvector	_	_
scores	_	_
:	_	_
wpq	_	_
(	_	_
h	_	_
r	_	_
pq	_	_
,	_	_
h	_	_
q	_	_
pq	_	_
)	_	_
=	_	_
m	_	_
m∑	_	_
k=1	_	_
(	_	_
1−	_	_
1	_	_
dk	_	_
‖	_	_
qr	_	_
,	_	_
kpq	_	_
−	_	_
qq	_	_
,	_	_
kpq	_	_
‖2	_	_
)	_	_
.	_	_

#100
(	_	_
3	_	_
)	_	_
where	_	_
dk	_	_
indicates	_	_
the	_	_
maximum	_	_
asymmetric	_	_
Euclidean	_	_
distance	_	_
for	_	_
kth	_	_
subvector	_	_
,	_	_
i.e.	_	_
,	_	_
dk	_	_
=	_	_
max	_	_
‖	_	_
ci	_	_
−	_	_
cl	_	_
‖2	_	_
,	_	_
∀i	_	_
,	_	_
l	_	_
∈	_	_
Dpq	_	_
,	_	_
ci	_	_
,	_	_
cl	_	_
∈	_	_
Ck	_	_
pq	_	_
.	_	_

#101
This	_	_
non-parametric	_	_
function	_	_
enables	_	_
us	_	_
to	_	_
assess	_	_
similarities	_	_
within	_	_
[	_	_
0,1	_	_
]	_	_
(	_	_
wpq	_	_
(	_	_
.	_	_
,	_	_
.	_	_
)	_	_

#102
∈	_	_
[	_	_
0	_	_
,	_	_
1	_	_
]	_	_
)	_	_
rather	_	_
than	_	_
varying	_	_
Euclidean	_	_
distances	_	_
.	_	_

#103
To	_	_
this	_	_
end	_	_
,	_	_
a	_	_
threshold-based	_	_
coefficient	_	_
is	_	_
used	_	_
to	_	_
select	_	_
best	_	_
matches	_	_
.	_	_

#104
After	_	_
initial	_	_
similarity	_	_
scores	_	_
are	_	_
obtained	_	_
by	_	_
using	_	_
Eq.	_	_
(	_	_
3	_	_
)	_	_
,	_	_
hard-similarity	_	_
scores	_	_
(	_	_
these	_	_
scores	_	_
can	_	_
be	_	_
equal	_	_
to	_	_
either	_	_
0	_	_
or	_	_
wpq	_	_
)	_	_
are	_	_
determined	_	_
by	_	_
applying	_	_
a	_	_
coarse	_	_
threshold	_	_
τpq	_	_
.	_	_

#105
Practically	_	_
,	_	_
this	_	_
step	_	_
improves	_	_
our	_	_
method	_	_
by	_	_
selecting	_	_
the	_	_
best	_	_
matches	_	_
that	_	_
yield	_	_
high	_	_
confidence	_	_
scores	_	_
,	_	_
and	_	_
it	_	_
removes	_	_
possible	_	_
outliers	_	_
immediately	_	_
.	_	_

#106
Moreover	_	_
,	_	_
we	_	_
prune	_	_
5	_	_
%	_	_
of	_	_
the	_	_
codewords	_	_
according	_	_
to	_	_
their	_	_
term	_	_
frequencies	_	_
to	_	_
reduce	_	_
the	_	_
drawback	_	_
of	_	_
stop	_	_
words	_	_
[	_	_
2	_	_
]	_	_
and	_	_
to	_	_
speed	_	_
up	_	_
the	_	_
querying	_	_
.	_	_

#107
Note	_	_
that	_	_
hard-similarity	_	_
scores	_	_
(	_	_
wpq	_	_
(	_	_
.	_	_
,	_	_
.	_	_
)	_	_
>	_	_
τpq	_	_
and	_	_
hqb	_	_
=	_	_
hrb	_	_
)	_	_
are	_	_
also	_	_
weighted	_	_
by	_	_
this	_	_
frequency	_	_
term	_	_
.	_	_

#108
This	_	_
geometric	_	_
model	_	_
simply	_	_
calculates	_	_
a	_	_
histogram	_	_
using	_	_
common	_	_
parameter	_	_
distributions	_	_
of	_	_
scale	_	_
(	_	_
log	_	_
(	_	_
s̃	_	_
)	_	_
)	_	_
,	_	_
orientation	_	_
(	_	_
θ̃	_	_
)	_	_
and	_	_
translation	_	_
(	_	_
(	_	_
tx	_	_
+	_	_
ty	_	_
)	_	_
/s̃	_	_
)	_	_
between	_	_
query	_	_
candidates	_	_
of	_	_
each	_	_
frame	_	_
.	_	_

#109
Later	_	_
,	_	_
the	_	_
highest	_	_
scored	_	_
bin	_	_
(	_	_
sum	_	_
of	_	_
all	_	_
hard-similarity	_	_
scores	_	_
that	_	_
fit	_	_
the	_	_
dominant	_	_
parameter	_	_
distribution	_	_
)	_	_
yields	_	_
the	_	_
dominant	_	_
geometric	_	_
model	_	_
between	_	_
local	_	_
points	_	_
.	_	_

#110
To	_	_
this	_	_
end	_	_
,	_	_
the	_	_
dominant	_	_
value	_	_
is	_	_
set	_	_
as	_	_
a	_	_
final	_	_
local	_	_
confidence	_	_
score	_	_
for	_	_
a	_	_
frame	_	_
.	_	_

#111
B	_	_
.	_	_

#112
Global	_	_
Visual	_	_
Content	_	_
Representation	_	_
Pretrained	_	_
deep	_	_
convolutional	_	_
features	_	_
are	_	_
densely	_	_
sampled	_	_
and	_	_
reduced	_	_
by	_	_
PCA	_	_
to	_	_
lower	_	_
dimensions	_	_
.	_	_

#113
Then	_	_
,	_	_
these	_	_
features	_	_
are	_	_
aggregated	_	_
with	_	_
Fisher	_	_
Kernel	_	_
[	_	_
11	_	_
]	_	_
and	_	_
transformed	_	_
into	_	_
binary	_	_
hash	_	_
codes	_	_
.	_	_

#114
These	_	_
binary	_	_
codes	_	_
are	_	_
compared	_	_
with	_	_
an	_	_
approximate	_	_
NN	_	_
search	_	_
setting	_	_
in	_	_
Hamming	_	_
space	_	_
to	_	_
ease	_	_
the	_	_
querying	_	_
step	_	_
.	_	_

#115
Dense	_	_
Deep	_	_
Convolution	_	_
Features	_	_
.	_	_

#116
We	_	_
use	_	_
densely	_	_
sampled	_	_
pre-trained	_	_
deep	_	_
convolutional	_	_
features	_	_
fd	_	_
∈	_	_
R384	_	_
obtained	_	_
at	_	_
Alexnet-conv3	_	_
layer	_	_
[	_	_
5	_	_
]	_	_
by	_	_
discarding	_	_
zero	_	_
paddings	_	_
in	_	_
convolution	_	_
layers	_	_
.	_	_

#117
As	_	_
proved	_	_
[	_	_
5	_	_
]	_	_
–	_	_
[	_	_
7	_	_
]	_	_
,	_	_
deep	_	_
features	_	_
depict	_	_
the	_	_
semantic	_	_
content	_	_
of	_	_
a	_	_
scene	_	_
more	_	_
precisely	_	_
than	_	_
hand-crafted	_	_
features	_	_
.	_	_

#118
By	_	_
replacing	_	_
hand-crafted	_	_
features	_	_
,	_	_
we	_	_
contain	_	_
this	_	_
semantic	_	_
model	_	_
with	_	_
local	_	_
structures	_	_
to	_	_
realize	_	_
a	_	_
complete	_	_
retrieval	_	_
method	_	_
.	_	_

#119
Furthermore	_	_
,	_	_
we	_	_
select	_	_
conv3	_	_
features	_	_
to	_	_
keep	_	_
the	_	_
computational	_	_
complexity	_	_
low	_	_
.	_	_

#120
Later	_	_
,	_	_
these	_	_
densely	_	_
sampled	_	_
features	_	_
are	_	_
mapped	_	_
to	_	_
64dimensional	_	_
space	_	_
by	_	_
PCA	_	_
.	_	_

#121
There	_	_
are	_	_
two	_	_
main	_	_
reasons	_	_
:	_	_
First	_	_
,	_	_
[	_	_
7	_	_
]	_	_
shows	_	_
that	_	_
PCA-compressed	_	_
deep	_	_
features	_	_
are	_	_
robust	_	_
since	_	_
degrading	_	_
the	_	_
sparsity	_	_
of	_	_
features	_	_
on	_	_
a	_	_
different	_	_
visual	_	_
set	_	_
can	_	_
improve	_	_
their	_	_
generalization	_	_
capacity	_	_
for	_	_
unseen	_	_
examples	_	_
.	_	_

#122
Second	_	_
,	_	_
it	_	_
provides	_	_
time	_	_
advantages	_	_
in	_	_
computations	_	_
with	_	_
feature	_	_
pooling	_	_
and	_	_
voting	_	_
stages	_	_
.	_	_

#123
Feature	_	_
Pooling	_	_
and	_	_
Fast	_	_
Voting	_	_
Scheme	_	_
.	_	_

#124
Deep	_	_
features	_	_
are	_	_
aggregated	_	_
with	_	_
first-order	_	_
Fisher	_	_
Kernel	_	_
[	_	_
11	_	_
]	_	_
to	_	_
estimate	_	_
one	_	_
compact	_	_
representation	_	_
v	_	_
∈	_	_
R64×Dfk	_	_
for	_	_
each	_	_
frame	_	_
(	_	_
Dfk	_	_
is	_	_
the	_	_
number	_	_
of	_	_
Gaussian	_	_
mixture	_	_
components	_	_
)	_	_
.	_	_

#125
Since	_	_
dimensionality	_	_
does	_	_
not	_	_
allow	_	_
us	_	_
to	_	_
search	_	_
and	_	_
store	_	_
them	_	_
in	_	_
large-scale	_	_
databases	_	_
,	_	_
they	_	_
are	_	_
converted	_	_
into	_	_
binary	_	_
codes	_	_
b	_	_
by	_	_
applying	_	_
a	_	_
zero-bias	_	_
threshold	_	_
rather	_	_
than	_	_
quantization-based	_	_
approaches	_	_
.	_	_

#126
The	_	_
main	_	_
reason	_	_
to	_	_
select	_	_
a	_	_
threshold-based	_	_
approach	_	_
is	_	_
that	_	_
[	_	_
16	_	_
]	_	_
shows	_	_
that	_	_
Euclidean-based	_	_
quantization	_	_
can	_	_
be	_	_
misleading	_	_
for	_	_
high	_	_
dimensional	_	_
representations	_	_
.	_	_

#127
We	_	_
also	_	_
prove	_	_
this	_	_
assumption	_	_
in	_	_
our	_	_
experiments	_	_
.	_	_

#128
In	_	_
addition	_	_
,	_	_
even	_	_
if	_	_
converting	_	_
a	_	_
high-dimensional	_	_
descriptor	_	_
into	_	_
a	_	_
compact	_	_
binary	_	_
code	_	_
speeds	_	_
up	_	_
the	_	_
query	_	_
time	_	_
,	_	_
there	_	_
is	_	_
still	_	_
room	_	_
to	_	_
further	_	_
eliminate	_	_
the	_	_
redundant	_	_
calculations	_	_
for	_	_
our	_	_
method	_	_
.	_	_

#129
We	_	_
replace	_	_
the	_	_
standard	_	_
brute-force	_	_
binary	_	_
search	_	_
with	_	_
an	_	_
approximate	_	_
nearest	_	_
neighboring	_	_
(	_	_
NN	_	_
)	_	_
scheme	_	_
in	_	_
this	_	_
work	_	_
.	_	_

#130
In	_	_
the	_	_
proposed	_	_
method	_	_
,	_	_
initial	_	_
matched	_	_
candidates	_	_
for	_	_
global	_	_
binary	_	_
codes	_	_
are	_	_
obtained	_	_
based	_	_
on	_	_
KNN	_	_
results	_	_
in	_	_
Hamming	_	_
space	_	_
(	_	_
i.e.	_	_
,	_	_
using	_	_
inverted	_	_
index	_	_
structure	_	_
the	_	_
same	_	_
as	_	_
in	_	_
local	_	_
descriptors	_	_
)	_	_
.	_	_

#131
Later	_	_
,	_	_
full	_	_
distances	_	_
(	_	_
5	_	_
)	_	_
are	_	_
computed	_	_
by	_	_
only	_	_
comparing	_	_
these	_	_
candidates	_	_
to	_	_
improve	_	_
confidence	_	_
scores	_	_
of	_	_
query	_	_
and	_	_
reference	_	_
frames	_	_
.	_	_

#132
wb	_	_
(	_	_
b	_	_
r	_	_
,	_	_
bq	_	_
)	_	_
=	_	_
{	_	_
gh	_	_
(	_	_
b	_	_
r	_	_
,	_	_
bq	_	_
)	_	_
,	_	_
if	_	_
br	_	_
is	_	_
in	_	_
KNN	_	_
of	_	_
bq	_	_
0	_	_
,	_	_
otherwise	_	_
(	_	_
5	_	_
)	_	_
where	_	_
gh	_	_
(	_	_
.	_	_
,	_	_
.	_	_
)	_	_

#133
is	_	_
the	_	_
score	_	_
function	_	_
,	_	_
which	_	_
returns	_	_
normalized	_	_
Hamming	_	_
distance	_	_
for	_	_
two	_	_
binary	_	_
codes	_	_
(	_	_
normalized	_	_
by	_	_
the	_	_
total	_	_
number	_	_
of	_	_
bits	_	_
,	_	_
and	_	_
similarly	_	_
probabilistic	_	_
scores	_	_
are	_	_
generated	_	_
)	_	_
.	_	_

#134
Moreover	_	_
,	_	_
binary	_	_
space	_	_
is	_	_
partitioned	_	_
into	_	_
32	_	_
cluster	_	_
centers	_	_
throughout	_	_
experiments	_	_
.	_	_

#135
C.	_	_
Late	_	_
Fusion	_	_
Until	_	_
now	_	_
,	_	_
we	_	_
compute	_	_
a	_	_
set	_	_
of	_	_
visual	_	_
descriptors	_	_
and	_	_
construct	_	_
two	_	_
individual	_	_
databases	_	_
for	_	_
local	_	_
and	_	_
global	_	_
representations	_	_
by	_	_
depicting	_	_
the	_	_
same	_	_
visual	_	_
content	_	_
.	_	_

#136
The	_	_
most	_	_
similar	_	_
video	_	_
scenes	_	_
are	_	_
retrieved	_	_
separately	_	_
by	_	_
using	_	_
these	_	_
databases	_	_
.	_	_

#137
Hence	_	_
,	_	_
we	_	_
obtain	_	_
two	_	_
ranked	_	_
lists	_	_
,	_	_
as	_	_
illustrated	_	_
in	_	_
Fig.	_	_
2	_	_
for	_	_
each	_	_
query	_	_
.	_	_

#138
From	_	_
these	_	_
lists	_	_
,	_	_
our	_	_
objective	_	_
is	_	_
to	_	_
obtain	_	_
one	_	_
final	_	_
ranked	_	_
list	_	_
by	_	_
fusing	_	_
these	_	_
confidence	_	_
scores	_	_
.	_	_

#139
However	_	_
,	_	_
the	_	_
fusion	_	_
of	_	_
these	_	_
decisions	_	_
is	_	_
not	_	_
straightforward	_	_
.	_	_

#140
Even	_	_
if	_	_
confidence	_	_
scores	_	_
are	_	_
in	_	_
a	_	_
similar	_	_
range	_	_
[	_	_
0	_	_
,	_	_
1	_	_
]	_	_
,	_	_
there	_	_
is	_	_
no	_	_
common	_	_
score	_	_
characteristic	_	_
that	_	_
can	_	_
be	_	_
directly	_	_
exploited	_	_
for	_	_
all	_	_
queries	_	_
.	_	_

#141
Hence	_	_
,	_	_
confidence	_	_
scores	_	_
should	_	_
be	_	_
10	_	_
20	_	_
30	_	_
40	_	_
50	_	_
0.65	_	_
0.7	_	_
0.75	_	_
10	_	_
20	_	_
30	_	_
40	_	_
50	_	_
0.02	_	_
0.075	_	_
0.15	_	_
Fig.	_	_
2	_	_
.	_	_

#142
Top	_	_
confidence	_	_
scores	_	_
for	_	_
two	_	_
ranked	_	_
lists	_	_
obtained	_	_
by	_	_
global	_	_
(	_	_
blue	_	_
)	_	_
and	_	_
local	_	_
(	_	_
green	_	_
)	_	_
descriptors	_	_
.	_	_

#143
Red	_	_
points	_	_
indicate	_	_
the	_	_
adaptive	_	_
settling	_	_
points	_	_
determined	_	_
from	_	_
each	_	_
list	_	_
.	_	_

#144
normalized	_	_
separately	_	_
for	_	_
each	_	_
query	_	_
before	_	_
mapping	_	_
these	_	_
values	_	_
to	_	_
a	_	_
final	_	_
ranked	_	_
list	_	_
.	_	_

#145
From	_	_
these	_	_
plots	_	_
in	_	_
Fig.	_	_
2	_	_
,	_	_
saturation	_	_
of	_	_
confidence	_	_
scores	_	_
for	_	_
ranked	_	_
lists	_	_
shares	_	_
similar	_	_
characteristic	_	_
(	_	_
i.e.	_	_
,	_	_
0.75−0.65	_	_
'	_	_
0.1	_	_
and	_	_
0.15	_	_
−	_	_
0.02	_	_
'	_	_
0.13	_	_
)	_	_
.	_	_

#146
Hence	_	_
,	_	_
this	_	_
information	_	_
can	_	_
be	_	_
exploited	_	_
to	_	_
fuse	_	_
the	_	_
scores	_	_
.	_	_

#147
Therefore	_	_
,	_	_
a	_	_
settling	_	_
point	_	_
must	_	_
be	_	_
initially	_	_
determined	_	_
from	_	_
each	_	_
list	_	_
in	_	_
order	_	_
to	_	_
normalize	_	_
the	_	_
scores	_	_
.	_	_

#148
It	_	_
can	_	_
be	_	_
done	_	_
in	_	_
two	_	_
ways	_	_
:	_	_
1	_	_
)	_	_
the	_	_
last	_	_
element	_	_
of	_	_
a	_	_
list	_	_
can	_	_
be	_	_
selected	_	_
as	_	_
a	_	_
settling	_	_
point	_	_
,	_	_
and	_	_
scores	_	_
in	_	_
each	_	_
list	_	_
can	_	_
be	_	_
normalized	_	_
by	_	_
normalizing	_	_
according	_	_
to	_	_
this	_	_
value	_	_
.	_	_

#149
2	_	_
)	_	_
an	_	_
adaptive	_	_
point	_	_
is	_	_
determined	_	_
from	_	_
each	_	_
list	_	_
by	_	_
using	_	_
inner	_	_
relations	_	_
of	_	_
confidence	_	_
scores	_	_
.	_	_

#150
Indeed	_	_
,	_	_
the	_	_
second	_	_
assumption	_	_
yields	_	_
better	_	_
results	_	_
,	_	_
since	_	_
it	_	_
does	_	_
not	_	_
depend	_	_
on	_	_
the	_	_
number	_	_
of	_	_
elements	_	_
in	_	_
ranked	_	_
lists	_	_
.	_	_

#151
Similarly	_	_
,	_	_
as	_	_
in	_	_
the	_	_
assumption	_	_
of	_	_
query	_	_
expansion	_	_
[	_	_
23	_	_
]	_	_
,	_	_
scores	_	_
reflect	_	_
an	_	_
error	_	_
characteristic	_	_
after	_	_
some	_	_
points	_	_
,	_	_
and	_	_
no	_	_
content	_	_
correlation	_	_
is	_	_
expected	_	_
between	_	_
the	_	_
query	_	_
and	_	_
reference	_	_
frames	_	_
.	_	_

#152
Hence	_	_
,	_	_
our	_	_
technique	_	_
is	_	_
inspired	_	_
by	_	_
the	_	_
assumption	_	_
of	_	_
query	_	_
expansion	_	_
.	_	_

#153
For	_	_
this	_	_
purpose	_	_
,	_	_
we	_	_
iteratively	_	_
calculate	_	_
first-order	_	_
score	_	_
derivatives	_	_
between	_	_
all	_	_
two	_	_
consecutive	_	_
confidence	_	_
scores	_	_
(	_	_
i.e.	_	_
,	_	_
subtracting	_	_
one	_	_
point	_	_
from	_	_
another	_	_
)	_	_
.	_	_

#154
We	_	_
then	_	_
obtain	_	_
an	_	_
adaptively	_	_
selectable	_	_
point	_	_
where	_	_
gradient	_	_
converges	_	_
to	_	_
a	_	_
minimal	_	_
number	_	_
ε	_	_
(	_	_
e.g.	_	_
,	_	_
ε=0.01	_	_
)	_	_
after	_	_
a	_	_
period	_	_
(	_	_
after	_	_
10	_	_
elements	_	_
)	_	_
.	_	_

#155
This	_	_
point	_	_
is	_	_
accepted	_	_
as	_	_
a	_	_
settling	_	_
point	_	_
,	_	_
and	_	_
all	_	_
scores	_	_
are	_	_
normalized	_	_
by	_	_
subtracting	_	_
this	_	_
value	_	_
.	_	_

#156
Later	_	_
,	_	_
normalized	_	_
local	_	_
and	_	_
global	_	_
scores	_	_
are	_	_
merged	_	_
by	_	_
regarding	_	_
their	_	_
highest	_	_
scores	_	_
.	_	_

#157
Hence	_	_
,	_	_
the	_	_
final	_	_
ranked	_	_
list	_	_
is	_	_
able	_	_
to	_	_
preserve	_	_
both	_	_
local	_	_
structure	_	_
and	_	_
semantic	_	_
similarities	_	_
for	_	_
each	_	_
query	_	_
in	_	_
a	_	_
unified	_	_
form	_	_
.	_	_

#158
IV	_	_
.	_	_

#159
EXPERIMENTS	_	_
Our	_	_
experiments	_	_
are	_	_
conducted	_	_
on	_	_
Stanford	_	_
I2V	_	_
[	_	_
19	_	_
]	_	_
.	_	_

#160
This	_	_
dataset	_	_
is	_	_
particularly	_	_
suitable	_	_
for	_	_
our	_	_
method	_	_
since	_	_
it	_	_
contains	_	_
a	_	_
large	_	_
volume	_	_
of	_	_
videos	_	_
collected	_	_
from	_	_
diverse	_	_
news	_	_
video	_	_
archives	_	_
to	_	_
illustrate	_	_
its	_	_
actual	_	_
capacity	_	_
.	_	_

#161
As	_	_
stated	_	_
in	_	_
[	_	_
19	_	_
]	_	_
,	_	_
Stanford	_	_
I2V	_	_
dataset	_	_
is	_	_
split	_	_
into	_	_
two	_	_
versions	_	_
,	_	_
such	_	_
that	_	_
a	_	_
lighter	_	_
version	_	_
contains	_	_
a	_	_
subset	_	_
of	_	_
query	_	_
images	_	_
and	_	_
reference	_	_
videos	_	_
of	_	_
a	_	_
full	_	_
version	_	_
.	_	_

#162
Full	_	_
and	_	_
light	_	_
versions	_	_
consist	_	_
of	_	_
3801	_	_
and	_	_
1035	_	_
hours	_	_
of	_	_
videos	_	_
,	_	_
TABLE	_	_
I	_	_
APPROXIMATE	_	_
TIME	_	_
(	_	_
SEC	_	_
)	_	_
SPENT	_	_
ON	_	_
THE	_	_
REPRESENTATION	_	_
STAGE	_	_
PER	_	_
FRAME	_	_
ON	_	_
A	_	_
SINGLE	_	_
CPU	_	_
CORE	_	_
.	_	_

#163
Local	_	_
Descriptor	_	_
Keypoint	_	_
Descriptor	_	_
Indexing	_	_
Total	_	_
0.223	_	_
0.410	_	_
1.331	_	_
1.996	_	_
Global	_	_
Descriptor	_	_
Descriptor	_	_
PCA	_	_
Fisher	_	_
Kernel	_	_
Total	_	_
1.163	_	_
0.005	_	_
0.193	_	_
1.187	_	_
respectively	_	_
(	_	_
Please	_	_
do	_	_
not	_	_
confuse	_	_
SI2V-4M	_	_
or	_	_
SI2V-600K	_	_
in	_	_
[	_	_
21	_	_
]	_	_
)	_	_
.	_	_

#164
Moreover	_	_
,	_	_
the	_	_
amount	_	_
of	_	_
query	_	_
images	_	_
is	_	_
decreased	_	_
by	_	_
factor	_	_
3	_	_
,	_	_
from	_	_
229	_	_
to	_	_
78	_	_
.	_	_

#165
The	_	_
provided	_	_
script	_	_
measures	_	_
the	_	_
performance	_	_
in	_	_
the	_	_
evaluation	_	_
step	_	_
,	_	_
and	_	_
the	_	_
mean	_	_
Average	_	_
Precision	_	_
(	_	_
MAP	_	_
)	_	_
scores	_	_
are	_	_
reported	_	_
.	_	_

#166
Computation	_	_
Load	_	_
.	_	_

#167
The	_	_
main	_	_
objective	_	_
is	_	_
to	_	_
accomplish	_	_
a	_	_
method	_	_
that	_	_
computation	_	_
load	_	_
and	_	_
query	_	_
processing	_	_
time	_	_
are	_	_
moderate	_	_
while	_	_
obtaining	_	_
state-of-the-art	_	_
retrieval	_	_
accuracy	_	_
for	_	_
large-scale	_	_
data	_	_
.	_	_

#168
Table	_	_
I	_	_
illustrates	_	_
average	_	_
time	_	_
requirements	_	_
per	_	_
frame	_	_
.	_	_

#169
Observe	_	_
that	_	_
it	_	_
is	_	_
close	_	_
to	_	_
real-time	_	_
(	_	_
assume	_	_
that	_	_
1fps	_	_
keyframe	_	_
is	_	_
processed	_	_
)	_	_
.	_	_

#170
This	_	_
feature	_	_
allows	_	_
us	_	_
to	_	_
analyze	_	_
the	_	_
visual	_	_
content	_	_
of	_	_
this	_	_
dataset	_	_
within	_	_
several	_	_
days	_	_
on	_	_
cheap	_	_
CPU	_	_
servers	_	_
.	_	_

#171
In	_	_
similar	_	_
,	_	_
memory	_	_
requirement	_	_
is	_	_
negligible	_	_
since	_	_
all	_	_
descriptors	_	_
are	_	_
converted	_	_
to	_	_
compact	_	_
hash	_	_
codes	_	_
.	_	_

#172
Impact	_	_
of	_	_
the	_	_
Parameters	_	_
.	_	_

#173
Our	_	_
framework	_	_
is	_	_
composed	_	_
of	_	_
local	_	_
and	_	_
global	_	_
ranking	_	_
stages	_	_
.	_	_

#174
Hence	_	_
,	_	_
first	_	_
,	_	_
we	_	_
need	_	_
to	_	_
obtain	_	_
the	_	_
best	_	_
parameters	_	_
empirically	_	_
for	_	_
each	_	_
stage	_	_
.	_	_

#175
For	_	_
local	_	_
visual	_	_
representations	_	_
,	_	_
τpq	_	_
defines	_	_
error	_	_
tolerance	_	_
for	_	_
PQ	_	_
signature	_	_
matches	_	_
.	_	_

#176
For	_	_
small	_	_
values	_	_
,	_	_
noisy	_	_
versions	_	_
of	_	_
valid	_	_
signatures	_	_
can	_	_
be	_	_
estimated	_	_
correctly	_	_
.	_	_

#177
However	_	_
,	_	_
this	_	_
reduces	_	_
the	_	_
discriminative	_	_
power	_	_
of	_	_
signatures	_	_
and	_	_
introduces	_	_
lots	_	_
of	_	_
outliers	_	_
.	_	_

#178
Therefore	_	_
,	_	_
we	_	_
set	_	_
Dbow	_	_
as	_	_
5K	_	_
and	_	_
10K	_	_
to	_	_
obtain	_	_
trade-offs	_	_
in	_	_
terms	_	_
of	_	_
retrieval	_	_
accuracy	_	_
and	_	_
query	_	_
processing	_	_
time	_	_
for	_	_
τpq	_	_
.	_	_

#179
Fig.	_	_
4	_	_
illustrates	_	_
mAP	_	_
scores	_	_
for	_	_
3	_	_
4	_	_
5	_	_
6	_	_
0.1	_	_
0.2	_	_
0.3	_	_
0.4	_	_
0.5	_	_
0.6	_	_
k	_	_
m	_	_
A	_	_
P	_	_
(	_	_
%	_	_
)	_	_
Dfk=64	_	_
Dfk=128	_	_
Dfk=256	_	_
3	_	_
4	_	_
5	_	_
6	_	_
0.1	_	_
0.2	_	_
0.3	_	_
0.4	_	_
0.5	_	_
0.6	_	_
k	_	_
m	_	_
A	_	_
P	_	_
(	_	_
%	_	_
)	_	_
Fig.	_	_
3	_	_
.	_	_

#180
Impact	_	_
of	_	_
k	_	_
values	_	_
for	_	_
binary	_	_
NN	_	_
voting	_	_
.	_	_

#181
Results	_	_
for	_	_
light	_	_
(	_	_
upper	_	_
)	_	_
and	_	_
full	_	_
(	_	_
lower	_	_
)	_	_
sets	_	_
are	_	_
reported	_	_
.	_	_

#182
top	_	_
100	_	_
ranked	_	_
scenes	_	_
based	_	_
on	_	_
various	_	_
τpq	_	_
values	_	_
.	_	_

#183
From	_	_
the	_	_
results	_	_
,	_	_
settling	_	_
τpq	_	_
around	_	_
0.72	_	_
yields	_	_
the	_	_
best	_	_
performance	_	_
for	_	_
all	_	_
configurations	_	_
.	_	_

#184
Another	_	_
important	_	_
observation	_	_
is	_	_
that	_	_
5K	_	_
scores	_	_
drop	_	_
down	_	_
drastically	_	_
for	_	_
the	_	_
full	_	_
version	_	_
of	_	_
this	_	_
dataset	_	_
.	_	_

#185
This	_	_
result	_	_
can	_	_
be	_	_
demonstrated	_	_
by	_	_
the	_	_
fact	_	_
that	_	_
the	_	_
discriminative	_	_
power	_	_
of	_	_
this	_	_
representation	_	_
is	_	_
not	_	_
adequate	_	_
for	_	_
smaller	_	_
values	_	_
of	_	_
Dbow	_	_
.	_	_

#186
Moreover	_	_
,	_	_
a	_	_
larger	_	_
cluster	_	_
size	_	_
Dbow	_	_
ultimately	_	_
provides	_	_
an	_	_
advantage	_	_
in	_	_
the	_	_
querying	_	_
stage	_	_
by	_	_
reducing	_	_
operations	_	_
due	_	_
to	_	_
an	_	_
inverted	_	_
index	_	_
structure	_	_
.	_	_

#187
For	_	_
global	_	_
visual	_	_
representations	_	_
,	_	_
Dfk	_	_
and	_	_
k	_	_
are	_	_
two	_	_
parameters	_	_
that	_	_
users	_	_
need	_	_
to	_	_
define	_	_
.	_	_

#188
We	_	_
select	_	_
64	_	_
,	_	_
128	_	_
and	_	_
256	_	_
for	_	_
the	_	_
number	_	_
of	_	_
Gaussian	_	_
mixture	_	_
components	_	_
(	_	_
Dfk	_	_
)	_	_
.	_	_

#189
Since	_	_
k	_	_
value	_	_
determines	_	_
redundancy	_	_
in	_	_
approximate	_	_
binary	_	_
code	_	_
search	_	_
,	_	_
accuracy	_	_
and	_	_
query	_	_
processing	_	_
time	_	_
are	_	_
influenced	_	_
inversely	_	_
from	_	_
this	_	_
value	_	_
.	_	_

#190
The	_	_
accuracy	_	_
saturates	_	_
at	_	_
k	_	_
=	_	_
5	_	_
for	_	_
all	_	_
configurations	_	_
,	_	_
as	_	_
shown	_	_
in	_	_
Fig.	_	_
3	_	_
.	_	_

#191
This	_	_
configuration	_	_
speeds	_	_
up	_	_
search	_	_
time	_	_
approximately	_	_
6x	_	_
faster	_	_
.	_	_

#192
As	_	_
expected	_	_
,	_	_
increasing	_	_
the	_	_
number	_	_
of	_	_
mixture	_	_
components	_	_
(	_	_
Dfk	_	_
)	_	_
restores	_	_
accuracy	_	_
for	_	_
both	_	_
versions	_	_
.	_	_

#193
However	_	_
,	_	_
the	_	_
total	_	_
number	_	_
of	_	_
comparisons	_	_
,	_	_
as	_	_
well	_	_
as	_	_
storage	_	_
requirements	_	_
,	_	_
becomes	_	_
more	_	_
extensive	_	_
.	_	_

#194
Impact	_	_
of	_	_
Late	_	_
Fusion	_	_
.	_	_

#195
We	_	_
calculate	_	_
mAP	_	_
scores	_	_
after	_	_
fusing	_	_
confidence	_	_
scores	_	_
of	_	_
local	_	_
and	_	_
global	_	_
descriptors	_	_
in	_	_
various	_	_
combinations	_	_
.	_	_

#196
Table	_	_
II	_	_
shows	_	_
that	_	_
late	_	_
fusion	_	_
boosts	_	_
retrieval	_	_
accuracy	_	_
around	_	_
5	_	_
%	_	_
compared	_	_
to	_	_
their	_	_
individual	_	_
baselines	_	_
estimated	_	_
by	_	_
local	_	_
and	_	_
global	_	_
representations	_	_
(	_	_
i.e.	_	_
,	_	_
Fig.	_	_
3	_	_
and	_	_
Fig.	_	_
4	_	_
)	_	_
.	_	_

#197
Also	_	_
,	_	_
the	_	_
combination	_	_
of	_	_
5K-256	_	_
obtains	_	_
the	_	_
best	_	_
mAP	_	_
accuracy	_	_
for	_	_
the	_	_
light	_	_
set	_	_
.	_	_

#198
However	_	_
,	_	_
scores	_	_
are	_	_
decreased	_	_
for	_	_
the	_	_
full	_	_
version	_	_
due	_	_
to	_	_
the	_	_
failure	_	_
of	_	_
PQ	_	_
.	_	_

#199
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
10K-256	_	_
combination	_	_
yields	_	_
compatible	_	_
scores	_	_
for	_	_
both	_	_
full	_	_
and	_	_
light	_	_
versions	_	_
.	_	_

#200
In	_	_
the	_	_
querying	_	_
stage	_	_
,	_	_
the	_	_
combination	_	_
of	_	_
10K-64	_	_
yields	_	_
the	_	_
fastest	_	_
response	_	_
time	_	_
.	_	_

#201
Since	_	_
global	_	_
representations	_	_
are	_	_
also	_	_
stored	_	_
in	_	_
an	_	_
inverted	_	_
index	_	_
structure	_	_
,	_	_
the	_	_
use	_	_
of	_	_
high-dimensional	_	_
representation	_	_
increases	_	_
the	_	_
sparsity	_	_
of	_	_
codewords	_	_
.	_	_

#202
The	_	_
number	_	_
of	_	_
computations	_	_
is	_	_
reduced	_	_
compared	_	_
to	_	_
5K	_	_
representation	_	_
.	_	_

#203
Baselines	_	_
.	_	_

#204
We	_	_
compare	_	_
our	_	_
performance	_	_
with	_	_
the	_	_
reported	_	_
baseline	_	_
results	_	_
in	_	_
the	_	_
literature	_	_
(	_	_
Table	_	_
II	_	_
)	_	_
.	_	_

#205
Initial	_	_
database	_	_
performance	_	_
[	_	_
19	_	_
]	_	_
on	_	_
light	_	_
and	_	_
full	_	_
versions	_	_
are	_	_
approximately	_	_
46	_	_
%	_	_
and	_	_
43	_	_
%	_	_
for	_	_
mAP	_	_
@	_	_
100	_	_
.	_	_

#206
Later	_	_
,	_	_
even	_	_
if	_	_
worse	_	_
perfor0.66	_	_
0.68	_	_
0.7	_	_
0.72	_	_
0.74	_	_
0.76	_	_
0.5	_	_
0.55	_	_
0.6	_	_
0.65	_	_
0.7	_	_
τpq	_	_
m	_	_
A	_	_
P	_	_
(	_	_
%	_	_
)	_	_
Dbow=5K-Light	_	_
Dbow=5K-Full	_	_
Dbow=10K-Light	_	_
Dbow=10K-Full	_	_
Fig.	_	_
4	_	_
.	_	_

#207
Impact	_	_
of	_	_
τpq	_	_
for	_	_
top	_	_
100	_	_
retrieved	_	_
scenes	_	_
.	_	_

#208
Results	_	_
are	_	_
reported	_	_
for	_	_
local	_	_
descriptors	_	_
.	_	_

#209
TABLE	_	_
II	_	_
LATE	_	_
FUSION	_	_
RESULTS	_	_
ON	_	_
SI2V	_	_
DATASET	_	_
.	_	_

#210
LATENCY	_	_
(	_	_
SEC	_	_
)	_	_
IS	_	_
MEASURED	_	_
FOR	_	_
1000H	_	_
REFERENCE	_	_
VIDEOS	_	_
PER	_	_
QUERY	_	_
.	_	_

#211
BEST	_	_
RESULTS	_	_
IN	_	_
EACH	_	_
PART	_	_
ARE	_	_
IN	_	_
BOLD	_	_
.	_	_

#212
Light	_	_
Dataset	_	_
Full	_	_
Dataset	_	_
Latency	_	_
Per	_	_
1000h	_	_
[	_	_
Dbow-Dfk	_	_
]	_	_
mAP	_	_
mAP	_	_
@	_	_
1	_	_
mAP	_	_
mAP	_	_
@	_	_
1	_	_
EH	_	_
[	_	_
24	_	_
]	_	_
-	_	_
-	_	_
0.15	_	_
0.37	_	_
PHOG	_	_
[	_	_
24	_	_
]	_	_
-	_	_
-	_	_
0.22	_	_
0.45	_	_
SCFV	_	_
[	_	_
19	_	_
]	_	_
0.46	_	_
0.73	_	_
0.43	_	_
0.64	_	_
12.75	_	_
sec	_	_
BF-PI	_	_
[	_	_
21	_	_
]	_	_
≈0.68	_	_
-	_	_
≈0.65	_	_
-	_	_
≈	_	_
4.3	_	_
sec	_	_
RMAC	_	_
[	_	_
25	_	_
]	_	_
-	_	_
-	_	_
≈0.66	_	_
-	_	_
ours	_	_
[	_	_
5K	_	_
-	_	_
64	_	_
]	_	_
0.667	_	_
0.769	_	_
0.582	_	_
0.716	_	_
17.11	_	_
sec	_	_
ours	_	_
[	_	_
5K	_	_
-	_	_
128	_	_
]	_	_
0.695	_	_
0.794	_	_
0.601	_	_
0.755	_	_
18.237	_	_
sec	_	_
ours	_	_
[	_	_
5K	_	_
-	_	_
256	_	_
]	_	_
0.707	_	_
0.782	_	_
0.622	_	_
0.755	_	_
19.253	_	_
sec	_	_
ours	_	_
[	_	_
10K	_	_
-	_	_
64	_	_
]	_	_
0.668	_	_
0.769	_	_
0.644	_	_
0.764	_	_
8.675	_	_
sec	_	_
ours	_	_
[	_	_
10K	_	_
-	_	_
128	_	_
]	_	_
0.679	_	_
0.782	_	_
0.663	_	_
0.786	_	_
9.802	_	_
sec	_	_
ours	_	_
[	_	_
10K	_	_
-	_	_
256	_	_
]	_	_
0.700	_	_
0.782	_	_
0.670	_	_
0.777	_	_
10.809	_	_
sec	_	_
mance	_	_
is	_	_
achieved	_	_
,	_	_
authors	_	_
present	_	_
simple	_	_
yet	_	_
somehow	_	_
effective	_	_
global	_	_
representations	_	_
[	_	_
24	_	_
]	_	_
.	_	_

#213
More	_	_
recently	_	_
,	_	_
[	_	_
21	_	_
]	_	_
achieves	_	_
an	_	_
additional	_	_
21	_	_
%	_	_
mAP	_	_
improvement	_	_
compared	_	_
to	_	_
baseline	_	_
scores	_	_
by	_	_
using	_	_
a	_	_
shot-based	_	_
feature	_	_
aggregation	_	_
technique	_	_
.	_	_

#214
RMAC	_	_
based	_	_
deep	_	_
feature	_	_
pooling	_	_
is	_	_
also	_	_
adopted	_	_
[	_	_
25	_	_
]	_	_
.	_	_

#215
Lastly	_	_
,	_	_
the	_	_
latency	_	_
of	_	_
[	_	_
21	_	_
]	_	_
might	speculation	_
be	_	_
better	_	_
than	_	_
our	_	_
method	_	_
due	_	_
to	_	_
promoting	_	_
frame-based	_	_
assumption	_	_
to	_	_
shot-based	_	_
assumption	_	_
.	_	_

#216
However	_	_
,	_	_
remark	_	_
that	_	_
shot-based	_	_
features	_	_
introduce	_	_
additional	_	_
workloads	_	_
for	_	_
offline	_	_
computations	_	_
.	_	_

#217
Notice	_	_
that	_	_
our	_	_
method	_	_
obtains	_	_
state-of-the-art	_	_
performance	_	_
on	_	_
SI2V	_	_
dataset	_	_
.	_	_

#218
Updating	_	_
the	_	_
Ground	_	_
Truth	_	_
Annotations	_	_
.	_	_

#219
We	_	_
update	_	_
ground	_	_
truth	_	_
annotations	_	_
for	_	_
both	_	_
full	_	_
and	_	_
light	_	_
versions	_	_
of	_	_
SI2V	_	_
dataset	_	_
.	_	_

#220
These	_	_
annotations	_	_
are	_	_
unveiled	_	_
with	_	_
our	_	_
retrieval	_	_
results	_	_
(	_	_
https	_	_
:	_	_
//github.com/savasozkan/i2v	_	_
)	_	_
.	_	_

#221
Annotation	_	_
pipeline	_	_
of	_	_
SI2V	_	_
dataset	_	_
[	_	_
19	_	_
]	_	_
relies	_	_
on	_	_
an	_	_
automated	_	_
annotation	_	_
process	_	_
,	_	_
as	_	_
explained	_	_
by	_	_
the	_	_
authors	_	_
.	_	_

#222
Precisely	_	_
,	_	_
reference	_	_
videos	_	_
candidates	_	_
are	_	_
initially	_	_
pruned	_	_
with	_	_
a	_	_
time	_	_
constraint	_	_
(	_	_
based	_	_
on	_	_
time	_	_
tag	_	_
of	_	_
queries	_	_
)	_	_
,	_	_
and	_	_
a	_	_
feature-based	_	_
matching	_	_
technique	_	_
is	_	_
utilized	_	_
before	_	_
any	_	_
human	_	_
visual	_	_
intervention	_	_
.	_	_

#223
As	_	_
a	_	_
result	_	_
,	_	_
some	_	_
of	_	_
the	_	_
scenes	_	_
might	speculation	_
be	_	_
discarded	_	_
unintentionally	_	_
from	_	_
annotation	_	_
lists	_	_
.	_	_

#224
Therefore	_	_
,	_	_
we	_	_
manually	_	_
examine	_	_
our	_	_
top	_	_
retrieval	_	_
results	_	_
(	_	_
up	_	_
to	_	_
20	_	_
scenes	_	_
per	_	_
query	_	_
)	_	_
and	_	_
find	_	_
out	_	_
that	_	_
some	_	_
of	_	_
the	_	_
retrieved	_	_
results	_	_
are	_	_
non-annotated	_	_
in	_	_
the	_	_
ground	_	_
truth	_	_
,	_	_
even	_	_
if	_	_
they	_	_
have	_	_
strong	_	_
semantic	_	_
analogies	_	_
and	_	_
visual	_	_
copies	_	_
with	_	_
query	_	_
images	_	_
.	_	_

#225
We	_	_
illustrate	_	_
some	_	_
of	_	_
the	_	_
scene	_	_
samples	_	_
in	_	_
Fig.	_	_
1	_	_
.	_	_

#226
Table	_	_
III	_	_
shows	_	_
mAP	_	_
scores	_	_
recalculated	_	_
with	_	_
our	_	_
updated	_	_
ground	_	_
truth	_	_
annotations	_	_
.	_	_

#227
The	_	_
results	_	_
introduce	_	_
additional	_	_
5	_	_
%	_	_
improvements	_	_
compared	_	_
to	_	_
Table	_	_
II	_	_
for	_	_
light	_	_
version	_	_
of	_	_
dataset	_	_
.	_	_

#228
This	_	_
result	_	_
is	_	_
profoundly	_	_
critical	_	_
since	_	_
the	_	_
actual	_	_
performance	_	_
of	_	_
our	_	_
method	_	_
is	_	_
even	_	_
beyond	_	_
the	_	_
reported	_	_
performance	_	_
in	_	_
the	_	_
literature	_	_
.	_	_

#229
Moreover	_	_
,	_	_
although	_	_
there	_	_
is	_	_
a	_	_
noticeable	_	_
performance	_	_
increase	_	_
for	_	_
the	_	_
light	_	_
set	_	_
,	_	_
this	_	_
increase	_	_
is	_	_
not	_	_
as	_	_
much	_	_
for	_	_
the	_	_
full	_	_
version	_	_
.	_	_

#230
The	_	_
reason	_	_
is	_	_
that	_	_
the	_	_
selection	_	_
capacity	_	_
of	_	_
global	_	_
binary	_	_
representation	_	_
saturates	_	_
for	_	_
the	_	_
larger	_	_
set	_	_
,	_	_
as	_	_
explained	_	_
.	_	_

#231
This	_	_
notion	_	_
validates	_	_
the	_	_
importance	_	_
of	_	_
the	_	_
joint	_	_
use	_	_
of	_	_
local	_	_
and	_	_
global	_	_
representations	_	_
for	_	_
retrieval	_	_
tasks	_	_
.	_	_

#232
To	_	_
make	_	_
fair	_	_
comparisons	_	_
,	_	_
we	_	_
also	_	_
implement	_	_
and	_	_
test	_	_
the	_	_
baseline	_	_
method	_	_
proposed	_	_
in	_	_
[	_	_
19	_	_
]	_	_
,	_	_
[	_	_
24	_	_
]	_	_
on	_	_
updated	_	_
ground	_	_
truth	_	_
annotations	_	_
.	_	_

#233
From	_	_
the	_	_
results	_	_
,	_	_
it	_	_
provides	_	_
only	_	_
2	_	_
%	_	_
and	_	_
TABLE	_	_
III	_	_
LATE	_	_
FUSION	_	_
MAP	_	_
AFTER	_	_
UPDATING	_	_
THE	_	_
GROUND	_	_
TRUTH	_	_
ANNOTATIONS	_	_
.	_	_

#234
BEST	_	_
RESULTS	_	_
IN	_	_
EACH	_	_
PART	_	_
ARE	_	_
IN	_	_
BOLD	_	_
.	_	_

#235
Light	_	_
Dataset	_	_
Full	_	_
Dataset	_	_
[	_	_
Dbow-Dfk	_	_
]	_	_
mAP	_	_
mAP	_	_
@	_	_
1	_	_
mAP	_	_
mAP	_	_
@	_	_
1	_	_
[	_	_
5K	_	_
-	_	_
64	_	_
]	_	_
0.697	_	_
0.794	_	_
0.577	_	_
0.720	_	_
[	_	_
5K	_	_
-	_	_
128	_	_
]	_	_
0.735	_	_
0.833	_	_
0.607	_	_
0.755	_	_
[	_	_
5K	_	_
-	_	_
256	_	_
]	_	_
0.755	_	_
0.846	_	_
0.624	_	_
0.764	_	_
[	_	_
10K	_	_
-	_	_
64	_	_
]	_	_
0.708	_	_
0.807	_	_
0.648	_	_
0.768	_	_
[	_	_
10K	_	_
-	_	_
128	_	_
]	_	_
0.729	_	_
0.820	_	_
0.667	_	_
0.786	_	_
[	_	_
10K	_	_
-	_	_
256	_	_
]	_	_
0.755	_	_
0.833	_	_
0.681	_	_
0.790	_	_
EH	_	_
[	_	_
24	_	_
]	_	_
-	_	_
-	_	_
0.19	_	_
0.42	_	_
SCFV	_	_
[	_	_
19	_	_
]	_	_
0.48	_	_
0.76	_	_
0.44	_	_
0.68	_	_
1	_	_
%	_	_
additional	_	_
improvement	_	_
for	_	_
[	_	_
19	_	_
]	_	_
while	_	_
4	_	_
%	_	_
improvement	_	_
is	_	_
obtained	_	_
for	_	_
[	_	_
24	_	_
]	_	_
.	_	_

#236
V.	_	_
CONCLUSION	_	_
In	_	_
this	_	_
work	_	_
,	_	_
we	_	_
introduce	_	_
a	_	_
visual	_	_
search	_	_
method	_	_
for	_	_
large-scale	_	_
visual	_	_
retrieval	_	_
task	_	_
.	_	_

#237
It	_	_
exploits	_	_
local	_	_
and	_	_
global	_	_
descriptors	_	_
together	_	_
to	_	_
represent	_	_
visual	_	_
data	_	_
.	_	_

#238
The	_	_
primary	_	_
objective	_	_
of	_	_
the	_	_
proposed	_	_
method	_	_
is	_	_
to	_	_
obtain	_	_
moderate	_	_
computation	_	_
load	_	_
and	_	_
query	_	_
time	_	_
for	_	_
large-scale	_	_
datasets	_	_
.	_	_

#239
Furthermore	_	_
,	_	_
performance	_	_
is	_	_
improved	_	_
compared	_	_
to	_	_
baselines	_	_
.	_	_

#240
We	_	_
present	_	_
critical	_	_
contributions	_	_
to	_	_
the	_	_
techniques	_	_
for	_	_
visual	_	_
representation	_	_
and	_	_
feature	_	_
hashing	_	_
throughout	_	_
the	_	_
paper	_	_
.	_	_

#241
In	_	_
addition	_	_
,	_	_
we	_	_
propose	_	_
a	_	_
novel	_	_
technique	_	_
to	_	_
fuse	_	_
local	_	_
feature-based	_	_
scores	_	_
and	_	_
deep	_	_
global	_	_
scores	_	_
as	_	_
a	_	_
late	_	_
fusion	_	_
step	_	_
.	_	_

#242
To	_	_
show	_	_
the	_	_
superiority	_	_
of	_	_
our	_	_
method	_	_
,	_	_
experiments	_	_
are	_	_
conducted	_	_
on	_	_
Stanford	_	_
I2V	_	_
dataset	_	_
.	_	_

#243
As	_	_
explained	_	_
,	_	_
it	_	_
achieves	_	_
the	_	_
state-of-the-art	_	_
mAP	_	_
performance	_	_
in	_	_
the	_	_
literature	_	_
.	_	_

#244
Moreover	_	_
,	_	_
we	_	_
update	_	_
ground	_	_
truth	_	_
annotations	_	_
for	_	_
Stanford	_	_
I2V	_	_
based	_	_
on	_	_
the	_	_
retrieval	_	_
results	_	_
of	_	_
the	_	_
proposed	_	_
method	_	_
.	_	_

#245
The	_	_
final	_	_
results	_	_
show	_	_
that	_	_
the	_	_
actual	_	_
performance	_	_
of	_	_
our	_	_
method	_	_
is	_	_
much	_	_
better	_	_
after	_	_
updated	_	_
ground	_	_
truth	_	_
annotations	_	_
are	_	_
used	_	_
.	_	_

#246
ACKNOWLEDGMENT	_	_
The	_	_
authors	_	_
gratefully	_	_
acknowledge	_	_
the	_	_
support	_	_
of	_	_
NVIDIA	_	_
Corporation	_	_
with	_	_
the	_	_
donation	_	_
of	_	_
GPUs	_	_
used	_	_
for	_	_
this	_	_
research	_	_
.	_	_