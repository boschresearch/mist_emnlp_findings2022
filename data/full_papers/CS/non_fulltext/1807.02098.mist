#0
MAT-CNN-SOPC	_	_
:	_	_
Motionless	_	_
Analysis	_	_
of	_	_
Traffic	_	_
Using	_	_
Convolutional	_	_
Neural	_	_
Networks	_	_
on	_	_
System-On-a-Programmable-Chip	_	_
Somdip	_	_
Dey	_	_
,	_	_
Grigorios	_	_
Kalliatakis	_	_
,	_	_
Sangeet	_	_
Saha	_	_
,	_	_
Amit	_	_
Kumar	_	_
Singh	_	_
,	_	_
Shoaib	_	_
Ehsan	_	_
,	_	_
Klaus	_	_
McDonald-Maier	_	_
Embedded	_	_
and	_	_
Intelligent	_	_
Systems	_	_
Laboratory	_	_
University	_	_
of	_	_
Essex	_	_
Colchester	_	_
,	_	_
UK	_	_
{	_	_
somdip.dey	_	_
,	_	_
gkallia	_	_
,	_	_
sangeet.saha	_	_
,	_	_
a.k.singh	_	_
,	_	_
sehsan	_	_
,	_	_
kdm	_	_
}	_	_
@	_	_
essex.ac.uk	_	_
Abstract—Intelligent	_	_
Transportation	_	_
Systems	_	_
(	_	_
ITS	_	_
)	_	_
have	_	_
become	_	_
an	_	_
important	_	_
pillar	_	_
in	_	_
modern	_	_
“smart	_	_
city”	_	_
framework	_	_
which	_	_
demands	_	_
intelligent	_	_
involvement	_	_
of	_	_
machines	_	_
.	_	_

#1
Traffic	_	_
load	_	_
recognition	_	_
can	_	_
be	_	_
categorized	_	_
as	_	_
an	_	_
important	_	_
and	_	_
challenging	_	_
issue	_	_
for	_	_
such	_	_
systems	_	_
.	_	_

#2
Recently	_	_
,	_	_
Convolutional	_	_
Neural	_	_
Network	_	_
(	_	_
CNN	_	_
)	_	_
models	_	_
have	_	_
drawn	_	_
considerable	_	_
amount	_	_
of	_	_
interest	_	_
in	_	_
many	_	_
areas	_	_
such	_	_
as	_	_
weather	_	_
classification	_	_
,	_	_
human	_	_
rights	_	_
violation	_	_
detection	_	_
through	_	_
images	_	_
,	_	_
due	_	_
to	_	_
its	_	_
accurate	_	_
prediction	_	_
capabilities	_	_
.	_	_

#3
This	_	_
work	_	_
tackles	_	_
real-life	_	_
traffic	_	_
load	_	_
recognition	_	_
problem	_	_
on	_	_
System-On-a-Programmable-Chip	_	_
(	_	_
SOPC	_	_
)	_	_
platform	_	_
and	_	_
coin	_	_
it	_	_
as	_	_
MAT-CNN-SOPC	_	_
,	_	_
which	_	_
uses	_	_
an	_	_
intelligent	_	_
re-training	_	_
mechanism	_	_
of	_	_
the	_	_
CNN	_	_
with	_	_
known	_	_
environments	_	_
.	_	_

#4
The	_	_
proposed	_	_
methodology	_	_
is	_	_
capable	_	_
of	_	_
enhancing	_	_
the	_	_
efficacy	_	_
of	_	_
the	_	_
approach	_	_
by	_	_
2.44x	_	_
in	_	_
comparison	_	_
to	_	_
the	_	_
state-of-art	_	_
and	_	_
proven	_	_
through	_	_
experimental	_	_
analysis	_	_
.	_	_

#5
We	_	_
have	_	_
also	_	_
introduced	_	_
a	_	_
mathematical	_	_
equation	_	_
,	_	_
which	_	_
is	_	_
capable	_	_
of	_	_
quantifying	_	_
the	_	_
suitability	_	_
of	_	_
using	_	_
different	_	_
CNN	_	_
models	_	_
over	_	_
the	_	_
other	_	_
for	_	_
a	_	_
particular	_	_
application	_	_
based	_	_
implementation	_	_
.	_	_

#6
Index	_	_
Terms—Convolutional	_	_
neural	_	_
network	_	_
(	_	_
CNN	_	_
)	_	_
,	_	_
traffic	_	_
analysis	_	_
,	_	_
traffic	_	_
density	_	_
,	_	_
transfer	_	_
learning	_	_
,	_	_
system-on-a-programmable-chip	_	_
(	_	_
SOPC	_	_
)	_	_
.	_	_

#7
I.	_	_
INTRODUCTION	_	_

#8
Some	_	_
of	_	_
the	_	_
popular	_	_
ways	_	_
of	_	_
traffic	_	_
monitoring	_	_
and	_	_
analysis	_	_
for	_	_
categorization	_	_
of	_	_
traffic	_	_
load	_	_
is	_	_
either	_	_
using	_	_
vehicle	_	_
based	_	_
assess	_	_
method	_	_
[	_	_
1	_	_
]	_	_
–	_	_
[	_	_
8	_	_
]	_	_
or	_	_
a	_	_
holistic	_	_
approach	_	_
[	_	_
9	_	_
]	_	_
–	_	_
[	_	_
12	_	_
]	_	_
.	_	_

#9
But	_	_
analysis	_	_
of	_	_
traffic	_	_
using	_	_
these	_	_
popular	_	_
methods	_	_
require	_	_
high	_	_
frame	_	_
rate	_	_
videos	_	_
with	_	_
a	_	_
stable	_	_
environmental	_	_
condition	_	_
,	_	_
which	_	_
could	_	_
be	_	_
the	_	_
biggest	_	_
limiting	_	_
factor	_	_
in	_	_
many	_	_
places	_	_
.	_	_

#10
Without	_	_
these	_	_
conditions	_	_
being	_	_
met	_	_
[	_	_
8	_	_
]	_	_
,	_	_
[	_	_
13	_	_
]	_	_
–	_	_
[	_	_
15	_	_
]	_	_
,	_	_
reliable	_	_
motion	_	_
features	_	_
can	_	_
not	_	_
be	_	_
extracted	_	_
,	_	_
which	_	_
might	speculation	_
result	_	_
in	_	_
corrupted	_	_
output	_	_
.	_	_

#11
Because	_	_
of	_	_
large-scale	_	_
camera	_	_
network	_	_
not	_	_
being	_	_
able	_	_
to	_	_
stream	_	_
and	_	_
store	_	_
high-frame	_	_
rate	_	_
videos	_	_
gathered	_	_
by	_	_
a	_	_
network	_	_
of	_	_
interconnected	_	_
cameras	_	_
due	_	_
to	_	_
bandwidth	_	_
limitation	_	_
and	_	_
limited	_	_
on-board	_	_
storage	_	_
capacity	_	_
,	_	_
streaming	_	_
low-frame	_	_
videos	_	_
on	_	_
these	_	_
camera	_	_
is	_	_
very	_	_
common	_	_
.	_	_

#12
In	_	_
many	_	_
cases	_	_
when	_	_
these	_	_
cameras	_	_
stream	_	_
over	_	_
a	_	_
WIFI	_	_
network	_	_
,	_	_
it	_	_
is	_	_
often	_	_
difficult	_	_
to	_	_
stream	_	_
more	_	_
than	_	_
2	_	_
frames	_	_
per	_	_
second	_	_
due	_	_
to	_	_
the	_	_
limited	_	_
bandwidth	_	_
of	_	_
the	_	_
network	_	_
[	_	_
8	_	_
]	_	_
,	_	_
[	_	_
14	_	_
]	_	_
.	_	_

#13
Moreover	_	_
due	_	_
to	_	_
cost	_	_
constraint	_	_
of	_	_
such	_	_
interconnected	_	_
camera	_	_
networks	_	_
and	_	_
associated	_	_
servers	_	_
,	_	_
many	_	_
developing	_	_
countries	_	_
might	speculation	_
not	_	_
be	_	_
able	_	_
to	_	_
adopt	_	_
and	_	_
implement	_	_
such	_	_
sophisticated	_	_
state-of-the-art	_	_
traffic	_	_
analysis	_	_
and	_	_
categorization	_	_
methodologies	_	_
.	_	_

#14
On	_	_
the	_	_
other	_	_
hand	_	_
image	_	_
processing	_	_
[	_	_
16	_	_
]	_	_
–	_	_
[	_	_
23	_	_
]	_	_
and	_	_
computer	_	_
vision	_	_
applications	_	_
[	_	_
16	_	_
]	_	_
,	_	_
[	_	_
24	_	_
]	_	_
,	_	_
[	_	_
25	_	_
]	_	_
are	_	_
very	_	_
well	_	_
known	_	_
for	_	_
their	_	_
thread	_	_
,	_	_
task	_	_
and	_	_
data	_	_
level	_	_
parallelism	_	_
.	_	_

#15
Recently	_	_
we	_	_
could	_	_
also	_	_
notice	_	_
a	_	_
huge	_	_
increase	_	_
in	_	_
integrating	_	_
Convolutional	_	_
Neural	_	_
Networks	_	_
[	_	_
26	_	_
]	_	_
–	_	_
[	_	_
30	_	_
]	_	_
in	_	_
computer	_	_
vision	_	_
to	_	_
solve	_	_
several	_	_
real-life	_	_
challenges	_	_
such	_	_
as	_	_
human	_	_
rights	_	_
violation	_	_
detection	_	_
through	_	_
images	_	_
[	_	_
31	_	_
]	_	_
,	_	_
[	_	_
32	_	_
]	_	_
,	_	_
weather	_	_
forecasting	_	_
[	_	_
33	_	_
]	_	_
,	_	_
[	_	_
34	_	_
]	_	_
,	_	_
etc	_	_
.	_	_

#16
Due	_	_
to	_	_
high	_	_
level	_	_
of	_	_
data	_	_
parallelism	_	_
in	_	_
computer	_	_
vision	_	_
applications	_	_
using	_	_
Convolutional	_	_
Neural	_	_
Networks	_	_
and	_	_
reducing	_	_
cost	_	_
factor	_	_
of	_	_
field-programmable	_	_
gate	_	_
array	_	_
(	_	_
FPGA	_	_
)	_	_
based	_	_
system-on-a-programmable-chip	_	_
(	_	_
SOPC	_	_
)	_	_
[	_	_
35	_	_
]	_	_
,	_	_
[	_	_
36	_	_
]	_	_
,	_	_
such	_	_
SOPC	_	_
serves	_	_
as	_	_
a	_	_
cost-effective	_	_
option	_	_
to	_	_
analyze	_	_
and	_	_
categorize	_	_
traffic	_	_
.	_	_

#17
In	_	_
this	_	_
paper	_	_
,	_	_
we	_	_
propose	_	_
a	_	_
novel	_	_
methodology	_	_
to	_	_
analyze	_	_
and	_	_
categorize	_	_
traffic	_	_
using	_	_
Convolutional	_	_
Neural	_	_
Networks	_	_
on	_	_
SOPC	_	_
without	_	_
the	_	_
need	_	_
of	_	_
streaming	_	_
the	_	_
video-frames	_	_
to	_	_
the	_	_
server	_	_
for	_	_
further	_	_
categorization	_	_
as	_	_
is	_	_
usually	_	_
done	_	_
in	_	_
state-of-the-art	_	_
traffic	_	_
categorization	_	_
methodologies	_	_
.	_	_

#18
The	_	_
proposed	_	_
methodology	_	_
is	_	_
coined	_	_
as	_	_
Motionless	_	_
Analysis	_	_
of	_	_
Traffic	_	_
Using	_	_
Convolutional	_	_
Neural	_	_
Networks	_	_
on	_	_
SOPC	_	_
:	_	_
MAT-CNN-SOPC	_	_
and	_	_
we	_	_
have	_	_
also	_	_
introduced	_	_
a	_	_
Quality	_	_
of	_	_
Experience	_	_
variable	_	_
,	_	_
which	_	_
would	_	_
enhance	_	_
the	_	_
predicting	_	_
mechanism	_	_
of	_	_
the	_	_
chosen	_	_
CNN	_	_
model	_	_
.	_	_

#19
The	_	_
remainder	_	_
of	_	_
this	_	_
paper	_	_
is	_	_
organized	_	_
as	_	_
follows	_	_
.	_	_

#20
Section	_	_
II	_	_
mentions	_	_
the	_	_
related	_	_
work	_	_
in	_	_
the	_	_
field	_	_
and	_	_
Section	_	_
III	_	_
provides	_	_
a	_	_
breakdown	_	_
of	_	_
the	_	_
software	_	_
and	_	_
hardware	_	_
infrastructure	_	_
used	_	_
for	_	_
the	_	_
implementation	_	_
and	_	_
validation	_	_
purposes	_	_
of	_	_
the	_	_
proposed	_	_
methodology	_	_
along	_	_
with	_	_
the	_	_
dataset	_	_
used	_	_
and	_	_
problem	_	_
definition	_	_
solved	_	_
using	_	_
this	_	_
solution	_	_
.	_	_

#21
Section	_	_
IV	_	_
provides	_	_
a	_	_
comprehensive	_	_
view	_	_
of	_	_
the	_	_
proposed	_	_
methodology	_	_
and	_	_
in	_	_
Section	_	_
V	_	_
we	_	_
could	_	_
analyze	_	_
the	_	_
experimental	_	_
results	_	_
.	_	_

#22
Section	_	_
VI	_	_
briefly	_	_
mentions	_	_
some	_	_
related	_	_
discussion	_	_
on	_	_
the	_	_
proposed	_	_
methodology	_	_
.	_	_

#23
Finally	_	_
,	_	_
Section	_	_
VII	_	_
concludes	_	_
the	_	_
paper	_	_
.	_	_

#24
ar	_	_
X	_	_
iv	_	_
:1	_	_
7	_	_
.	_	_

#25
8v	_	_
2	_	_
[	_	_
cs	_	_
.C	_	_
V	_	_
]	_	_
1	_	_
4	_	_
A	_	_
ug	_	_
2	_	_
II	_	_
.	_	_

#26
RELATED	_	_
WORK	_	_
Before	_	_
2015	_	_
,	_	_
majority	_	_
of	_	_
traffic	_	_
analysis	_	_
and	_	_
categorization	_	_
was	_	_
mostly	_	_
performed	_	_
using	_	_
the	_	_
following	_	_
methodologies	_	_
:	_	_
•	_	_
Vehicle	_	_
based	_	_
methodologies	_	_
where	_	_
either	_	_
vehicles	_	_
are	_	_
first	_	_
localized	_	_
on	_	_
the	_	_
road	_	_
with	_	_
a	_	_
background	_	_
subtraction	_	_
method	_	_
[	_	_
3	_	_
]	_	_
–	_	_
[	_	_
5	_	_
]	_	_
or	_	_
the	_	_
vehicles	_	_
are	_	_
localized	_	_
with	_	_
moving	_	_
feature	_	_
keypoints	_	_
[	_	_
6	_	_
]	_	_
,	_	_
[	_	_
7	_	_
]	_	_
.	_	_

#27
In	_	_
these	_	_
methodologies	_	_
the	_	_
resulting	_	_
tracks	_	_
are	_	_
concatenated	_	_
together	_	_
to	_	_
identify	_	_
key	_	_
features	_	_
of	_	_
traffic	_	_
such	_	_
as	_	_
traffic	_	_
lanes	_	_
,	_	_
average	_	_
traffic	_	_
speed	_	_
,	_	_
average	_	_
traffic	_	_
density	_	_
,	_	_
etc	_	_
.	_	_

#28
•	_	_
A	_	_
holistic	_	_
approach	_	_
,	_	_
where	_	_
a	_	_
macroscopic	_	_
analysis	_	_
of	_	_
traffic	_	_
flow	_	_
is	_	_
understood	_	_
through	_	_
global	_	_
representation	_	_
of	_	_
a	_	_
scene	_	_
,	_	_
which	_	_
is	_	_
obtained	_	_
by	_	_
accounting	_	_
for	_	_
spatio-temporal	_	_
features	_	_
except	_	_
tracking	_	_
using	_	_
background	_	_
subtraction	_	_
and	_	_
moving	_	_
feature	_	_
keypoints	_	_
[	_	_
9	_	_
]	_	_
–	_	_
[	_	_
11	_	_
]	_	_
.	_	_

#29
Although	_	_
the	_	_
aforementioned	_	_
methodologies	_	_
are	_	_
highly	_	_
effective	_	_
to	_	_
analyze	_	_
traffic	_	_
,	_	_
the	_	_
biggest	_	_
limiting	_	_
factor	_	_
is	_	_
the	_	_
cost	_	_
of	_	_
sophisticated	_	_
camera-network	_	_
involved	_	_
and	_	_
the	_	_
requirement	_	_
for	_	_
high-frame-rate	_	_
videos	_	_
to	_	_
compute	_	_
reliable	_	_
motion	_	_
features	_	_
.	_	_

#30
To	_	_
break	_	_
away	_	_
from	_	_
this	_	_
trend	_	_
of	_	_
traffic	_	_
analysis	_	_
,	_	_
in	_	_
2015	_	_
Luo	_	_
et	_	_
al.	_	_
[	_	_
8	_	_
]	_	_
proposed	_	_
a	_	_
methodology	_	_
to	_	_
use	_	_
various	_	_
image	_	_
processing	_	_
and	_	_
CNN	_	_
based	_	_
approaches	_	_
to	_	_
analyze	_	_
traffic	_	_
without	_	_
moving	_	_
features	_	_
.	_	_

#31
In	_	_
this	_	_
paper	_	_
the	_	_
authors	_	_
used	_	_
four	_	_
different	_	_
visual	_	_
descriptors	_	_
such	_	_
as	_	_
bag	_	_
of	_	_
visual	_	_
words	_	_
(	_	_
BOVW	_	_
)	_	_
,	_	_
Vector	_	_
of	_	_
Locally	_	_
Aggregated	_	_
Descriptors	_	_
(	_	_
VLAD	_	_
)	_	_
,	_	_
improved	_	_
Fisher	_	_
Vector	_	_
(	_	_
IFV	_	_
)	_	_
and	_	_
Locality-constrained	_	_
Linear	_	_
Coding	_	_
(	_	_
LLC	_	_
)	_	_
,	_	_
and	_	_
have	_	_
also	_	_
used	_	_
pre-trained	_	_
deep	_	_
CNN	_	_
models	_	_
such	_	_
as	_	_
Caffe	_	_
and	_	_
VGG	_	_
to	_	_
analyze	_	_
traffic	_	_
and	_	_
predict	_	_
categorization	_	_
of	_	_
the	_	_
same	_	_
.	_	_

#32
The	_	_
approach	_	_
taken	_	_
by	_	_
Luo	_	_
et	_	_
al.	_	_
to	_	_
use	_	_
popular	_	_
image	_	_
processing	_	_
and	_	_
CNN	_	_
methods	_	_
to	_	_
classify	_	_
traffic	_	_
is	_	_
novel	_	_
and	_	_
solves	_	_
the	_	_
low-frame-rate	_	_
video	_	_
streaming	_	_
issue	_	_
.	_	_

#33
However	_	_
,	_	_
the	_	_
experimental	_	_
setups	_	_
and	_	_
results	_	_
provided	_	_
in	_	_
the	_	_
paper	_	_
is	_	_
susceptible	_	_
to	_	_
some	_	_
biasness	_	_
as	_	_
the	_	_
cross-dataset	_	_
validation	_	_
was	_	_
not	_	_
performed	_	_
.	_	_

#34
In	_	_
Section	_	_
VI	_	_
we	_	_
have	_	_
compared	_	_
our	_	_
experimental	_	_
setup	_	_
and	_	_
achieved	_	_
results	_	_
with	_	_
the	_	_
ones	_	_
mentioned	_	_
in	_	_
[	_	_
8	_	_
]	_	_
.	_	_

#35
In	_	_
another	_	_
extended	_	_
paper	_	_
published	_	_
by	_	_
Luo	_	_
et	_	_
al.	_	_
[	_	_
14	_	_
]	_	_
,	_	_
the	_	_
researchers	_	_
have	_	_
used	_	_
SegCNN	_	_
and	_	_
RegCNN	_	_
to	_	_
analyze	_	_
and	_	_
classify	_	_
traffic	_	_
.	_	_

#36
In	_	_
both	_	_
the	_	_
aforementioned	_	_
papers	_	_
the	_	_
authors	_	_
are	_	_
training	_	_
and	_	_
classifying	_	_
traffic	_	_
images	_	_
after	_	_
the	_	_
video	_	_
frames	_	_
are	_	_
transferred	_	_
to	_	_
the	_	_
server	_	_
from	_	_
the	_	_
interconnected	_	_
camera	_	_
network	_	_
.	_	_

#37
But	_	_
installing	_	_
and	_	_
implementing	_	_
such	_	_
hardware	_	_
infrastructure	_	_
to	_	_
analyze	_	_
traffic	_	_
in	_	_
developing	_	_
countries	_	_
is	_	_
a	_	_
challenging	_	_
issue	_	_
[	_	_
37	_	_
]	_	_
.	_	_

#38
Other	_	_
state-of-the-art	_	_
methodologies	_	_
include	_	_
detecting	_	_
&	_	_
counting	_	_
the	_	_
numbers	_	_
of	_	_
cars	_	_
and	_	_
computing	_	_
traffic	_	_
density	_	_
based	_	_
on	_	_
that	_	_
using	_	_
CNN-based	_	_
vehicle	_	_
detectors	_	_
with	_	_
high	_	_
accuracy	_	_
at	_	_
near	_	_
real	_	_
time	_	_
[	_	_
38	_	_
]	_	_
–	_	_
[	_	_
40	_	_
]	_	_
.	_	_

#39
Although	_	_
this	_	_
way	_	_
of	_	_
detecting	_	_
traffic	_	_
density	_	_
could	_	_
still	_	_
be	_	_
classified	_	_
as	_	_
a	_	_
vehicle	_	_
based	_	_
approach	_	_
and	_	_
has	_	_
become	_	_
popular	_	_
in	_	_
recent	_	_
times	_	_
but	_	_
there	_	_
are	_	_
associated	_	_
challenges	_	_
with	_	_
these	_	_
methods	_	_
as	_	_
follows	_	_
:	_	_
•	_	_
Training	_	_
and	_	_
test	_	_
data	_	_
should	_	_
belong	_	_
to	_	_
the	_	_
same	_	_
dataset	_	_
taken	_	_
from	_	_
the	_	_
same	_	_
camera	_	_
with	_	_
same	_	_
configuration	_	_
and	_	_
hence	_	_
require	_	_
consistency	_	_
in	_	_
training	_	_
.	_	_

#40
•	_	_
Cars	_	_
detected	_	_
need	_	_
to	_	_
be	_	_
within	_	_
a	_	_
particular	_	_
range	_	_
or	_	_
scope	_	_
of	_	_
the	_	_
image	_	_
and	_	_
these	_	_
methodologies	_	_
fail	_	_
to	_	_
detect	_	_
cars	_	_
,	_	_
which	_	_
are	_	_
far	_	_
away	_	_
in	_	_
the	_	_
images	_	_
captured	_	_
.	_	_

#41
•	_	_
These	_	_
methodologies	_	_
performed	_	_
poorly	_	_
if	_	_
the	_	_
captured	_	_
images	_	_
were	_	_
occluded	_	_
,	_	_
especially	_	_
in	_	_
case	_	_
of	_	_
heavy	_	_
traffic	_	_
&	_	_
jam	_	_
.	_	_

#42
From	_	_
the	_	_
aforementioned	_	_
list	_	_
of	_	_
issues	_	_
with	_	_
the	_	_
state-of-the-art	_	_
methods	_	_
,	_	_
although	_	_
Deep	_	_
Learning	_	_
[	_	_
41	_	_
]	_	_
could	_	_
solve	_	_
the	_	_
problem	_	_
of	_	_
detecting	_	_
occluded	_	_
objects	_	_
properly	_	_
but	_	_
such	_	_
method	_	_
usually	_	_
requires	_	_
large	_	_
dataset	_	_
to	_	_
be	_	_
trained	_	_
with	_	_
.	_	_

#43
But	_	_
for	_	_
the	_	_
application	_	_
of	_	_
traffic	_	_
categorization	_	_
there	_	_
is	_	_
no	_	_
such	_	_
publicly	_	_
available	_	_
dataset	_	_
and	_	_
hence	_	_
using	_	_
Deep	_	_
Learning	_	_
would	_	_
be	_	_
inefficient	_	_
.	_	_

#44
Compared	_	_
to	_	_
all	_	_
the	_	_
aforementioned	_	_
works	_	_
,	_	_
we	_	_
propose	_	_
an	_	_
easy	_	_
to	_	_
train	_	_
CNN	_	_
model	_	_
,	_	_
which	_	_
do	_	_
not	_	_
require	_	_
a	_	_
lot	_	_
of	_	_
images	_	_
in	_	_
the	_	_
training	_	_
dataset	_	_
,	_	_
with	_	_
combination	_	_
of	_	_
transfer	_	_
learning	_	_
1	_	_
and	_	_
continuous	_	_
learning	_	_
2	_	_
capabilities	_	_
on	_	_
SOPC	_	_
without	_	_
the	_	_
need	_	_
of	_	_
communicating	_	_
the	_	_
traffic	_	_
images	_	_
to	_	_
the	_	_
connected	_	_
server	_	_
for	_	_
further	_	_
analysis	_	_
.	_	_

#45
III	_	_
.	_	_

#46
SYSTEM	_	_
AND	_	_
PROBLEM	_	_
FORMULATION	_	_
A	_	_
.	_	_

#47
Hardware	_	_
Infrastructure	_	_
&	_	_
Software	_	_
Infrastructure	_	_
It	_	_
is	_	_
worth	_	_
mentioning	_	_
that	_	_
the	_	_
CNN	_	_
based	_	_
traffic	_	_
analysis	_	_
will	_	_
demand	_	_
a	_	_
huge	_	_
amount	_	_
of	_	_
computing	_	_
resources	_	_
.	_	_

#48
Rather	_	_
than	_	_
high	_	_
performance	_	_
general	_	_
purpose	_	_
processing	_	_
unit	_	_
,	_	_
the	_	_
application	_	_
specific	_	_
computing	_	_
could	_	_
also	_	_
be	_	_
a	_	_
lucrative	_	_
way	_	_
out	_	_
.	_	_

#49
From	_	_
the	_	_
recent	_	_
literature	_	_
studies	_	_
[	_	_
41	_	_
]	_	_
,	_	_
[	_	_
42	_	_
]	_	_
,	_	_
it	_	_
has	_	_
been	_	_
observed	_	_
that	_	_
software	_	_
based	_	_
execution	_	_
could	_	_
provide	_	_
the	_	_
required	_	_
flexibility	_	_
but	_	_
not	_	_
the	_	_
performance	_	_
efficiency	_	_
in	_	_
terms	_	_
of	_	_
execution	_	_
.	_	_

#50
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
a	_	_
dedicated	_	_
hardware	_	_
based	_	_
execution	_	_
will	_	_
provide	_	_
performance	_	_
efficacy	_	_
but	_	_
will	_	_
under	_	_
perform	_	_
when	_	_
the	_	_
flexibility	_	_
becomes	_	_
the	_	_
major	_	_
concern	_	_
.	_	_

#51
Thus	_	_
,	_	_
hardware	_	_
software	_	_
co-execution	_	_
ecosystem	_	_
is	_	_
emerging	_	_
as	_	_
a	_	_
bright	_	_
prospect	_	_
and	_	_
modern	_	_
FPGA	_	_
(	_	_
ZYNQ	_	_
)	_	_
platform	_	_
is	_	_
a	_	_
good	_	_
solution	_	_
to	_	_
implement	_	_
such	_	_
functionality	_	_
3	_	_
.	_	_

#52
In	_	_
order	_	_
to	_	_
carry	_	_
out	_	_
the	_	_
functionality	_	_
in	_	_
FPGA	_	_
,	_	_
we	_	_
have	_	_
chosen	_	_
the	_	_
vivado	_	_
HLS	_	_
[	_	_
43	_	_
]	_	_
framework	_	_
.	_	_

#53
This	_	_
framework	_	_
also	_	_
extracts	_	_
the	_	_
parallelism	_	_
inside	_	_
the	_	_
code	_	_
.	_	_

#54
The	_	_
entire	_	_
CNN	_	_
model	_	_
is	_	_
created	_	_
in	_	_
high	_	_
level	_	_
language	_	_
(	_	_
C/C++	_	_
,	_	_
Matlab	_	_
,	_	_
Python	_	_
)	_	_
.	_	_

#55
Then	_	_
it	_	_
has	_	_
been	_	_
converted	_	_
in	_	_
to	_	_
RTL	_	_
4	_	_
format	_	_
through	_	_
vivado	_	_
high	_	_
level	_	_
synthesis	_	_
.	_	_

#56
Once	_	_
the	_	_
code	_	_
has	_	_
been	_	_
converted	_	_
,	_	_
the	_	_
VIVADO	_	_
framework	_	_
will	_	_
synthesize	_	_
to	_	_
the	_	_
bitstream	_	_
to	_	_
make	_	_
the	_	_
design	_	_
executable	_	_
.	_	_

#57
Our	_	_
code	_	_
(	_	_
in	_	_
Matlab	_	_
,	_	_
Python	_	_
&	_	_
C/C++	_	_
)	_	_
is	_	_
provided	_	_
on	_	_
our	_	_
GitHub	_	_
repository	_	_
[	_	_
44	_	_
]	_	_
.	_	_

#58
1Learning	_	_
achieved	_	_
by	_	_
taking	_	_
the	_	_
convolutional	_	_
base	_	_
of	_	_
a	_	_
pre-trained	_	_
network	_	_
,	_	_
running	_	_
the	_	_
new	_	_
data	_	_
of	_	_
4	_	_
traffic	_	_
categories	_	_
through	_	_
it	_	_
and	_	_
training	_	_
a	_	_
new	_	_
randomly	_	_
initialized	_	_
classifier	_	_
2Learning	_	_
achieved	_	_
by	_	_
re-training	_	_
the	_	_
classifier	_	_
with	_	_
wrong	_	_
predictions	_	_
till	_	_
operating	_	_
period	_	_
of	_	_
the	_	_
system	_	_
3Even	_	_
though	_	_
GPUs	_	_
could	_	_
be	_	_
an	_	_
efficient	_	_
accelerators	_	_
for	_	_
CNNs	_	_
.	_	_

#59
However	_	_
,	_	_
such	_	_
devices	_	_
are	_	_
expensive	_	_
&	_	_
very	_	_
power	_	_
hungry	_	_
and	_	_
thus	_	_
,	_	_
make	_	_
them	_	_
not	_	_
suitable	_	_
in	_	_
the	_	_
aforementioned	_	_
power-constrained	_	_
scenarios	_	_

#60
4	_	_
RTL	_	_
:	_	_
Register-transfer	_	_
level	_	_
is	_	_
a	_	_
design	_	_
abstraction	_	_
,	_	_
which	_	_
models	_	_
a	_	_

#61
synchronous	_	_
digital	_	_
circuit	_	_
in	_	_
terms	_	_
of	_	_
the	_	_
flow	_	_
of	_	_
digital	_	_
data	_	_
between	_	_
hardware	_	_
registers	_	_
and	_	_
the	_	_
logical	_	_
operations	_	_
performed	_	_
on	_	_
those	_	_
signals	_	_
.	_	_

#62
B.	_	_
Dataset	_	_
For	_	_
our	_	_
research	_	_
we	_	_
are	_	_
using	_	_
the	_	_
same	_	_
dataset	_	_
used	_	_
by	_	_
Luo	_	_
et	_	_
al.	_	_
[	_	_
8	_	_
]	_	_
,	_	_
[	_	_
14	_	_
]	_	_
to	_	_
validate	_	_
performance	_	_
of	_	_
our	_	_
proposed	_	_
methodology	_	_
and	_	_
theories	_	_
.	_	_

#63
Mainly	_	_
two	_	_
dataset	_	_
are	_	_
used	_	_
.	_	_

#64
The	_	_
first	_	_
one	_	_
is	_	_
the	_	_
dataset	_	_
released	_	_
by	_	_
UCSD	_	_
traffic	_	_
control	_	_
department	_	_
[	_	_
45	_	_
]	_	_
.	_	_

#65
This	_	_
dataset	_	_
contains	_	_
254	_	_
highway	_	_
video	_	_
sequences	_	_
,	_	_
all	_	_
filmed	_	_
by	_	_
the	_	_
same	_	_
camera	_	_
containing	_	_
light	_	_
,	_	_
heavy	_	_
and	_	_
traffic	_	_
jams	_	_
filmed	_	_
at	_	_
different	_	_
periods	_	_
of	_	_
the	_	_
day	_	_
and	_	_
under	_	_
different	_	_
weather	_	_
conditions	_	_
.	_	_

#66
Each	_	_
UCSD	_	_
video	_	_
has	_	_
a	_	_
resolution	_	_
of	_	_
320	_	_
X	_	_
240	_	_
with	_	_
a	_	_
frame	_	_
rate	_	_
of	_	_
10	_	_
fps	_	_
.	_	_

#67
The	_	_
second	_	_
dataset	_	_
consist	_	_
of	_	_
the	_	_
400	_	_
images5	_	_
captured	_	_
from	_	_
highway	_	_
cameras	_	_
deployed	_	_
in	_	_
all	_	_
over	_	_
the	_	_
UK	_	_
and	_	_
also	_	_
consist	_	_
of	_	_
several	_	_
examples	_	_
of	_	_
different	_	_
weather	_	_
and	_	_
lighting	_	_
conditions	_	_
in	_	_
order	_	_
to	_	_
provide	_	_
a	_	_
better	_	_
training	_	_
performance	_	_
.	_	_

#68
These	_	_
400	_	_
images	_	_
are	_	_
segregated	_	_
into	_	_
4	_	_
categories	_	_
:	_	_
Jam	_	_
,	_	_
Heavy	_	_
,	_	_
Fluid	_	_
,	_	_
Empty	_	_
(	_	_
as	_	_
shown	_	_
in	_	_
Fig.	_	_
1	_	_
)	_	_
,	_	_
and	_	_
each	_	_
category	_	_
having	_	_
100	_	_
images	_	_
.	_	_

#69
Fig.	_	_
1	_	_
.	_	_

#70
Random	_	_
images	_	_
from	_	_
4	_	_
Categories	_	_
of	_	_
Traffic	_	_
Classification	_	_
:	_	_
Jam	_	_
,	_	_
Heavy	_	_
,	_	_
Fluid	_	_
,	_	_
Empty	_	_
[	_	_
8	_	_
]	_	_
C.	_	_
Problem	_	_
Definition	_	_
The	_	_
main	_	_
focus	_	_
of	_	_
this	_	_
research	_	_
is	_	_
to	_	_
be	_	_
able	_	_
to	_	_
implement	_	_
a	_	_
hardware-software	_	_
ecosystem	_	_
,	_	_
which	_	_
is	_	_
able	_	_
to	_	_
analyze	_	_
and	_	_
predict	_	_
traffic	_	_
effectively	_	_
on	_	_
the	_	_
Systemonprogrammablechip	_	_
without	_	_
streaming	_	_
the	_	_
video-frames	_	_
to	_	_
the	_	_
server	_	_
over	_	_
a	_	_
communication	_	_
channel	_	_
even	_	_
in	_	_
severe	_	_
hardware	_	_
impaired	_	_
conditions	_	_
such	_	_
as	_	_
poor	_	_
video	_	_
recording	_	_
capabilities	_	_
of	_	_
the	_	_
camera	_	_
.	_	_

#71
Since	_	_
a	_	_
practical	_	_
application	_	_
such	_	_
as	_	_
categorization	_	_
of	_	_
traffic	_	_
using	_	_
CNNs	_	_
methodologies	_	_
requires	_	_
a	_	_
desirable	_	_
“Quality	_	_
of	_	_
Experience”	_	_
(	_	_
QoE	_	_
)	_	_
in	_	_
order	_	_
to	_	_
be	_	_
a	_	_
successful	_	_
implementation	_	_
,	_	_
we	_	_
also	_	_
need	_	_
to	_	_
define	_	_
the	_	_
governing	_	_
equation	_	_
to	_	_
quantify	_	_
QoE	_	_
so	_	_
that	_	_
we	_	_
could	_	_
understand	_	_
the	_	_
overall	_	_
desirability	_	_
of	_	_
the	_	_
CovNet	_	_
methodology	_	_
being	_	_
used	_	_
for	_	_
the	_	_
problem	_	_
in	_	_
hand	_	_
.	_	_

#72
Let	_	_
us	_	_
consider	_	_
the	_	_
(	_	_
QoE	_	_
)	_	_
that	_	_
will	_	_
decide	_	_
whether	_	_
the	_	_
accuracy	_	_
of	_	_
the	_	_
CovNet	_	_
methodology	_	_
is	_	_
desirable	_	_
as	_	_
Q	_	_
and	_	_
the	_	_
predicted	_	_
label	_	_
(	_	_
categorization	_	_
)	_	_
of	_	_
the	_	_
CovNet	_	_
as	_	_
Pi	_	_
for	_	_
any	_	_
image	_	_
(	_	_
i	_	_
)	_	_
from	_	_
a	_	_
dataset	_	_
of	_	_
images	_	_
(	_	_
I	_	_
)	_	_
at	_	_
an	_	_
instance	_	_
.	_	_

#73
5Only	_	_
400	_	_
images	_	_
were	_	_
available	_	_
in	_	_
the	_	_
existing	_	_
dataset	_	_
provided	_	_
by	_	_
Luo	_	_
et	_	_
al.	_	_
[	_	_
8	_	_
]	_	_
Fig.	_	_
2	_	_
.	_	_

#74
MAT-CNN-SOPC	_	_
Model	_	_
Work	_	_
flow	_	_
Then	_	_
the	_	_
governing	_	_
equation	_	_
which	_	_
could	_	_
be	_	_
used	_	_
to	_	_
predict	_	_
the	_	_
label	_	_
(	_	_
category	_	_
)	_	_
of	_	_
the	_	_
traffic	_	_
as	_	_
desirable	_	_
at	_	_
an	_	_
instance	_	_
is	_	_
as	_	_
follows	_	_
:	_	_
∀	_	_
{	_	_
i	_	_
∈	_	_
I	_	_
:	_	_
i	_	_
>	_	_
1	_	_
}	_	_
,	_	_
Pi	_	_
≥	_	_
Q	_	_
(	_	_
1	_	_
)	_	_
In	_	_
the	_	_
aforementioned	_	_
equation	_	_
(	_	_
1	_	_
)	_	_
,	_	_
we	_	_
are	_	_
not	_	_
taking	_	_
the	_	_
training	_	_
time	_	_
of	_	_
the	_	_
CovNet	_	_
model	_	_
into	_	_
consideration	_	_
as	_	_
part	_	_
of	_	_
QoE	_	_
since	_	_
it	_	_
is	_	_
assumed	_	_
that	_	_
training	_	_
is	_	_
mandatory	_	_
and	_	_
completed	_	_
while	_	_
the	_	_
hardware-software	_	_
ecosystem	_	_
is	_	_
setup	_	_
on	_	_
the	_	_
section	_	_
of	_	_
the	_	_
road	_	_
or	_	_
highway	_	_
for	_	_
the	_	_
purpose	_	_
of	_	_
categorizing	_	_
traffic	_	_
.	_	_

#75
Later	_	_
in	_	_
Section	_	_
VI	_	_
we	_	_
would	_	_
also	_	_
provide	_	_
a	_	_
minimum	_	_
threshold	_	_
value	_	_
for	_	_
QoE	_	_
for	_	_
the	_	_
given	_	_
problem	_	_
in	_	_
hand	_	_
based	_	_
on	_	_
the	_	_
experimental	_	_
results	_	_
(	_	_
Section	_	_
V	_	_
)	_	_
performed	_	_
.	_	_

#76
IV	_	_
.	_	_

#77
PROPOSED	_	_
METHODOLOGY	_	_
:	_	_
MAT-CNN-SOPC	_	_
In	_	_
this	_	_
section	_	_
we	_	_
propose	_	_
the	_	_
hardware-software	_	_
ecosystem	_	_
,	_	_
MAT-CNN-SOPC	_	_
,	_	_
which	_	_
would	_	_
be	_	_
utilizing	_	_
the	_	_
categorization	_	_
power	_	_
of	_	_
a	_	_
pre-trained	_	_
CNN	_	_
model	_	_
to	_	_
be	_	_
trained	_	_
to	_	_
effectively	_	_
categorize	_	_
traffic	_	_
based	_	_
on	_	_
the	_	_
desired	_	_
categories	_	_
.	_	_

#78
We	_	_
propose	_	_
a	_	_
two	_	_
fold	_	_
module	_	_
of	_	_
MAT-CNN-SOPC	_	_
:	_	_
Training	_	_
&	_	_
Prediction	_	_
(	_	_
as	_	_
shown	_	_
in	_	_
Fig.	_	_
2	_	_
)	_	_
.	_	_

#79
Both	_	_
the	_	_
Training	_	_
and	_	_
Prediction	_	_
modules	_	_
are	_	_
implemented	_	_
in	_	_
application	_	_
layer	_	_
of	_	_
the	_	_
SOPC	_	_
.	_	_

#80
For	_	_
this	_	_
hardware-software	_	_
ecosystem	_	_
we	_	_
assume	_	_
that	_	_
a	_	_
camera	_	_
is	_	_
connected	_	_
to	_	_
the	_	_
system-on-a-programmable-chip	_	_
and	_	_
the	_	_
primary	_	_
training	_	_
of	_	_
the	_	_
classifier	_	_
of	_	_
the	_	_
pre-trained	_	_
CNN	_	_
model	_	_
is	_	_
performed	_	_
6	_	_
while	_	_
the	_	_
SOPC	_	_
is	_	_
setup	_	_
on	_	_
the	_	_
section	_	_
of	_	_
the	_	_
road	_	_
in	_	_
the	_	_
first	_	_
place	_	_
.	_	_

#81
6Using	_	_
transfer	_	_
learning	_	_
of	_	_
pre-trained	_	_
CNN	_	_
model	_	_
For	_	_
our	_	_
proposed	_	_
model	_	_
we	_	_
could	_	_
select	_	_
any	_	_
available	_	_
pre-trained	_	_
CNN	_	_
model	_	_
such	_	_
as	_	_
AlexNet	_	_
[	_	_
29	_	_
]	_	_
,	_	_
VGG	_	_
[	_	_
28	_	_
]	_	_
,	_	_
ResNet	_	_
[	_	_
30	_	_
]	_	_
,	_	_
etc	_	_
.	_	_

#82
for	_	_
the	_	_
Training	_	_
module	_	_
.	_	_

#83
In	_	_
this	_	_
module	_	_
we	_	_
train	_	_
the	_	_
system	_	_
with	_	_
various	_	_
known	_	_
images	_	_
of	_	_
traffic	_	_
.	_	_

#84
Since	_	_
FPGA	_	_
on	_	_
the	_	_
SOPC	_	_
are	_	_
excellent	_	_
candidates	_	_
for	_	_
SIMD	_	_
programming	_	_
exploration	_	_
,	_	_
we	_	_
use	_	_
FPGA	_	_
on	_	_
board	_	_
as	_	_
accelerators	_	_
for	_	_
the	_	_
Convolutional	_	_
layers	_	_
during	_	_
the	_	_
training	_	_
.	_	_

#85
The	_	_
training	_	_
module	_	_
consists	_	_
of	_	_
both	_	_
offline	_	_
training	_	_
as	_	_
well	_	_
as	_	_
online	_	_
training	_	_
.	_	_

#86
During	_	_
the	_	_
offline	_	_
training	_	_
,	_	_
the	_	_
model	_	_
is	_	_
trained	_	_
on	_	_
the	_	_
dataset	_	_
,	_	_
which	_	_
is	_	_
either	_	_
pre-stored	_	_
on	_	_
the	_	_
SOPC	_	_
or	_	_
stored	_	_
on	_	_
an	_	_
external	_	_
storage	_	_
connected	_	_
to	_	_
the	_	_
system	_	_
.	_	_

#87
After	_	_
the	_	_
initial	_	_
(	_	_
offline	_	_
)	_	_
training	_	_
is	_	_
complete	_	_
with	_	_
the	_	_
pre-stored	_	_
dataset	_	_
,	_	_
the	_	_
camera	_	_
connected	_	_
on	_	_
the	_	_
SOPC	_	_
is	_	_
activated	_	_
to	_	_
send	_	_
in	_	_
images	_	_
of	_	_
the	_	_
current	_	_
traffic/section	_	_
of	_	_
the	_	_
road	_	_
with	_	_
determined	_	_
labels	_	_
(	_	_
categories	_	_
)	_	_
and	_	_
the	_	_
training	_	_
of	_	_
the	_	_
model	_	_
is	_	_
validated	_	_
.	_	_

#88
If	_	_
the	_	_
model	_	_
predicts	_	_
a	_	_
wrong	_	_
category	_	_
of	_	_
the	_	_
streamed	_	_
image	_	_
then	_	_
that	_	_
image	_	_
along	_	_
with	_	_
it’s	_	_
correct	_	_
category	_	_
is	_	_
stored	_	_
in	_	_
a	_	_
reFeed	_	_
Image	_	_
Stack	_	_
,	_	_
a	_	_
special	_	_
stack	_	_
implementation	_	_
to	_	_
hold	_	_
images	_	_
with	_	_
labels	_	_
,	_	_
on	_	_
the	_	_
system	_	_
for	_	_
later	_	_
(	_	_
online	_	_
)	_	_
training	_	_
.	_	_

#89
If	_	_
during	_	_
this	_	_
validation	_	_
stage	_	_
of	_	_
the	_	_
model	_	_
,	_	_
the	_	_
total	_	_
prediction	_	_
accuracy	_	_
falls	_	_
below	_	_
the	_	_
desired	_	_
accuracy	_	_
(	_	_
Q	_	_
as	_	_
mentioned	_	_
in	_	_
Eq.	_	_
1	_	_
)	_	_
of	_	_
the	_	_
model	_	_
then	_	_
the	_	_
model	_	_
is	_	_
re-trained	_	_
with	_	_
the	_	_
images	_	_
stored	_	_
in	_	_
the	_	_
reFeed	_	_
Image	_	_
Stack	_	_
.	_	_

#90
After	_	_
completion	_	_
of	_	_
every	_	_
training	_	_
process	_	_
the	_	_
validation	_	_
phase	_	_
is	_	_
re-executed	_	_
till	_	_
the	_	_
prediction	_	_
accuracy	_	_
of	_	_
the	_	_
model	_	_
is	_	_
equal	_	_
or	_	_
more	_	_
than	_	_
Q	_	_
(	_	_
Quality	_	_
of	_	_
Experience	_	_
)	_	_
.	_	_

#91
Methodology	_	_
of	_	_
the	_	_
training	_	_
module	_	_
is	_	_
algorithmically	_	_
provided	_	_
in	_	_
Algo	_	_
.	_	_

#92
1	_	_
.	_	_

#93
The	_	_
main	_	_
motivation	_	_
to	_	_
re-train	_	_
the	_	_
CNN	_	_
model	_	_
with	_	_
failed	_	_
prediction	_	_
dataset	_	_
of	_	_
a	_	_
known	_	_
environment	_	_
is	_	_
to	_	_
artificially	_	_
enhance	_	_
the	_	_
accuracy	_	_
of	_	_
the	_	_
model	_	_
and	_	_
we	_	_
call	_	_
this	_	_
enrichment	_	_
in	_	_
performance	_	_
as	_	_
reFeed	_	_
Gain	_	_
factor	_	_
(	_	_
r	_	_
)	_	_
.	_	_

#94
In	_	_
Section	_	_
V-B	_	_
,	_	_
we	_	_
have	_	_
provided	_	_
the	_	_
value	_	_
of	_	_
reFeed	_	_
Gain	_	_
factor	_	_
:	_	_
r	_	_
noted	_	_
from	_	_
the	_	_
performed	_	_
experiments	_	_
and	_	_
we	_	_
have	_	_
also	_	_
provided	_	_
a	_	_
generic	_	_
mathematical	_	_
notation	_	_
of	_	_
this	_	_
terminology	_	_
for	_	_
better	_	_
representation	_	_
as	_	_
follows	_	_
:	_	_
r	_	_
=	_	_
|P	_	_
f	_	_
i	_	_
−	_	_
P	_	_
0	_	_
i	_	_
|	_	_
,	_	_
where	_	_
P	_	_
0	_	_
i	_	_
≤	_	_
Q	_	_
≤	_	_
P	_	_
f	_	_
i	_	_
(	_	_
2	_	_
)	_	_
In	_	_
the	_	_
aforementioned	_	_
equation	_	_
(	_	_
Eq.	_	_
2	_	_
)	_	_
Q	_	_
is	_	_
the	_	_
Quality	_	_
of	_	_
Experience	_	_
(	_	_
see	_	_
Eq.	_	_
1	_	_
)	_	_
,	_	_
which	_	_
is	_	_
desired	_	_
for	_	_
the	_	_
system	_	_
to	_	_
perform	_	_
well	_	_
(	_	_
related	_	_
to	_	_
predicting	_	_
traffic	_	_
categories	_	_
)	_	_
,	_	_
P	_	_
f	_	_
i	_	_
is	_	_
the	_	_
prediction	_	_
accuracy	_	_
of	_	_
the	_	_
CNN	_	_
model	_	_
after	_	_
re-trained	_	_
with	_	_
reFeed	_	_
Image	_	_
Stack	_	_
and	_	_
P	_	_
0	_	_
i	_	_
is	_	_
the	_	_
prediction	_	_
accuracy	_	_
in	_	_
the	_	_
initial	_	_
training	_	_
.	_	_

#95
Based	_	_
on	_	_
Eq.	_	_
2	_	_
,	_	_
if	_	_
we	_	_
consider	_	_
S	_	_
as	_	_
the	_	_
boost	_	_
function	_	_
in	_	_
prediction	_	_
accuracy	_	_
of	_	_
the	_	_
CNN	_	_
model	_	_
after	_	_
re-training	_	_
with	_	_
reFeed	_	_
Image	_	_
Stack	_	_
feature	_	_
,	_	_
which	_	_
we	_	_
denote	_	_
as	_	_
reFeed	_	_
Gain	_	_
(	_	_
R	_	_
)	_	_
,	_	_
we	_	_
could	_	_
represent	_	_
the	_	_
reFeed	_	_
Gain	_	_
as	_	_
follows	_	_
:	_	_
R←	_	_
S	_	_
(	_	_
P	_	_
0	_	_
i	_	_
)	_	_
=	_	_
(	_	_
P	_	_
f	_	_
i	_	_
/P	_	_
i	_	_
)	_	_
(	_	_
3	_	_
)	_	_
Therefore	_	_
,	_	_
using	_	_
Eq.	_	_
2	_	_
&	_	_
3	_	_
we	_	_
could	_	_
generalize	_	_
the	_	_
relationship	_	_
between	_	_
P	_	_
0	_	_
i	_	_
,	_	_
R	_	_
,	_	_
r	_	_
,	_	_
Q	_	_
7	_	_
as	_	_
follows	_	_
:	_	_

#96
7	_	_
P	_	_
0	_	_

#97
i	_	_
denotes	_	_
initial	_	_
prediction	_	_
accuracy	_	_
,	_	_
R	_	_
denotes	_	_
reFeed	_	_
Gain	_	_
,	_	_
r	_	_
denotes	_	_
reFeed	_	_
Gain	_	_
Factor	_	_
and	_	_
Q	_	_
corresponds	_	_
to	_	_
the	_	_
Quality	_	_
of	_	_
Experience	_	_
R×	_	_
P	_	_
0	_	_
i	_	_
=	_	_
r	_	_
+	_	_
P	_	_
0	_	_
i	_	_
,	_	_
where	_	_
P	_	_
0	_	_
i	_	_
≤	_	_
Q	_	_
(	_	_
4	_	_
)	_	_
Now	_	_
,	_	_
in	_	_
the	_	_
prediction	_	_
module	_	_
our	_	_
CNN	_	_
model	_	_
keeps	_	_
predicting	_	_
the	_	_
traffic	_	_
category	_	_
(	_	_
label	_	_
)	_	_
and	_	_
it	_	_
either	_	_
broadcasts	_	_
the	_	_
label	_	_
over	_	_
the	_	_
network	_	_
or	_	_
it	_	_
stores	_	_
the	_	_
labels	_	_
along	_	_
with	_	_
the	_	_
video	_	_
frames	_	_
on	_	_
a	_	_
memory	_	_
storage	_	_
,	_	_
which	_	_
could	_	_
be	_	_
either	_	_
on-board	_	_
or	_	_
external	_	_
.	_	_

#98
Later	_	_
we	_	_
could	_	_
use	_	_
the	_	_
concept	_	_
of	_	_
“assistive	_	_
learning”	_	_
,	_	_
where	_	_
a	_	_
human	_	_
being	_	_
manually	_	_
goes	_	_
through	_	_
the	_	_
stored	_	_
video	_	_
frames	_	_
along	_	_
with	_	_
their	_	_
predicted	_	_
labels	_	_
and	_	_
rectifies	_	_
any	_	_
label	_	_
if	_	_
there	_	_
was	_	_
a	_	_
wrong	_	_
prediction	_	_
.	_	_

#99
Whenever	_	_
an	_	_
image	_	_
is	_	_
classified	_	_
as	_	_
wrong	_	_
by	_	_
the	_	_
assistive	_	_
human	_	_
being	_	_
then	_	_
that	_	_
image	_	_
goes	_	_
into	_	_
the	_	_
reFeed	_	_
Image	_	_
Stack	_	_
of	_	_
the	_	_
Prediction	_	_
module	_	_
and	_	_
later	_	_
the	_	_
images	_	_
from	_	_
this	_	_
stack	_	_
is	_	_
transfered	_	_
to	_	_
the	_	_
reFeed	_	_
Image	_	_
Stack	_	_
in	_	_
the	_	_
Training	_	_
module	_	_
so	_	_
that	_	_
the	_	_
CNN	_	_
model	_	_
could	_	_
be	_	_
further	_	_
trained	_	_
with	_	_
the	_	_
images	_	_
from	_	_
the	_	_
reFeed	_	_
Image	_	_
Stack	_	_
to	_	_
enhance	_	_
reFeed	_	_
Gain	_	_
(	_	_
R	_	_
)	_	_
.	_	_

#100
We	_	_
call	_	_
this	_	_
method	_	_
to	_	_
improving	_	_
the	_	_
prediction	_	_
accuracy	_	_
of	_	_
the	_	_
existing	_	_
CNN	_	_
model	_	_
as	_	_
“Continuous	_	_
Learning”	_	_
of	_	_
the	_	_
CNN	_	_
Model	_	_
for	_	_
a	_	_
specific	_	_
category	_	_
(	_	_
as	_	_
shown	_	_
in	_	_
Fig.	_	_
2	_	_
)	_	_
.	_	_

#101
In	_	_
this	_	_
particular	_	_
work	_	_
we	_	_
are	_	_
only	_	_
focused	_	_
on	_	_
the	_	_
implementation	_	_
of	_	_
reFeed	_	_
Image	_	_
Stack	_	_
and	_	_
reFeed	_	_
Gain	_	_
in	_	_
the	_	_
Training	_	_
module	_	_
.	_	_

#102
Algorithm	_	_
1	_	_
:	_	_
Training	_	_
Module	_	_
Execution	_	_
Input	_	_
:	_	_
1	_	_
.	_	_

#103
I	_	_
:	_	_
set	_	_
of	_	_
n	_	_
Images	_	_
from	_	_
Training	_	_
&	_	_
Validation	_	_
Dataset	_	_
2	_	_
.	_	_

#104
T	_	_
:	_	_
set	_	_
of	_	_
m	_	_
Images	_	_
from	_	_
Testing	_	_
Dataset	_	_
(	_	_
for	_	_
cross-validation	_	_
)	_	_
Output	_	_
:	_	_
P	_	_
:	_	_
prediction	_	_
accuracy	_	_
after	_	_
training	_	_
Initialize	_	_
:	_	_
Q	_	_
=	_	_
0.7	_	_
;	_	_
.	_	_

#105
Quality	_	_
of	_	_
Experience	_	_
is	_	_
set	_	_
to	_	_
70	_	_
%	_	_
by	_	_
default	_	_
S.Count	_	_
=	_	_
0	_	_
;	_	_
.	_	_

#106
S	_	_
:	_	_
reFeed	_	_
Image	_	_
Stack	_	_
Offline	_	_
Training	_	_
:	_	_
Train	_	_
(	_	_
pre-trained	_	_
CNN	_	_
model	_	_
,	_	_
I	_	_
)	_	_
;	_	_
.	_	_

#107
Train	_	_
model	_	_
with	_	_
I	_	_
dataset	_	_
for	_	_
each	_	_
image	_	_
i	_	_
∈	_	_
T	_	_
do	_	_
Prediction	_	_
=	_	_
Test	_	_
(	_	_
CNN	_	_
model	_	_
)	_	_
;	_	_
.	_	_

#108
Test	_	_
outputs	_	_
whether	_	_
prediction	_	_
is	_	_
correct	_	_
or	_	_
wrong	_	_
.	_	_

#109
Prediction.IsWrong	_	_
(	_	_
)	_	_
is	_	_
a	_	_
function	_	_
to	_	_
return	_	_
True	_	_
when	_	_
Prediction.Label	_	_
!	_	_

#110
=	_	_
Original.Label	_	_
of	_	_
Test	_	_
image	_	_
i	_	_
if	_	_
Prediction.IsWrong	_	_
(	_	_
)	_	_
then	_	_
S.Push	_	_
(	_	_
i	_	_
)	_	_
;	_	_
Calculate	_	_
mean	_	_
Prediction	_	_
Accuracy	_	_
(	_	_
P	_	_
0	_	_
i	_	_
)	_	_
;	_	_
P	_	_
=	_	_
P	_	_
0	_	_
i	_	_
;	_	_
Online	_	_
Training	_	_
:	_	_
{	_	_
re-Train	_	_
with	_	_
reFeed	_	_
Image	_	_
Stack	_	_
if	_	_
P	_	_
0	_	_
i	_	_
<	_	_
Q	_	_
}	_	_
if	_	_
P	_	_
0	_	_
i	_	_
<	_	_
Q	_	_
then	_	_
.	_	_

#111
Need	_	_
to	_	_
satisfy	_	_
condition	_	_
of	_	_
Eq.	_	_
1	_	_
if	_	_
S.Empty	_	_
(	_	_
)	_	_
==	_	_
False	_	_
then	_	_
{	_	_
Traing	_	_
CNN	_	_
with	_	_
reFeed	_	_
Image	_	_
Stack	_	_
}	_	_
Train	_	_
(	_	_
CNN	_	_
model	_	_
,	_	_
S	_	_
)	_	_
;	_	_
Calculate	_	_
mean	_	_
Prediction	_	_
Accuracy	_	_
(	_	_
P	_	_
f	_	_
i	_	_
)	_	_
;	_	_
P	_	_
=	_	_
P	_	_
f	_	_
i	_	_
;	_	_
S.Count	_	_
=	_	_
0	_	_
;	_	_
.	_	_

#112
reset	_	_
reFeed	_	_
Image	_	_
Stack	_	_
else	_	_
return	_	_
P	_	_
;	_	_
The	_	_
proposed	_	_
methodology	_	_
(	_	_
MAT-CNN-SOPC	_	_
)	_	_
is	_	_
bioinspired	_	_
due	_	_
to	_	_
the	_	_
fact	_	_
that	_	_
human	_	_
beings	_	_
constantly	_	_
keep	_	_
learning	_	_
even	_	_
when	_	_
they	_	_
are	_	_
introduced	_	_
to	_	_
a	_	_
completely	_	_
new	_	_
environment	_	_
so	_	_
that	_	_
they	_	_
could	_	_
adjust	_	_
to	_	_
that	_	_
environment	_	_
quickly	_	_
and	_	_
adapt	_	_
to	_	_
it	_	_
.	_	_

#113
By	_	_
using	_	_
this	_	_
same	_	_
concept	_	_
we	_	_
could	_	_
enhance	_	_
the	_	_
learning	_	_
mechanism	_	_
of	_	_
the	_	_
CNN	_	_
model	_	_
for	_	_
a	_	_
particular	_	_
scene-based	_	_
application	_	_
.	_	_

#114
A	_	_
.	_	_

#115
Employed	_	_
CNN	_	_
Models	_	_
In	_	_
order	_	_
to	_	_
prove	_	_
the	_	_
effectiveness	_	_
of	_	_
our	_	_
proposed	_	_
methodology	_	_
we	_	_
chose	_	_
two	_	_
popular	_	_
object-centric	_	_
CNN	_	_
architectures	_	_
,	_	_
VGG	_	_
16	_	_
convolutional-layer	_	_
(	_	_
VGG16	_	_
)	_	_
[	_	_
28	_	_
]	_	_
and	_	_
ResNet50	_	_
[	_	_
30	_	_
]	_	_
CNN	_	_
.	_	_

#116
The	_	_
selected	_	_
CNN	_	_
architectures	_	_
contain	_	_
138	_	_
million	_	_
parameters	_	_
for	_	_
VGG16	_	_
and	_	_
26	_	_
million	_	_
parameters	_	_
for	_	_
ResNet50	_	_
.	_	_

#117
A	_	_
typical	_	_
approach	_	_
to	_	_
enable	_	_
training	_	_
of	_	_
very	_	_
deep	_	_
networks	_	_
on	_	_
small	_	_
datasets	_	_
is	_	_
to	_	_
use	_	_
a	_	_
model	_	_
pre-trained	_	_
on	_	_
a	_	_
very	_	_
large	_	_
dataset	_	_
,	_	_
and	_	_
then	_	_
use	_	_
the	_	_
CNN	_	_
as	_	_
as	_	_
an	_	_
initialization	_	_
for	_	_
the	_	_
task	_	_
of	_	_
interest	_	_
.	_	_

#118
This	_	_
method	_	_
,	_	_
referred	_	_
to	_	_
as	_	_
‘transfer	_	_
learning’	_	_
8	_	_
[	_	_
42	_	_
]	_	_
,	_	_
[	_	_
46	_	_
]	_	_
injects	_	_
knowledge	_	_
from	_	_
other	_	_
tasks	_	_
by	_	_
deploying	_	_
weights	_	_
and	_	_
parameters	_	_
from	_	_
a	_	_
pre-trained	_	_
network	_	_
to	_	_
the	_	_
new	_	_
one	_	_
.	_	_

#119
The	_	_
rationale	_	_
behind	_	_
this	_	_
is	_	_
that	_	_
the	_	_
internal	_	_
layers	_	_
of	_	_
the	_	_
CNN	_	_
can	_	_
act	_	_
as	_	_
a	_	_
generic	_	_
extractor	_	_
of	_	_
image	_	_
representations	_	_
which	_	_
have	_	_
been	_	_
pre-trained	_	_
on	_	_
one	_	_
large	_	_
dataset	_	_
(	_	_
source	_	_
task	_	_
)	_	_
and	_	_
then	_	_
re-used	_	_
on	_	_
other	_	_
target	_	_
tasks	_	_
.	_	_

#120
Considering	_	_
the	_	_
size	_	_
of	_	_
the	_	_
dataset	_	_
we	_	_
have	_	_
used	_	_
(	_	_
see	_	_
Sec	_	_
.	_	_

#121
III-B	_	_
)	_	_
,	_	_
the	_	_
only	_	_
way	_	_
to	_	_
apply	_	_
a	_	_
deep	_	_
CNN	_	_
such	_	_
as	_	_
VGG16	_	_
and	_	_
ResNet50	_	_
,	_	_
is	_	_
to	_	_
reduce	_	_
the	_	_
number	_	_
of	_	_
trainable	_	_
parameters	_	_
.	_	_

#122
In	_	_
order	_	_
to	_	_
achieve	_	_
this	_	_
the	_	_
first	_	_
filter	_	_
stages	_	_
are	_	_
held	_	_
fixed	_	_
during	_	_
training	_	_
(	_	_
weights	_	_
are	_	_
not	_	_
updated	_	_
)	_	_
and	_	_
overfitting	_	_
9	_	_
can	_	_
be	_	_
avoided	_	_
.	_	_

#123
We	_	_
initialize	_	_
the	_	_
feature	_	_
extraction	_	_
modules	_	_
using	_	_
pre-trained	_	_
models	_	_
from	_	_
a	_	_
large	_	_
scale	_	_
dataset	_	_
,	_	_
ImageNet	_	_
[	_	_
29	_	_
]	_	_
,	_	_
[	_	_
47	_	_
]	_	_
.	_	_

#124
For	_	_
the	_	_
target	_	_
task	_	_
(	_	_
traffic	_	_
analysis	_	_
)	_	_
,	_	_
we	_	_
design	_	_
a	_	_
network	_	_
that	_	_
will	_	_
output	_	_
scores	_	_
for	_	_
the	_	_
4	_	_
target	_	_
categories	_	_
of	_	_
the	_	_
dataset	_	_
used	_	_
.	_	_

#125
V.	_	_
EXPERIMENTAL	_	_
RESULTS	_	_
A	_	_
.	_	_

#126
Experimental	_	_
Setup	_	_
For	_	_
this	_	_
research	_	_
we	_	_
have	_	_
taken	_	_
the	_	_
400	_	_
highway	_	_
images	_	_
(	_	_
mentioned	_	_
in	_	_
Section	_	_
III-B	_	_
)	_	_
and	_	_
have	_	_
used	_	_
that	_	_
for	_	_
our	_	_
training	_	_
and	_	_
validation	_	_
purposes	_	_
.	_	_

#127
The	_	_
dataset	_	_
is	_	_
partitioned	_	_
into	_	_
two	_	_
dataset	_	_
consisting	_	_
of	_	_
training	_	_
and	_	_
validation	_	_
sets	_	_
and	_	_
during	_	_
every	_	_
test	_	_
randomization	_	_
algorithm	_	_
was	_	_
used	_	_
on	_	_
the	_	_
whole	_	_
dataset	_	_
to	_	_
create	_	_
the	_	_
training	_	_
and	_	_
validation	_	_
subsets	_	_
.	_	_

#128
We	_	_
have	_	_
selected	_	_
3	_	_
random	_	_
videos	_	_
from	_	_
each	_	_
category	_	_
(	_	_
light	_	_
,	_	_
heavy	_	_
and	_	_
traffic	_	_
)	_	_
of	_	_
the	_	_
UCSD	_	_
dataset	_	_
and	_	_
then	_	_
converted	_	_
the	_	_
video	_	_
stream	_	_
to	_	_
image	_	_
by	_	_
processing	_	_
1	_	_
frame	_	_
out	_	_
of	_	_
every	_	_
8	_	_
frames	_	_
(	_	_
˜1.3	_	_
fps	_	_
)	_	_
.	_	_

#129
Since	_	_
the	_	_
videos	_	_
from	_	_
the	_	_
UCSD	_	_
dataset	_	_
is	_	_
categorized	_	_
based	_	_
on	_	_
light	_	_
,	_	_
heavy	_	_
and	_	_
traffic	_	_
jams	_	_
,	_	_
we	_	_
had	_	_
to	_	_
manually	_	_
categorized	_	_
into	_	_
our	_	_
generic	_	_
4	_	_
categories	_	_
:	_	_
Jam	_	_
,	_	_
Heavy	_	_
,	_	_
Fluid	_	_
,	_	_
Empty	_	_
and	_	_
generated	_	_
192	_	_
images	_	_
(	_	_
48	_	_
images	_	_
for	_	_
each	_	_
category	_	_
)	_	_
for	_	_
testing	_	_
purposes	_	_
.	_	_

#130
We	_	_
have	_	_
performed	_	_
the	_	_
following	_	_
tests	_	_
,	_	_
which	_	_
are	_	_
separated	_	_
into	_	_
groups	_	_
,	_	_
as	_	_
follows	_	_
:	_	_
In	_	_
Group	_	_
1	_	_
of	_	_
tests	_	_
(	_	_
G1	_	_
)	_	_
,	_	_
in	_	_
test	_	_
G1.i	_	_
we	_	_
have	_	_
broken	_	_
the	_	_
400	_	_
training	_	_
images	_	_
into	_	_
two	_	_
dataset	_	_
:	_	_
360	_	_
images	_	_
for	_	_
training	_	_

#131
8	_	_
Transfer	_	_
is	_	_
achieved	_	_
by	_	_
taking	_	_
the	_	_
convolutional	_	_
base	_	_
of	_	_
a	_	_
pre-trained	_	_

#132
network	_	_
,	_	_
running	_	_
the	_	_
new	_	_
data	_	_
of	_	_
4	_	_
traffic	_	_
categories	_	_
through	_	_
it	_	_
and	_	_
training	_	_
a	_	_
new	_	_
,	_	_
randomly	_	_
initialized	_	_
classifier	_	_
on	_	_
top	_	_
of	_	_
the	_	_
semantic	_	_
image	_	_
output	_	_
vector	_	_
Yout	_	_
.	_	_

#133
9	_	_
Overfitting	_	_
happens	_	_
when	_	_
the	_	_
CNN	_	_
model	_	_
recognizes	_	_
specific	_	_
images	_	_
in	_	_

#134
your	_	_
training	_	_
set	_	_
instead	_	_
of	_	_
general	_	_
patterns	_	_
.	_	_

#135
TABLE	_	_
I	_	_
TESTS	_	_
PERFORMED	_	_
Test	_	_
Groups	_	_
G1	_	_
:	_	_
VGG16	_	_
performance	_	_
on	_	_
Dataset	_	_
G2	_	_
:	_	_
VGG16	_	_
performance	_	_
on	_	_
UCSD	_	_
Dataset	_	_
G3	_	_
:	_	_
ResNet50	_	_
performance	_	_
on	_	_
UCSD	_	_
Dataset	_	_
(	_	_
i	_	_
)	_	_
90	_	_
%	_	_
Training	_	_
/	_	_
10	_	_
%	_	_
Validation	_	_
(	_	_
i	_	_
)	_	_
90	_	_
%	_	_
Training	_	_
/	_	_
10	_	_
%	_	_
Validation	_	_
(	_	_
i	_	_
)	_	_
90	_	_
%	_	_
Training	_	_
/	_	_
10	_	_
%	_	_
Validation	_	_
(	_	_
ii	_	_
)	_	_
80	_	_
%	_	_
Training	_	_
/	_	_
20	_	_
%	_	_
Validation	_	_
(	_	_
ii	_	_
)	_	_
75	_	_
%	_	_
Training	_	_
/	_	_
25	_	_
%	_	_
Validation	_	_
(	_	_
ii	_	_
)	_	_
75	_	_
%	_	_
Training	_	_
/	_	_
25	_	_
%	_	_
Validation	_	_
(	_	_
iii	_	_
)	_	_
70	_	_
%	_	_
Training	_	_
/	_	_
30	_	_
%	_	_
Validation	_	_
(	_	_
iii	_	_
)	_	_
50	_	_
%	_	_
Training	_	_
/	_	_
50	_	_
%	_	_
Validation	_	_
(	_	_
iii	_	_
)	_	_
50	_	_
%	_	_
Training	_	_
/	_	_
50	_	_
%	_	_
Validation	_	_
(	_	_
iv	_	_
)	_	_
60	_	_
%	_	_
Training	_	_
/	_	_
40	_	_
%	_	_
Validation	_	_
(	_	_
iv	_	_
)	_	_
75	_	_
%	_	_
Training	_	_
/	_	_
25	_	_
%	_	_
Validation	_	_
with	_	_
reFeed	_	_
Image	_	_
Stack	_	_
Feature	_	_
(	_	_
iv	_	_
)	_	_
75	_	_
%	_	_
Training	_	_
/	_	_
25	_	_
%	_	_
Validation	_	_
with	_	_
reFeed	_	_
Image	_	_
Stack	_	_
Feature	_	_
and	_	_
40	_	_
images	_	_
for	_	_
validation	_	_
(	_	_
in	_	_
9:4	_	_
ratio	_	_
)	_	_
of	_	_
VGG16	_	_
pre-trained	_	_
model	_	_
.	_	_

#136
In	_	_
test	_	_
G1.ii	_	_
we	_	_
have	_	_
broken	_	_
the	_	_
dataset	_	_
into	_	_
320	_	_
for	_	_
training	_	_
and	_	_
80	_	_
for	_	_
validation	_	_
sets	_	_
,	_	_
whereas	_	_
in	_	_
G1.iii	_	_
it	_	_
is	_	_
broken	_	_
in	_	_
the	_	_
ratio	_	_
of	_	_
7:3	_	_
and	_	_
in	_	_
G1.iv	_	_
it	_	_
is	_	_
broken	_	_
in	_	_
3:2	_	_
.	_	_

#137
No	_	_
separate	_	_
tests	_	_
were	_	_
performed	_	_
to	_	_
check	_	_
the	_	_
accuracy	_	_
of	_	_
the	_	_
categorization	_	_
after	_	_
training	_	_
in	_	_
Group	_	_
1	_	_
of	_	_
tests	_	_
,	_	_
but	_	_
the	_	_
main	_	_
motivation	_	_
was	_	_
to	_	_
check	_	_
the	_	_
performance	_	_
of	_	_
training	_	_
the	_	_
VGG16	_	_
model	_	_
on	_	_
the	_	_
400	_	_
traffic	_	_
images	_	_
.	_	_

#138
In	_	_
Group	_	_
2	_	_
of	_	_
tests	_	_
we	_	_
have	_	_
taken	_	_
the	_	_
pre-trained	_	_
VGG16	_	_
model	_	_
and	_	_
have	_	_
trained	_	_
the	_	_
model	_	_
with	_	_
training	_	_
and	_	_
validation	_	_
dataset	_	_
in	_	_
the	_	_
ratio	_	_
as	_	_
mentioned	_	_
in	_	_
Table	_	_
V-A	_	_
.	_	_

#139
But	_	_
in	_	_
this	_	_
group	_	_
of	_	_
tests	_	_
we	_	_
have	_	_
checked	_	_
the	_	_
categorization	_	_
accuracy	_	_
of	_	_
the	_	_
model	_	_
after	_	_
training	_	_
is	_	_
complete	_	_
with	_	_
the	_	_
192	_	_
images	_	_
of	_	_
UCSD	_	_
dataset	_	_
as	_	_
mentioned	_	_
earlier	_	_
in	_	_
this	_	_
section	_	_
.	_	_

#140
The	_	_
UCSD	_	_
dataset	_	_
was	_	_
completely	_	_
kept	_	_
hidden	_	_
during	_	_
the	_	_
training	_	_
process	_	_
so	_	_
that	_	_
we	_	_
could	_	_
evaluate	_	_
the	_	_
desirability	_	_
of	_	_
using	_	_
VGG16	_	_
in	_	_
scenarios	_	_
of	_	_
traffic	_	_
analysis	_	_
,	_	_
which	_	_
it	_	_
has	_	_
not	_	_
been	_	_
exposed	_	_
to	_	_
in	_	_
advance	_	_
(	_	_
cross	_	_
validation	_	_
using	_	_
unseen	_	_
UCSD	_	_
dataset	_	_
)	_	_
.	_	_

#141
In	_	_
Group	_	_
3	_	_
of	_	_
tests	_	_
we	_	_
ran	_	_
the	_	_
similar	_	_
set	_	_
of	_	_
tests	_	_
as	_	_
in	_	_
Group	_	_
2	_	_
but	_	_
we	_	_
replaced	_	_
the	_	_
pre-trained	_	_
CovNet	_	_
model	_	_
with	_	_
ResNet50	_	_
and	_	_
check	_	_
the	_	_
categorization	_	_
accuracy	_	_
with	_	_
the	_	_
UCSD	_	_
dataset	_	_
.	_	_

#142
For	_	_
each	_	_
test	_	_
in	_	_
every	_	_
group	_	_
,	_	_
we	_	_
have	_	_
completely	_	_
re-trained	_	_
the	_	_
CovNet	_	_
model	_	_
on	_	_
our	_	_
dataset	_	_
to	_	_
avoid	_	_
bias	_	_
of	_	_
the	_	_
model	_	_
.	_	_

#143
To	_	_
prove	_	_
our	_	_
proposed	_	_
MAT-CNN-SOPC	_	_
model	_	_
(	_	_
Fig.	_	_
2	_	_
)	_	_
and	_	_
effective	_	_
use	_	_
of	_	_
reFeed	_	_
Image	_	_
Stack	_	_
for	_	_
further	_	_
training	_	_
(	_	_
transfer	_	_
learning	_	_
)	_	_
,	_	_
we	_	_
have	_	_
also	_	_
performed	_	_
a	_	_
series	_	_
of	_	_
tests	_	_
where	_	_
the	_	_
model	_	_
is	_	_
further	_	_
trained	_	_
with	_	_
images	_	_
from	_	_
reFeed	_	_
Image	_	_
Stack	_	_
,	_	_
which	_	_
is	_	_
segregated	_	_
into	_	_
training	_	_
and	_	_
validation	_	_
set	_	_
in	_	_
the	_	_
ratio	_	_
of	_	_
75:25	_	_
.	_	_

#144
Tests	_	_
G2.iv	_	_
and	_	_
G3.iv	_	_
represents	_	_
those	_	_
tests	_	_
for	_	_
VGG16	_	_
and	_	_
ResNet50	_	_
respectively	_	_
.	_	_

#145
To	_	_
check	_	_
the	_	_
testing	_	_
accuracy	_	_
after	_	_
this	_	_
training	_	_
method	_	_
we	_	_
used	_	_
a	_	_
different	_	_
set	_	_
of	_	_
192	_	_
images	_	_
of	_	_
the	_	_
UCSD	_	_
dataset	_	_
for	_	_
the	_	_
purpose	_	_
.	_	_

#146
We	_	_
trained	_	_
the	_	_
CNN	_	_
models	_	_
for	_	_
10	_	_
epochs	_	_
with	_	_
a	_	_
batch	_	_
size	_	_
of	_	_
10	_	_
images	_	_
.	_	_

#147
Since	_	_
we	_	_
have	_	_
worked	_	_
with	_	_
a	_	_
small	_	_
dataset	_	_
for	_	_
the	_	_
problem	_	_
in	_	_
hand	_	_
,	_	_
we	_	_
have	_	_
used	_	_
several	_	_
image	_	_
augmentation	_	_
techniques	_	_
such	_	_
as	_	_
Reflection	_	_
10	_	_
,	_	_
Translation	_	_
11	_	_
,	_	_
etc	_	_
.	_	_

#148
to	_	_
fit	_	_
the	_	_
training	_	_
of	_	_
the	_	_
CNN	_	_
model	_	_
.	_	_

#149
We	_	_
also	_	_
implemented	_	_
the	_	_
training	_	_
module	_	_
on	_	_
ZYNQ	_	_
FPGA	_	_
using	_	_
Vivado	_	_
HLS	_	_
(	_	_
see	_	_
Section	_	_
III-A	_	_
)	_	_
.	_	_

#150
This	_	_
is	_	_
an	_	_
alternate	_	_
attempt	_	_
to	_	_
accelerate	_	_
some	_	_
of	_	_
the	_	_
functionalities	_	_
of	_	_
CNN	_	_
.	_	_

#151
B	_	_
.	_	_

#152
Classification	_	_
Results	_	_
For	_	_
every	_	_
single	_	_
instance	_	_
of	_	_
the	_	_
tests	_	_
in	_	_
each	_	_
group	_	_
(	_	_
G1	_	_
,	_	_
G2	_	_
,	_	_
G3	_	_
)	_	_
mentioned	_	_
in	_	_
the	_	_
previous	_	_
subsection	_	_
(	_	_
V-A	_	_
)	_	_
,	_	_
we	_	_
have	_	_
performed	_	_
the	_	_
same	_	_
tests	_	_
to	_	_
check	_	_
consistency	_	_
and	_	_
only	_	_
the	_	_
maximum	_	_
result	_	_
of	_	_
those	_	_
tests	_	_
are	_	_
reported	_	_
in	_	_
this	_	_
section	_	_
.	_	_

#153
In	_	_
Table	_	_
V-B	_	_
we	_	_
could	_	_
see	_	_
the	_	_
performance	_	_
of	_	_
each	_	_
test	_	_
,	_	_
where	_	_
validation	_	_
accuracy	_	_
along	_	_
with	_	_
categorization	_	_
accuracy	_	_
(	_	_
testing	_	_
)	_	_
are	_	_
reported	_	_
.	_	_

#154
TABLE	_	_
II	_	_
TESTS	_	_
PERFORMED	_	_
Results	_	_
of	_	_
Test	_	_
Groups	_	_
G1	_	_
:	_	_
VGG16	_	_
performance	_	_
on	_	_
Dataset	_	_
G2	_	_
:	_	_
VGG16	_	_
performance	_	_
on	_	_
UCSD	_	_
Dataset	_	_
G3	_	_
:	_	_
ResNet50	_	_
performance	_	_
on	_	_
UCSD	_	_
Dataset	_	_
(	_	_
i	_	_
)	_	_
Validation	_	_
Accuracy	_	_
:	_	_
92.50	_	_
%	_	_
(	_	_
i	_	_
)	_	_
Validation	_	_
Accuracy	_	_
:	_	_
90.00	_	_
%	_	_
;	_	_
Testing	_	_
Accuracy	_	_
:	_	_
65.60	_	_
%	_	_
(	_	_
i	_	_
)	_	_
Validation	_	_
Accuracy	_	_
:	_	_
92.50	_	_
%	_	_
;	_	_
Testing	_	_
Accuracy	_	_
:	_	_
40.00	_	_
%	_	_
(	_	_
ii	_	_
)	_	_
Validation	_	_
Accuracy	_	_
:	_	_
87.50	_	_
%	_	_
(	_	_
ii	_	_
)	_	_
Validation	_	_
Accuracy	_	_
:	_	_
89.50	_	_
%	_	_
;	_	_
Testing	_	_
Accuracy	_	_
:	_	_
60.00	_	_
%	_	_
(	_	_
ii	_	_
)	_	_
Validation	_	_
Accuracy	_	_
:	_	_
88.00	_	_
%	_	_
;	_	_
Testing	_	_
Accuracy	_	_
:	_	_
33.33	_	_
%	_	_
(	_	_
iii	_	_
)	_	_
Validation	_	_
Accuracy	_	_
:	_	_
89.17	_	_
%	_	_
(	_	_
iii	_	_
)	_	_
Validation	_	_
Accuracy	_	_
:	_	_
90.00	_	_
%	_	_
;	_	_
Testing	_	_
Accuracy	_	_
:	_	_
62.30	_	_
%	_	_
(	_	_
iii	_	_
)	_	_
Validation	_	_
Accuracy	_	_
:	_	_
84.50	_	_
%	_	_
;	_	_
Testing	_	_
Accuracy	_	_
:	_	_
61.67	_	_
%	_	_
(	_	_
iv	_	_
)	_	_
Validation	_	_
Accuracy	_	_
:	_	_
89.38.50	_	_
%	_	_
(	_	_
iv	_	_
)	_	_
Validation	_	_
Accuracy	_	_
:	_	_
94.59	_	_
%	_	_
;	_	_
Testing	_	_
Accuracy	_	_
:	_	_
87.50	_	_
%	_	_
(	_	_
iv	_	_
)	_	_
Validation	_	_
Accuracy	_	_
:	_	_
95.50	_	_
%	_	_
;	_	_
Testing	_	_
Accuracy	_	_
:	_	_
81.25	_	_
%	_	_
As	_	_
we	_	_
could	_	_
see	_	_
from	_	_
Table	_	_
V-B	_	_
,	_	_
initially	_	_
after	_	_
using	_	_
the	_	_
stock	_	_
traffic	_	_
image	_	_
dataset	_	_
for	_	_
training	_	_
the	_	_
testing	_	_
prediction	_	_
accuracy	_	_
in	_	_
G2.i	_	_
was	_	_
65.60	_	_
%	_	_
,	_	_
which	_	_
was	_	_
the	_	_
highest	_	_
in	_	_
that	_	_
group	_	_
.	_	_

#155
But	_	_
when	_	_
we	_	_
have	_	_
used	_	_
re-training	_	_
mechanism	_	_
(	_	_
refer	_	_
to	_	_
Algo	_	_
.	_	_

#156
1	_	_
)	_	_
on	_	_
the	_	_
CNN	_	_
model	_	_
with	_	_
re-Feed	_	_
Image	_	_
Stack	_	_
,	_	_
the	_	_
testing	_	_
prediction	_	_
accuracy	_	_
got	_	_
boosted	_	_
to	_	_
87.50	_	_
%	_	_
for	_	_
the	_	_
same	_	_
group	_	_
(	_	_
G2	_	_
)	_	_
and	_	_
boosted	_	_
to	_	_
81.25	_	_
%	_	_
in	_	_
G3	_	_
group	_	_
compared	_	_
to	_	_
33.33	_	_
%	_	_
(	_	_
without	_	_
re-training	_	_
)	_	_
.	_	_

#157
Although	_	_
,	_	_
it	_	_
is	_	_
a	_	_
common	_	_
knowledge	_	_
that	_	_
with	_	_
more	_	_
images	_	_
for	_	_
training	_	_
accuracy	_	_
of	_	_
the	_	_
CNN	_	_
model	_	_
improves	_	_
but	_	_
the	_	_
images	_	_
used	_	_
for	_	_
re-training	_	_
did	_	_
not	_	_
exceed	_	_
more	_	_
than	_	_
10	_	_
%	_	_
of	_	_
the	_	_
initial	_	_
training	_	_
(	_	_
offline	_	_
)	_	_
dataset	_	_
in	_	_
size	_	_
and	_	_
given	_	_
the	_	_
size	_	_
of	_	_
the	_	_
dataset	_	_
we	_	_
are	_	_
working	_	_
on	_	_
,	_	_
the	_	_
gain	_	_
(	_	_
reFeed	_	_
Gain	_	_
)	_	_
in	_	_
prediction	_	_
accuracy	_	_
is	_	_
solely	_	_
because	_	_
of	_	_
the	_	_
methodology	_	_
(	_	_
training	_	_
with	_	_
reFeed	_	_
10	_	_
Where	_	_
each	_	_
image	_	_
is	_	_
reflected	_	_
horizontally	_	_
.	_	_

#158
11	_	_
Where	_	_
each	_	_
image	_	_
is	_	_
translated	_	_
by	_	_
a	_	_
distance	_	_
,	_	_
measured	_	_
in	_	_
pixels	_	_
.	_	_

#159
Image	_	_
Stack	_	_
)	_	_
used	_	_
rather	_	_
than	_	_
the	_	_
possibility	_	_
of	_	_
using	_	_
more	_	_
images	_	_
during	_	_
training	_	_
.	_	_

#160
Now	_	_
,	_	_
using	_	_
the	_	_
Eq.	_	_
2	_	_
and	_	_
the	_	_
resulting	_	_
values	_	_
from	_	_
Table	_	_
V	_	_
,	_	_
the	_	_
calculated	_	_
reFeed	_	_
Gain	_	_
Factor	_	_
(	_	_
r	_	_
)	_	_
is	_	_
47.92	_	_
and	_	_
the	_	_
reFeed	_	_
Gain	_	_
(	_	_
R	_	_
)	_	_
(	_	_
using	_	_
Eq.	_	_
3	_	_
)	_	_
is	_	_
2.44x	_	_
for	_	_
G3.iv	_	_
.	_	_

#161
Example	_	_
1	_	_
sheds	_	_
some	_	_
light	_	_
on	_	_
the	_	_
phenomenon	_	_
of	_	_
enrichment	_	_
of	_	_
accuracy	_	_
as	_	_
described	_	_
through	_	_
reFeed	_	_
Gain	_	_
.	_	_

#162
Observation	_	_
:	_	_
Example	_	_
1	_	_
.	_	_

#163
In	_	_
G3.iv	_	_
,	_	_
the	_	_
testing	_	_
accuracy	_	_
is	_	_
81.25	_	_
%	_	_
(	_	_
P	_	_
f	_	_
i	_	_
)	_	_
,	_	_
whereas	_	_
in	_	_
G3.iv	_	_
the	_	_
testing	_	_
accuracy	_	_
is	_	_
33.33	_	_
%	_	_
(	_	_
P	_	_
0	_	_
i	_	_
)	_	_
,	_	_
thus	_	_
from	_	_
Eq.	_	_
3	_	_
:	_	_
R	_	_
=	_	_
(	_	_
81.25/33.33	_	_
)	_	_
=	_	_
2.4377	_	_
≈	_	_
2.44	_	_
Therefore	_	_
,	_	_
the	_	_
boost	_	_
in	_	_
prediction	_	_
accuracy	_	_
for	_	_
ResNet50	_	_
for	_	_
this	_	_
example	_	_
using	_	_
reFeed	_	_
Image	_	_
Stack	_	_
is	_	_
2.44x	_	_
.	_	_

#164
The	_	_
hardware	_	_
implementation	_	_
is	_	_
carried	_	_
out	_	_
on	_	_
Zynq	_	_
ZCZ7045	_	_
.	_	_

#165
It	_	_
is	_	_
observed	_	_
that	_	_
near	_	_
about	_	_
95	_	_
%	_	_
of	_	_
DSP	_	_
(	_	_
858	_	_
out	_	_
of	_	_
900	_	_
)	_	_
,	_	_
55	_	_
%	_	_
of	_	_
BRAM	_	_
(	_	_
301	_	_
out	_	_
of	_	_
545	_	_
)	_	_
and	_	_
41	_	_
%	_	_
of	_	_
LUTs	_	_
(	_	_
89626	_	_
out	_	_
of	_	_
218600	_	_
)	_	_
have	_	_
been	_	_
utilized	_	_
.	_	_

#166
VI	_	_
.	_	_

#167
DISCUSSION	_	_
In	_	_
the	_	_
work	_	_
[	_	_
8	_	_
]	_	_
,	_	_
[	_	_
14	_	_
]	_	_
,	_	_
the	_	_
authors	_	_
have	_	_
used	_	_
the	_	_
same	_	_
400	_	_
images	_	_
dataset	_	_
and	_	_
have	_	_
split	_	_
it	_	_
into	_	_
two	_	_
:	_	_
Training	_	_
and	_	_
Testing	_	_
,	_	_
which	_	_
means	_	_
that	_	_
the	_	_
authors	_	_
have	_	_
used	_	_
the	_	_
same	_	_
dataset	_	_
for	_	_
training	_	_
,	_	_
validation	_	_
and	_	_
testing	_	_
,	_	_
which	_	_
is	_	_
highly	_	_
undesirable	_	_
in	_	_
this	_	_
field	_	_
to	_	_
evaluate	_	_
accuracy	_	_
of	_	_
the	_	_
implemented	_	_
CNN	_	_
12	_	_
.	_	_

#168
For	_	_
example	_	_
,	_	_
in	_	_
[	_	_
8	_	_
]	_	_
they	_	_
have	_	_
used	_	_
the	_	_
same	_	_
UCSD	_	_
dataset	_	_
to	_	_
both	_	_
train	_	_
and	_	_
test	_	_
the	_	_
VGG	_	_
model	_	_
(	_	_
after	_	_
splitting	_	_
the	_	_
dataset	_	_
into	_	_
75	_	_
%	_	_
for	_	_
training	_	_
and	_	_
25	_	_
%	_	_
for	_	_
testing	_	_
)	_	_
and	_	_
have	_	_
achieved	_	_
an	_	_
accuracy	_	_
of	_	_
96.10	_	_
%	_	_
.	_	_

#169
This	_	_
way	_	_
of	_	_
predicting	_	_
accuracy	_	_
of	_	_
an	_	_
application	_	_
based	_	_
CNN	_	_
model	_	_
is	_	_
highly	_	_
biased	_	_
.	_	_

#170
When	_	_
we	_	_
trained	_	_
our	_	_
VGG	_	_
16	_	_
model	_	_
with	_	_
separate	_	_
image	_	_
dataset	_	_
and	_	_
tested	_	_
the	_	_
accuracy	_	_
on	_	_
the	_	_
UCSD	_	_
one	_	_
,	_	_
we	_	_
got	_	_
an	_	_
accuracy	_	_
of	_	_
just	_	_
60.00	_	_
%	_	_
(	_	_
refer	_	_
G2.ii	_	_
in	_	_
Tab.	_	_
V-B	_	_
)	_	_
in	_	_
comparison	_	_
.	_	_

#171
Additionally	_	_
given	_	_
the	_	_
small	_	_
size	_	_
of	_	_
the	_	_
dataset	_	_
used	_	_
,	_	_
there	_	_
are	_	_
two	_	_
possible	_	_
challenges	_	_
,	_	_
which	_	_
could	_	_
be	_	_
faced	_	_
.	_	_

#172
One	_	_
of	_	_
those	_	_
issues	_	_
being	_	_
overfitting	_	_
The	_	_
other	_	_
issue	_	_
is	_	_
that	_	_
the	_	_
model	_	_
might	speculation	_
not	_	_
be	_	_
able	_	_
to	_	_
train	_	_
properly	_	_
and	_	_
result	_	_
into	_	_
less	_	_
accurate	_	_
predictions	_	_
.	_	_

#173
In	_	_
[	_	_
8	_	_
]	_	_
,	_	_
the	_	_
reported	_	_
accuracy	_	_
results	_	_
of	_	_
the	_	_
implemented	_	_
models	_	_
were	_	_
on	_	_
validation	_	_
instead	_	_
of	_	_
reporting	_	_
the	_	_
testing	_	_
accuracy	_	_
of	_	_
the	_	_
same	_	_
.	_	_

#174
When	_	_
the	_	_
UCSD	_	_
dataset	_	_
was	_	_
used	_	_
for	_	_
testing	_	_
and	_	_
the	_	_
curated	_	_
400	_	_
traffic	_	_
images	_	_
for	_	_
training	_	_
in	_	_
our	_	_
model	_	_
,	_	_
we	_	_
found	_	_
out	_	_
that	_	_
the	_	_
testing	_	_
accuracy	_	_
was	_	_
very	_	_
less	_	_
compared	_	_
to	_	_
the	_	_
validation	_	_
one	_	_
,	_	_
contradicting	_	_
their	_	_
results	_	_
.	_	_

#175
In	_	_
order	_	_
to	_	_
improve	_	_
the	_	_
testing	_	_
accuracy	_	_
of	_	_
CNN	_	_
models	_	_
for	_	_
traffic	_	_
analysis	_	_
we	_	_
came	_	_
up	_	_
with	_	_
MAT-CNN-SOPC	_	_
Model	_	_
.	_	_

#176
In	_	_
Table	_	_
V	_	_
,	_	_
we	_	_
could	_	_
also	_	_
see	_	_
an	_	_
anomaly	_	_
in	_	_
using	_	_
ResNet50	_	_
,	_	_
where	_	_
with	_	_
less	_	_
training	_	_
images	_	_
it	_	_
performed	_	_
better	_	_
.	_	_

#177
One	_	_
of	_	_
the	_	_
possible	_	_
reasons	_	_
being	_	_
overfitting	_	_
of	_	_
images	_	_
when	_	_
trained	_	_
with	_	_
less	_	_
number	_	_
of	_	_
images	_	_
but	_	_
from	_	_
the	_	_
training	_	_
graphs	_	_
(	_	_
see	_	_
Fig.	_	_
V-B	_	_
)	_	_
we	_	_
could	_	_
understand	_	_
that	_	_
is	_	_
not	_	_
the	_	_
case	_	_
.	_	_

#178
12	_	_
It	_	_
is	_	_
undesirable	_	_
to	_	_
use	_	_
the	_	_
same	_	_
dataset	_	_
for	_	_
training	_	_
,	_	_
validation	_	_
and	_	_

#179
testing	_	_
since	_	_
it	_	_
introduces	_	_
high	_	_
level	_	_
of	_	_
bias	_	_
.	_	_

#180
13	_	_
Overfitting	_	_
happens	_	_
when	_	_
the	_	_
CNN	_	_
model	_	_
recognizes	_	_
specific	_	_
images	_	_
in	_	_

#181
your	_	_
training	_	_
set	_	_
instead	_	_
of	_	_
general	_	_
patterns	_	_
.	_	_

#182
(	_	_
a	_	_
)	_	_
Result	_	_
:	_	_
Validation	_	_
Accuracy	_	_
&	_	_
Loss	_	_
of	_	_
VGG16	_	_
in	_	_
G1.i	_	_
Test	_	_
(	_	_
b	_	_
)	_	_
Result	_	_
:	_	_
Validation	_	_
Accuracy	_	_
&	_	_
Loss	_	_
of	_	_
ResNet50	_	_
in	_	_
G3.i	_	_
Test	_	_
Fig.	_	_
3	_	_
.	_	_

#183
Graph	_	_
Showing	_	_
Validation	_	_
Accuracy	_	_
&	_	_
Loss	_	_
The	_	_
other	_	_
possible	_	_
reason	_	_
being	_	_
mislabeling	_	_
of	_	_
the	_	_
images	_	_
while	_	_
testing	_	_
.	_	_

#184
For	_	_
our	_	_
example	_	_
we	_	_
have	_	_
noticed	_	_
that	_	_
sometimes	_	_
it	_	_
was	_	_
difficult	_	_
even	_	_
for	_	_
a	_	_
human	_	_
to	_	_
differentiate	_	_
between	_	_
‘Heavy’	_	_
and	_	_
‘Fluid’	_	_
traffic	_	_
and	_	_
since	_	_
the	_	_
testing	_	_
images	_	_
were	_	_
labeled	_	_
manually	_	_
.	_	_

#185
From	_	_
the	_	_
graphs	_	_
in	_	_
Fig.	_	_
3	_	_
we	_	_
could	_	_
also	_	_
see	_	_
that	_	_
the	_	_
model	_	_
is	_	_
somehow	_	_
underfitting	_	_
rather	_	_
than	_	_
overfitting	_	_
,	_	_
but	_	_
incorporating	_	_
the	_	_
MAT-CNN-SOPC	_	_
Model	_	_
for	_	_
the	_	_
training	_	_
and	_	_
prediction	_	_
has	_	_
actually	_	_
made	_	_
the	_	_
gap	_	_
between	_	_
the	_	_
training	_	_
,	_	_
validation	_	_
and	_	_
testing	_	_
accuracy	_	_
narrower	_	_
.	_	_

#186
Although	_	_
it	_	_
could	_	_
be	_	_
argued	_	_
upon	_	_
that	_	_
since	_	_
we	_	_
have	_	_
used	_	_
images	_	_
from	_	_
the	_	_
same	_	_
camera	_	_
and	_	_
on	_	_
the	_	_
same	_	_
road	_	_
junction	_	_
to	_	_
improve	_	_
the	_	_
training	_	_
quality	_	_
of	_	_
the	_	_
CNN	_	_
model	_	_
but	_	_
given	_	_
the	_	_
practical	_	_
application	_	_
of	_	_
traffic	_	_
analysis	_	_
it	_	_
is	_	_
highly	_	_
likely	_	_
that	_	_
the	_	_
same	_	_
camera	_	_
system	_	_
would	_	_
operate	_	_
in	_	_
the	_	_
same	_	_
junction/street	_	_
region	_	_
for	_	_
its	_	_
lifetime	_	_
.	_	_

#187
Thus	_	_
training	_	_
the	_	_
camera	_	_
system	_	_
with	_	_
known	_	_
environment	_	_
seems	_	_
to	_	_
solve	_	_
the	_	_
problem	_	_
of	_	_
analyzing	_	_
and	_	_
categorizing	_	_
traffic	_	_
in	_	_
a	_	_
cost	_	_
effective	_	_
way	_	_
.	_	_

#188
Another	_	_
noteworthy	_	_
thing	_	_
to	_	_
mention	_	_
is	_	_
that	_	_
for	_	_
this	_	_
application	_	_
and	_	_
for	_	_
our	_	_
tests	_	_
we	_	_
have	_	_
chosen	_	_
the	_	_
value	_	_
of	_	_
Quality	_	_
of	_	_
Experience	_	_
(	_	_
QoE	_	_
)	_	_
as	_	_
70	_	_
%	_	_
14	_	_
by	_	_
default	_	_
but	_	_
,	_	_
this	_	_
value	_	_
could	_	_
be	_	_
modified	_	_
based	_	_
on	_	_
the	_	_
desired	_	_
accuracy	_	_
for	_	_
the	_	_
problem	_	_
in	_	_
hand	_	_
and	_	_
we	_	_
could	_	_
also	_	_
utilize	_	_
Eq.	_	_
4	_	_
to	_	_
fine	_	_
tune	_	_
MAT-CNN-SOPC	_	_
for	_	_
the	_	_
same	_	_
purpose	_	_
.	_	_

#189
VII	_	_
.	_	_

#190
CONCLUSION	_	_
In	_	_
this	_	_
paper	_	_
,	_	_
we	_	_
have	_	_
proposed	_	_
a	_	_
novel	_	_
CNN	_	_
based	_	_
categorization	_	_
model	_	_
,	_	_
which	_	_
could	_	_
categorize	_	_
traffic	_	_
effectively	_	_
on	_	_
the	_	_
programmable	_	_
system	_	_
board	_	_
even	_	_
with	_	_
less	_	_
number	_	_
of	_	_
training	_	_
images	_	_
in	_	_
the	_	_
dataset	_	_
.	_	_

#191
To	_	_
effectively	_	_
train	_	_
the	_	_
CNN	_	_
to	_	_
improve	_	_
prediction	_	_
accuracy	_	_
,	_	_
we	_	_
have	_	_
used	_	_
a	_	_
combination	_	_
of	_	_
transfer	_	_
learning	_	_
as	_	_
well	_	_
as	_	_
a	_	_
novel	_	_
re-training	_	_
mechanism	_	_
on	_	_
pre-trained	_	_
CNN	_	_
models	_	_
,	_	_
where	_	_
the	_	_
model	_	_
is	_	_
re-trained	_	_
with	_	_

#192
14	_	_
For	_	_
our	_	_
traffic	_	_
categorization	_	_
issue	_	_
we	_	_
found	_	_
out	_	_
through	_	_
testing	_	_
that	_	_

#193
chosing	_	_
QoE	_	_
value	_	_
of	_	_
70	_	_
%	_	_
produced	_	_
better	_	_
result	_	_
in	_	_
re-training	_	_
the	_	_
model	_	_
for	_	_
accuracy	_	_
.	_	_

#194
images	_	_
from	_	_
a	_	_
known	_	_
environment	_	_
.	_	_

#195
We	_	_
have	_	_
also	_	_
introduced	_	_
Quality	_	_
of	_	_
Experience	_	_
,	_	_
which	_	_
researchers	_	_
in	_	_
this	_	_
field	_	_
could	_	_
use	_	_
to	_	_
choose	_	_
the	_	_
right	_	_
CNN	_	_
model	_	_
for	_	_
their	_	_
problem	_	_
and	_	_
achieve	_	_
the	_	_
desired	_	_
results	_	_
(	_	_
in	_	_
terms	_	_
of	_	_
accuracy	_	_
)	_	_
.	_	_

#196
ACKNOWLEDGMENT	_	_
This	_	_
work	_	_
is	_	_
supported	_	_
by	_	_
the	_	_
UK	_	_
Engineering	_	_
and	_	_
Physical	_	_
Sciences	_	_
Research	_	_
Council	_	_
EPSRC	_	_
[	_	_
EP/R02572X/1	_	_
and	_	_
EP/P017487/1	_	_
]	_	_
and	_	_
the	_	_
authors	_	_
would	_	_
like	_	_
to	_	_
thank	_	_
the	_	_
people	_	_
associated	_	_
with	_	_
National	_	_
Centre	_	_
for	_	_
Nuclear	_	_
Robotics	_	_
(	_	_
NCNR	_	_
)	_	_
and	_	_
Extreme	_	_
Environments	_	_
for	_	_
their	_	_
support	_	_
and	_	_
feedback	_	_
.	_	_

#197
Somdip	_	_
would	_	_
also	_	_
like	_	_
to	_	_
thank	_	_
everyone	_	_
from	_	_
the	_	_
Embedded	_	_
and	_	_
Intelligent	_	_
Systems	_	_
Laboratory	_	_
at	_	_
the	_	_
University	_	_
of	_	_
Essex	_	_
for	_	_
their	_	_
feedback	_	_
on	_	_
this	_	_
project	_	_
.	_	_