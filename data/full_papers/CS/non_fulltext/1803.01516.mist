#0
ar	_	_
X	_	_
iv	_	_
:1	_	_
3	_	_
.	_	_

#1
6v	_	_
1	_	_
[	_	_
cs	_	_
.C	_	_
V	_	_
]	_	_
5	_	_
M	_	_
ar	_	_
2	_	_
A	_	_
new	_	_
stereo	_	_
formulation	_	_
not	_	_
using	_	_
pixel	_	_
and	_	_
disparity	_	_
models	_	_
Kiyoshi	_	_
Oguri	_	_
Yuichiro	_	_
Shibata	_	_
Nagasaki	_	_
University	_	_
Nagasaki	_	_
,	_	_
Japan	_	_
oguri	_	_
,	_	_
shibata	_	_
@	_	_
cis.nagasaki-u.ac.jp	_	_

#2
Abstract	_	_

#3
We	_	_
introduce	_	_
a	_	_
new	_	_
stereo	_	_
formulation	_	_
which	_	_
does	_	_
not	_	_
use	_	_
pixel	_	_
and	_	_
disparity	_	_
models	_	_
.	_	_

#4
Many	_	_
problems	_	_
in	_	_
vision	_	_
are	_	_
treated	_	_
as	_	_
assigning	_	_
each	_	_
pixel	_	_
a	_	_
label	_	_
.	_	_

#5
Disparities	_	_
are	_	_
labels	_	_
for	_	_
stereo	_	_
.	_	_

#6
Such	_	_
pixel-labeling	_	_
problems	_	_
are	_	_
naturally	_	_
represented	_	_
in	_	_
terms	_	_
of	_	_
energy	_	_
minimization	_	_
,	_	_
where	_	_
the	_	_
energy	_	_
function	_	_
has	_	_
two	_	_
terms	_	_
:	_	_
one	_	_
term	_	_
penalizes	_	_
solutions	_	_
that	_	_
inconsistent	_	_
with	_	_
the	_	_
observed	_	_
data	_	_
,	_	_
the	_	_
other	_	_
term	_	_
enforces	_	_
spatial	_	_
smoothness	_	_
.	_	_

#7
Graph	_	_
cuts	_	_
are	_	_
one	_	_
of	_	_
the	_	_
efficient	_	_
methods	_	_
for	_	_
solving	_	_
energy	_	_
minimization	_	_
.	_	_

#8
However	_	_
,	_	_
exact	_	_
minimization	_	_
of	_	_
multi	_	_
labeling	_	_
problems	_	_
can	_	_
be	_	_
performed	_	_
by	_	_
graph	_	_
cuts	_	_
only	_	_
for	_	_
the	_	_
case	_	_
with	_	_
convex	_	_
smoothness	_	_
terms	_	_
.	_	_

#9
In	_	_
pixel-disparity	_	_
formulation	_	_
,	_	_
convex	_	_
smoothness	_	_
terms	_	_
do	_	_
not	_	_
generate	_	_
well	_	_
reconstructed	_	_
3D	_	_
results	_	_
.	_	_

#10
Thus	_	_
,	_	_
truncated	_	_
linear	_	_
or	_	_
quadratic	_	_
smoothness	_	_
terms	_	_
,	_	_
etc	_	_
.	_	_

#11
are	_	_
used	_	_
,	_	_
where	_	_
approximate	_	_
energy	_	_
minimization	_	_
is	_	_
necessary	_	_
.	_	_

#12
In	_	_
this	_	_
paper	_	_
,	_	_
we	_	_
introduce	_	_
a	_	_
new	_	_
site-labeling	_	_
formulation	_	_
,	_	_
where	_	_
the	_	_
sites	_	_
are	_	_
not	_	_
pixels	_	_
but	_	_
lines	_	_
in	_	_
3D	_	_
space	_	_
,	_	_
labels	_	_
are	_	_
not	_	_
disparities	_	_
but	_	_
depth	_	_
numbers	_	_
.	_	_

#13
For	_	_
this	_	_
formulation	_	_
,	_	_
visibility	_	_
reasoning	_	_
is	_	_
naturally	_	_
included	_	_
in	_	_
the	_	_
energy	_	_
function	_	_
.	_	_

#14
In	_	_
addition	_	_
,	_	_
this	_	_
formulation	_	_
allows	_	_
us	_	_
to	_	_
use	_	_
a	_	_
small	_	_
smoothness	_	_
term	_	_
,	_	_
which	_	_
does	_	_
not	_	_
affect	_	_
the	_	_
3D	_	_
results	_	_
much	_	_
.	_	_

#15
This	_	_
makes	_	_
the	_	_
optimization	_	_
step	_	_
very	_	_
simple	_	_
,	_	_
so	_	_
we	_	_
could	capability-feasibility	_
develop	_	_
an	_	_
approximation	_	_
method	_	_
for	_	_
graph	_	_
cut	_	_
itself	_	_
(	_	_
not	_	_
for	_	_
energy	_	_
minimization	_	_
)	_	_
and	_	_
a	_	_
high	_	_
performance	_	_
GPU	_	_
graph	_	_
cut	_	_
program	_	_
.	_	_

#16
For	_	_
Tsukuba	_	_
stereo	_	_
pair	_	_
in	_	_
Middlebury	_	_
data	_	_
set	_	_
,	_	_
we	_	_
got	_	_
the	_	_
result	_	_
in	_	_
5ms	_	_
using	_	_
GTX1080GPU	_	_
,	_	_
19ms	_	_
using	_	_
GTX660GPU	_	_
.	_	_

#17
1.	_	_
Introduction	_	_

#18
If	_	_
we	_	_
define	_	_
stereo	_	_
as	_	_
a	_	_
pixel	_	_
disparity	_	_
labeling	_	_
problem	_	_
,	_	_
this	_	_
labeling	_	_
becomes	_	_
very	_	_
difficult	_	_
,	_	_
since	_	_
disparities	_	_
tend	_	_
to	_	_
be	_	_
piecewise	_	_
smooth	_	_
.	_	_

#19
They	_	_
vary	_	_
smoothly	_	_
on	_	_
the	_	_
surface	_	_
of	_	_
an	_	_
object	_	_
,	_	_
but	_	_
change	_	_
dramatically	_	_
at	_	_
object	_	_
boundaries	_	_
.	_	_

#20
Therefore	_	_
discontinuity	_	_
preserving	_	_
property	_	_
is	_	_
necessary	_	_
.	_	_

#21
The	_	_
goal	_	_
is	_	_
to	_	_
find	_	_
a	_	_
labeling	_	_
f	_	_
where	_	_
f	_	_
is	_	_
both	_	_
piecewise	_	_
smooth	_	_
and	_	_
consistent	_	_
with	_	_
the	_	_
observed	_	_
data	_	_
.	_	_

#22
This	_	_
problem	_	_
can	_	_
be	_	_
naturally	_	_
formulated	_	_
in	_	_
terms	_	_
of	_	_
energy	_	_
minimization	_	_
.	_	_

#23
We	_	_
seek	_	_
the	_	_
labeling	_	_
f	_	_
that	_	_
minimizes	_	_
the	_	_
energy	_	_
E	_	_
(	_	_
f	_	_
)	_	_
=	_	_
Edata	_	_
(	_	_
f	_	_
)	_	_
+	_	_
Esmooth	_	_
(	_	_
f	_	_
)	_	_
,	_	_
where	_	_
Edata	_	_
shows	_	_
an	_	_
energy	_	_
corresponding	_	_
to	_	_
how	_	_
the	_	_
labeling	_	_
f	_	_
consists	_	_
with	_	_
the	_	_
observed	_	_
data	_	_
,	_	_
while	_	_
Esmooth	_	_
evaluates	_	_
the	_	_
smoothness	_	_
of	_	_
f	_	_
.	_	_

#24
The	_	_
choice	_	_
of	_	_
Esmooth	_	_
is	_	_
a	_	_
critical	_	_
issue	_	_
and	_	_
many	_	_
different	_	_
functions	_	_
have	_	_
been	_	_
proposed	_	_
[	_	_
1	_	_
,	_	_
3	_	_
,	_	_
15	_	_
]	_	_
.	_	_

#25
Also	_	_
,	_	_
this	_	_
choice	_	_
requires	_	_
different	_	_
optimization	_	_
methods	_	_
[	_	_
4	_	_
,	_	_
5	_	_
,	_	_
9	_	_
,	_	_
16	_	_
]	_	_
.	_	_

#26
Many	_	_
basic	_	_
methods	_	_
for	_	_
stereo	_	_
use	_	_
scalar	_	_
(	_	_
1D	_	_
)	_	_
disparity	_	_
labels	_	_
.	_	_

#27
Such	_	_
methods	_	_
often	_	_
implicitly	_	_
assume	_	_
front-parallel	_	_
planes	_	_
.	_	_

#28
For	_	_
example	_	_
,	_	_
standard	_	_
piecewise	_	_
smooth	_	_
(	_	_
e.g.	_	_
truncated	_	_
linear	_	_
or	_	_
quadratic	_	_
)	_	_
pairwise	_	_
regularization	_	_
potentials	_	_
assign	_	_
higher	_	_
cost	_	_
to	_	_
surface	_	_
with	_	_
larger	_	_
tilt	_	_
.	_	_

#29
To	_	_
model	_	_
surfaces	_	_
more	_	_
accurately	_	_
Birchfield	_	_
and	_	_
Tomasi	_	_
[	_	_
2	_	_
]	_	_
introduced	_	_
3D-labels	_	_
corresponding	_	_
to	_	_
arbitrary	_	_
3D	_	_
planes	_	_
,	_	_
but	_	_
this	_	_
approach	_	_
is	_	_
limited	_	_
to	_	_
piecewise	_	_
planar	_	_
scenes	_	_
.	_	_

#30
Woodford	_	_
et	_	_
al.	_	_
[	_	_
18	_	_
]	_	_
retain	_	_
the	_	_
scalar	_	_
disparity	_	_
labels	_	_
while	_	_
using	_	_
triple-cliques	_	_
to	_	_
penalize	_	_
2nd	_	_
derivatives	_	_
of	_	_
the	_	_
reconstructed	_	_
surface	_	_
.	_	_

#31
This	_	_
encourages	_	_
near	_	_
planar	_	_
smooth	_	_
disparity	_	_
maps	_	_
.	_	_

#32
The	_	_
optimization	_	_
problem	_	_
is	_	_
however	_	_
made	_	_
substantially	_	_
more	_	_
difficult	_	_
due	_	_
to	_	_
the	_	_
introduction	_	_
of	_	_
non-submodular	_	_
triple	_	_
interactions	_	_
.	_	_

#33
Furthermore	_	_
,	_	_
volumetric	_	_
graph	_	_
cuts	_	_
[	_	_
17	_	_
]	_	_
and	_	_
3D-label	_	_
energy	_	_
model	_	_
[	_	_
14	_	_
]	_	_
have	_	_
been	_	_
proposed	_	_
.	_	_

#34
In	_	_
this	_	_
paper	_	_
we	_	_
discard	_	_
pixel-disparity	_	_
model	_	_
which	_	_
does	_	_
not	_	_
treat	_	_
left	_	_
and	_	_
right	_	_
image	_	_
symmetrically	_	_
.	_	_

#35
We	_	_
treat	_	_
left	_	_
and	_	_
right	_	_
image	_	_
symmetrically	_	_
and	_	_
introduce	_	_
a	_	_
novel	_	_
concept	_	_
of	_	_
gaze	_	_
lines	_	_
,	_	_
which	_	_
are	_	_
auxiliary	_	_
lines	_	_
defined	_	_
on	_	_
the	_	_
cross	_	_
points	_	_
of	_	_
rays	_	_
corresponding	_	_
to	_	_
left	_	_
and	_	_
right	_	_
image	_	_
pixels	_	_
.	_	_

#36
In	_	_
our	_	_
formulations	_	_
,	_	_
sites	_	_
are	_	_
gaze	_	_
lines	_	_
and	_	_
labels	_	_
are	_	_
depth	_	_
numbers	_	_
.	_	_

#37
For	_	_
this	_	_
simple	_	_
formulation	_	_
,	_	_
visibility	_	_
reasoning	_	_
is	_	_
naturally	_	_
included	_	_
in	_	_
the	_	_
energy	_	_
function	_	_
,	_	_
and	_	_
a	_	_
small	_	_
smoothness	_	_
term	_	_
does	_	_
not	_	_
damage	_	_
the	_	_
3D	_	_
results	_	_
much	_	_
.	_	_

#38
Therefore	_	_
,	_	_
we	_	_
use	_	_
convex	_	_
function	_	_
for	_	_
smoothness	_	_
and	_	_
visibility	_	_
terms	_	_
.	_	_

#39
This	_	_
encourages	_	_
exact	_	_
optimization	_	_
by	_	_
graph	_	_
cuts	_	_
[	_	_
10	_	_
,	_	_
13	_	_
]	_	_
.	_	_

#40
Our	_	_
graph	_	_
structure	_	_
is	_	_
some	_	_
what	_	_
similar	_	_
to	_	_
those	_	_
of	_	_
[	_	_
11	_	_
]	_	_
.	_	_

#41
disparity=4	_	_
disparity=5	_	_
disparity=6	_	_
disparity=7	_	_
disparity=8	_	_
disparity=9	_	_
pixel=site	_	_
disparity=label	_	_
right	_	_
cameraleft	_	_
camera	_	_
Figure	_	_
1	_	_
.	_	_

#42
Conventional	_	_
pixel	_	_
disparity	_	_
model	_	_
.	_	_

#43
2	_	_
.	_	_

#44
Energy	_	_
model	_	_
We	_	_
define	_	_
a	_	_
first-order	_	_
priors	_	_
site-labeling	_	_
problem	_	_
as	_	_
follows	_	_
.	_	_

#45
This	_	_
assigns	_	_
every	_	_
site	_	_
v	_	_
a	_	_
label	_	_
,	_	_
which	_	_
we	_	_
write	_	_
as	_	_
Xv	_	_
.	_	_

#46
The	_	_
collection	_	_
of	_	_
all	_	_
site-label	_	_
assignments	_	_
is	_	_
denoted	_	_
by	_	_
X	_	_
.	_	_

#47
The	_	_
set	_	_
of	_	_
all	_	_
site	_	_
v	_	_
is	_	_
denoted	_	_
by	_	_
V	_	_
,	_	_
so	_	_
v	_	_
∈	_	_
V	_	_
.	_	_

#48
The	_	_
set	_	_
of	_	_
all	_	_
label	_	_
l	_	_
is	_	_
denote	_	_
by	_	_
L	_	_
,	_	_
so	_	_
Xv	_	_
∈	_	_
L.	_	_
The	_	_
number	_	_
of	_	_
sites	_	_
is	_	_
n	_	_
,	_	_
and	_	_
the	_	_
number	_	_
of	_	_
labels	_	_
is	_	_
m.	_	_
First	_	_
order	_	_
priors	_	_
are	_	_
defined	_	_
on	_	_
two-sites	_	_
neighborhoods	_	_
(	_	_
u	_	_
,	_	_
v	_	_
)	_	_
∈	_	_
E	_	_
⊂	_	_
V	_	_
×	_	_
V	_	_
.	_	_

#49
Here	_	_
E	_	_
denotes	_	_
the	_	_
set	_	_
of	_	_
all	_	_
neighboring	_	_
sites	_	_
pairs	_	_
.	_	_

#50
The	_	_
energy	_	_
function	_	_
E	_	_
(	_	_
X	_	_
)	_	_
is	_	_
E	_	_
(	_	_
X	_	_
)	_	_
=	_	_
∑	_	_
v∈V	_	_
gv	_	_
(	_	_
Xv	_	_
)	_	_
+	_	_
∑	_	_
(	_	_
u	_	_
,	_	_
v	_	_
)	_	_
∈E	_	_
huv	_	_
(	_	_
Xu	_	_
,	_	_
Xv	_	_
)	_	_
,	_	_
where	_	_
gv	_	_
(	_	_
Xv	_	_
)	_	_
is	_	_
called	_	_
data	_	_
term	_	_
which	_	_
penalizes	_	_
solutions	_	_
that	_	_
are	_	_
inconsistent	_	_
with	_	_
the	_	_
observed	_	_
data	_	_
,	_	_
and	_	_
huv	_	_
(	_	_
Xu	_	_
,	_	_
Xv	_	_
)	_	_
is	_	_
pairwise	_	_
potential	_	_
(	_	_
i.e.	_	_
interaction	_	_
cost	_	_
)	_	_
,	_	_
which	_	_
includes	_	_
smoothness	_	_
energy	_	_
and	_	_
visibility	_	_
reasoning	_	_
energy	_	_
[	_	_
18	_	_
,	_	_
12	_	_
]	_	_
.	_	_

#51
We	_	_
use	_	_
the	_	_
standard	_	_
4-connected	_	_
neighborhood	_	_
system	_	_
.	_	_

#52
If	_	_
the	_	_
labels	_	_
have	_	_
a	_	_
linear	_	_
ordering	_	_
and	_	_
the	_	_
interaction	_	_
cost	_	_
is	_	_
an	_	_
arbitrary	_	_
convex	_	_
function	_	_
,	_	_
the	_	_
problem	_	_
can	_	_
be	_	_
solved	_	_
exactly	_	_
with	_	_
graph	_	_
cuts	_	_
[	_	_
10	_	_
]	_	_
.	_	_

#53
These	_	_
conditions	_	_
are	_	_
represented	_	_
as	_	_
L	_	_
=	_	_
{	_	_
l0	_	_
,	_	_
.	_	_

#54
.	_	_

#55
.	_	_

#56
,	_	_
lm−1	_	_
}	_	_
and	_	_
huv	_	_
(	_	_
li	_	_
,	_	_
lj	_	_
)	_	_
=	_	_
h̃uv	_	_
(	_	_
i−	_	_
j	_	_
)	_	_
that	_	_
is	_	_
,	_	_
labels	_	_
form	_	_
a	_	_
line	_	_
,	_	_
and	_	_
if	_	_
h̃uv	_	_
(	_	_
i+	_	_
1	_	_
)	_	_
−	_	_
2h̃uv	_	_
(	_	_
i	_	_
)	_	_
+	_	_
h̃uv	_	_
(	_	_
i−	_	_
1	_	_
)	_	_
≥	_	_
0	_	_
,	_	_
(	_	_
1	_	_
)	_	_
then	_	_
interaction	_	_
cost	_	_
becomes	_	_
convex	_	_
function	_	_
.	_	_

#57
3	_	_
.	_	_

#58
New	_	_
site	_	_
and	_	_
label	_	_
Figure	_	_
1	_	_
shows	_	_
the	_	_
conventional	_	_
pixel-disparity	_	_
labeling	_	_
,	_	_
where	_	_
pixels	_	_
are	_	_
sites	_	_
and	_	_
disparities	_	_
are	_	_
labels	_	_
.	_	_

#59
Figure	_	_
2	_	_
shows	_	_
‘cross	_	_
points’	_	_
of	_	_
rays	_	_
correspond	_	_
to	_	_
left	_	_
and	_	_
right	_	_
image	_	_
pixels	_	_
and	_	_
‘gaze	_	_
lines’	_	_
which	_	_
connect	_	_
some	_	_
of	_	_
the	_	_
cross	_	_
points	_	_
.	_	_

#60
We	_	_
denote	_	_
a	_	_
coordinate	_	_
of	_	_
a	_	_
left	_	_
pixel	_	_
as	_	_
(	_	_
xl	_	_
,	_	_
yl	_	_
)	_	_
,	_	_
a	_	_
right	_	_
pixel	_	_
as	_	_
(	_	_
xr	_	_
,	_	_
yr	_	_
)	_	_
,	_	_
here	_	_
xl	_	_
,	_	_
xr	_	_
∈	_	_
{	_	_
0	_	_
,	_	_
1	_	_
,	_	_
2	_	_
,	_	_
.	_	_

#61
.	_	_

#62
.	_	_

#63
,	_	_
w	_	_
−	_	_
1	_	_
}	_	_
,	_	_
yl	_	_
,	_	_
yr	_	_
∈	_	_
{	_	_
0	_	_
,	_	_
1	_	_
,	_	_
2	_	_
,	_	_
.	_	_

#64
.	_	_

#65
.	_	_

#66
,	_	_
h	_	_
−	_	_
1	_	_
}	_	_
.	_	_

#67
The	_	_
(	_	_
w	_	_
,	_	_
h	_	_
)	_	_
is	_	_
image	_	_
2D	_	_
size	_	_
.	_	_

#68
A	_	_
cross	_	_
point	_	_
is	_	_
represented	_	_
as	_	_
(	_	_
xl	_	_
,	_	_
xr	_	_
,	_	_
y	_	_
)	_	_
∈	_	_
{	_	_
(	_	_
(	_	_
xl	_	_
,	_	_
yl	_	_
)	_	_
,	_	_
(	_	_
xr	_	_
,	_	_
yr	_	_
)	_	_
)	_	_
|y	_	_
=	_	_
yl	_	_
=	_	_
yr	_	_
}	_	_
.	_	_

#69
A	_	_
gaze	_	_
lines	_	_
is	_	_
represented	_	_
as	_	_
(	_	_
g	_	_
,	_	_
y	_	_
)	_	_
∈	_	_
{	_	_
(	_	_
xl	_	_
,	_	_
xr	_	_
,	_	_
y	_	_
)	_	_
|xr+xl	_	_
=	_	_
w−1+2g	_	_
}	_	_
,	_	_
where	_	_
g	_	_
is	_	_
an	_	_
integer	_	_
and	_	_
−w/2	_	_
<	_	_
g	_	_
<	_	_
w/2	_	_
.	_	_

#70
A	_	_
depth	_	_
line	_	_
is	_	_
represented	_	_
as	_	_
(	_	_
d	_	_
,	_	_
y	_	_
)	_	_
∈	_	_
{	_	_
(	_	_
xl	_	_
,	_	_
xr	_	_
,	_	_
y	_	_
)	_	_
|xr−xl	_	_
=	_	_
−	_	_
(	_	_
w−1	_	_
)	_	_
+2d	_	_
}	_	_
,	_	_
where	_	_
d	_	_
is	_	_
an	_	_
integer	_	_
and	_	_
0	_	_
≤	_	_
d	_	_
<	_	_
w/2	_	_
.	_	_

#71
We	_	_
call	_	_
d	_	_
a	_	_
depth	_	_
number	_	_
.	_	_

#72
A	_	_
cross	_	_
point	_	_
(	_	_
xl	_	_
,	_	_
xr	_	_
,	_	_
y	_	_
)	_	_
is	_	_
also	_	_
represented	_	_
as	_	_
(	_	_
g	_	_
,	_	_
d	_	_
,	_	_
y	_	_
)	_	_
by	_	_
using	_	_
g	_	_
and	_	_
d.	_	_
These	_	_
gaze	_	_
lines	_	_
form	_	_
sites	_	_
and	_	_
depth	_	_
numbers	_	_
become	_	_
labels	_	_
.	_	_

#73
Next	_	_
we	_	_
consider	_	_
three	_	_
cases	_	_
(	_	_
Figure	_	_
2	_	_
)	_	_
.	_	_

#74
We	_	_
can	_	_
assign	_	_
1.	_	_
the	_	_
same	_	_
depth	_	_
numbers	_	_
,	_	_
2.	_	_
two	_	_
depth	_	_
numbers	_	_
differ	_	_
by	_	_
one	_	_
,	_	_
3.	_	_
two	_	_
depth	_	_
numbers	_	_
differ	_	_
by	_	_
more	_	_
than	_	_
one	_	_
between	_	_
two	_	_
neighboring	_	_
sites	_	_
.	_	_

#75
Assigning	_	_
the	_	_
same	_	_
depth	_	_
numbers	_	_
means	_	_
a	_	_
front	_	_
parallel	_	_
plane	_	_
,	_	_
as	_	_
same	_	_
as	_	_
in	_	_
pixel-disparity	_	_
model	_	_
.	_	_

#76
Assigning	_	_
depth	_	_
numbers	_	_
differ	_	_
by	_	_
one	_	_
means	_	_
that	_	_
the	_	_
two	_	_
cross	_	_
points	_	_
are	_	_
on	_	_
the	_	_
same	_	_
ray	_	_
of	_	_
the	_	_
right	_	_
or	_	_
left	_	_
camera	_	_
.	_	_

#77
Assigning	_	_
depth	_	_
numbers	_	_
differ	_	_
by	_	_
more	_	_
than	_	_
one	_	_
means	_	_
that	_	_
the	_	_
cross	_	_
point	_	_
in	_	_
the	_	_
back	_	_
is	_	_
invisible	_	_
,	_	_
since	_	_
it	_	_
is	_	_
behind	_	_
some	_	_
front	_	_
object	_	_
(	_	_
Figure	_	_
3	_	_
)	_	_
.	_	_

#78
That	_	_
is	_	_
,	_	_
assigning	_	_
labels	_	_
differ	_	_
by	_	_
more	_	_
than	_	_
one	_	_
to	_	_
neighboring	_	_
sites	_	_
is	_	_
inhibited	_	_
in	_	_
our	_	_
site-labeling	_	_
.	_	_

#79
Therefore	_	_
,	_	_
we	_	_
can	_	_
write	_	_
h̃uv	_	_
(	_	_
i−j	_	_
)	_	_
=	_	_
h̃1×|i−j|+h̃2×	_	_
(	_	_
|i−j|−1	_	_
)	_	_
×T	_	_
(	_	_
|i−j|	_	_
>	_	_
1	_	_
)	_	_
.	_	_

#80
Here	_	_
,	_	_
i	_	_
and	_	_
j	_	_
are	_	_
depth	_	_
numbers	_	_
,	_	_
T	_	_
(	_	_
b	_	_
)	_	_
becomes	_	_
1	_	_
if	_	_
b	_	_
is	_	_
true	_	_
,	_	_
otherwise	_	_
0	_	_
,	_	_
h̃1	_	_
and	_	_
h̃2	_	_
are	_	_
constant	_	_
values	_	_
,	_	_
and	_	_
h̃2	_	_
is	_	_
infinity	_	_
(	_	_
actually	_	_
enough	_	_
big	_	_
integer	_	_
)	_	_
.	_	_

#81
We	_	_
call	_	_
h̃1	_	_
‘penalty’	_	_
for	_	_
smoothness	_	_
,	_	_
h̃2	_	_
‘inhibit’	_	_
for	_	_
visibility	_	_
.	_	_

#82
This	_	_
h̃uv	_	_
(	_	_
i	_	_
−	_	_
j	_	_
)	_	_
satisfies	_	_
Equation	_	_
1	_	_
.	_	_

#83
Therefore	_	_
two-sites	_	_
neighboring	_	_
terms	_	_
become	_	_
a	_	_
convex	_	_
function	_	_
.	_	_

#84
So	_	_
,	_	_
we	_	_
can	_	_
minimize	_	_
the	_	_
energy	_	_
by	_	_
simple	_	_
graph	_	_
cuts	_	_
.	_	_

#85
This	_	_
energy	_	_
function	_	_
is	_	_
easily	_	_
mapped	_	_
to	_	_
the	_	_
graph	_	_
structure	_	_
illustrated	_	_
in	_	_
Figure	_	_
4	_	_
.	_	_

#86
It	_	_
is	_	_
worthwhile	_	_
noticing	_	_
that	_	_
Potts	_	_
or	_	_
truncated	_	_
model	_	_
is	_	_
unnecessary	_	_
,	_	_
since	_	_
any	_	_
disparities	_	_
change	_	_
along	_	_
a	_	_
ray	_	_
increases	_	_
only	_	_
once	_	_
h̃1	_	_
energy	_	_
per	_	_
each	_	_
neighboring	_	_
sites	_	_
pair	_	_
.	_	_

#87
It	_	_
is	_	_
also	_	_
important	_	_
that	_	_
the	_	_
inhibit	_	_
term	_	_
rejects	_	_
the	_	_
solutions	_	_
with	_	_
occlusions	_	_
.	_	_

#88
In	_	_
our	_	_
model	_	_
,	_	_
invisible	_	_
positions	_	_
are	_	_
inherently	_	_
removed	_	_
from	_	_
the	_	_
beginning	_	_
.	_	_

#89
We	_	_
do	_	_
not	_	_
seek	_	_
discontinuous	_	_
surface	_	_
,	_	_
but	_	_
seek	_	_
continuous	_	_
surface	_	_
.	_	_

#90
For	_	_
dashed	_	_
parts	_	_
in	_	_
Figure	_	_
5	_	_
,	_	_
we	_	_
can	_	_
not	_	_
know	_	_
whether	_	_
some	_	_
objects	_	_
surfaces	_	_
exist	_	_
or	_	_
not	_	_
from	_	_
the	_	_
only	_	_
one	_	_
stereo	_	_
view	_	_
.	_	_

#91
Furthermore	_	_
,	_	_
we	_	_
can	_	_
think	_	_
that	_	_
this	_	_
problem	_	_
is	_	_
not	_	_
a	_	_
sites	_	_
labeling	_	_
problem	_	_
,	_	_
but	_	_
a	_	_
real	_	_
cross	_	_
points	_	_
finding	_	_
problem	_	_
from	_	_
all	_	_
cross	_	_
points	_	_
.	_	_

#92
Real	_	_
cross	_	_
points	_	_
make	_	_
a	_	_
surface	_	_
in	_	_
3D	_	_
space	_	_
.	_	_

#93
Graph	_	_
cuts	_	_
divide	_	_
3D	_	_
space	_	_
into	_	_
two	_	_
pieces	_	_
by	_	_
this	_	_
surface	_	_
.	_	_

#94
We	_	_
will	_	_
use	_	_
the	_	_
term	_	_
‘real	_	_
cross	_	_
point’	_	_
later	_	_
.	_	_

#95
right	_	_
cameraleft	_	_
camera	_	_
gaze	_	_
line	_	_
depth	_	_
line	_	_
ray	_	_
cross	_	_
point	_	_
depth	_	_
numbers	_	_
differ	_	_
by	_	_
1	_	_
depth	_	_
numbers	_	_
differ	_	_
by	_	_
2	_	_
same	_	_
depth	_	_
numbers	_	_
case	_	_
1.	_	_
case	_	_
2.	_	_
case	_	_
3	_	_
.	_	_

#96
Figure	_	_
2	_	_
.	_	_

#97
Our	_	_
new	_	_
‘gaze	_	_
line’	_	_
‘depth	_	_
number’	_	_
model	_	_
.	_	_

#98
Gaze	_	_
lines	_	_
start	_	_
the	_	_
center	_	_
of	_	_
both	_	_
eyes	_	_
,	_	_
i.e.	_	_
right	_	_
and	_	_
left	_	_
cameras	_	_
.	_	_

#99
We	_	_
think	_	_
that	_	_
I	_	_
am	_	_
in	_	_
the	_	_
center	_	_
of	_	_
both	_	_
eyes	_	_
.	_	_

#100
This	_	_
figure	_	_
also	_	_
illustrates	_	_
‘cross	_	_
points’	_	_
.	_	_

#101
The	_	_
‘real	_	_
cross	_	_
points’	_	_
exist	_	_
on	_	_
the	_	_
object	_	_
surface	_	_
.	_	_

#102
Figure	_	_
3	_	_
.	_	_

#103
The	_	_
posterior	_	_
‘cross	_	_
point’	_	_
is	_	_
behind	_	_
some	_	_
front	_	_
object	_	_
.	_	_

#104
4	_	_
.	_	_

#105
Experiments	_	_
4.1	_	_
.	_	_

#106
Relation	_	_
between	_	_
disparity­model	_	_
and	_	_
gaze­line	_	_
model	_	_
We	_	_
use	_	_
Tsukuba	_	_
stereo	_	_
pair	_	_
(	_	_
left	_	_
:	_	_
scene1.row3.col1.ppm	_	_
,	_	_
right	_	_
:	_	_
scene1.row3.col3.ppm	_	_
,	_	_
384	_	_
×	_	_
288	_	_
pixels	_	_
)	_	_
and	_	_
its	_	_
ground	_	_
truth	_	_
(	_	_
truedisp.row3.col3.pgm	_	_
,	_	_
disparity	_	_
=	_	_
10	_	_
.	_	_

#107
.	_	_

#108
.28	_	_
pixels	_	_
)	_	_
in	_	_
Middlebury	_	_
data	_	_
set	_	_
.	_	_

#109
We	_	_
introduce	_	_
the	_	_
integer	_	_
co-ordinates	_	_
(	_	_
W	_	_
,	_	_
H	_	_
,	_	_
S	_	_
)	_	_
for	_	_
cross	_	_
points	_	_
(	_	_
g	_	_
,	_	_
d	_	_
,	_	_
y	_	_
)	_	_
for	_	_
simplicity	_	_
.	_	_

#110
W	_	_
is	_	_
the	_	_
horizontal	_	_
axis	_	_
which	_	_
has	_	_
the	_	_
left	_	_
to	_	_
right	_	_
direction	_	_
.	_	_

#111
H	_	_
is	_	_
the	_	_
vertical	_	_
axis	_	_
which	_	_
has	_	_
the	_	_
up	_	_
to	_	_
down	_	_
direction	_	_
.	_	_

#112
S	_	_
is	_	_
the	_	_
depth	_	_
axis	_	_
which	_	_
has	_	_
the	_	_
front	_	_
to	_	_
back	_	_
direction	_	_
.	_	_

#113
(	_	_
W	_	_
,	_	_
H	_	_
,	_	_
S	_	_
)	_	_
and	_	_
(	_	_
g	_	_
,	_	_
d	_	_
,	_	_
y	_	_
)	_	_
are	_	_
related	_	_
as	_	_
W	_	_
=	_	_
g	_	_
+	_	_
offset1	_	_
H	_	_
=	_	_
y	_	_
+	_	_
offset2	_	_
S	_	_
=	_	_
d+	_	_
offset3	_	_
.	_	_

#114
Then	_	_
we	_	_
denote	_	_
a	_	_
pixel	_	_
in	_	_
right	_	_
image	_	_
as	_	_
(	_	_
x	_	_
,	_	_
y	_	_
)	_	_
,	_	_
and	_	_
its	_	_
disparity	_	_
as	_	_
dis	_	_
.	_	_

#115
The	_	_
relation	_	_
between	_	_
(	_	_
W	_	_
,	_	_
H	_	_
,	_	_
S	_	_
)	_	_
and	_	_
(	_	_
x	_	_
,	_	_
y	_	_
,	_	_
dis	_	_
)	_	_
is	_	_
written	_	_
as	_	_
follows	_	_
,	_	_
W	_	_
=	_	_
x−	_	_
(	_	_
lwoffset	_	_
+	_	_
rwoffset	_	_
)	_	_
/2	_	_
+	_	_
dis/2	_	_
H	_	_
=	_	_
y	_	_
−	_	_
hoffset	_	_
S	_	_
=	_	_
(	_	_
lwoffset	_	_
−	_	_
rwoffset	_	_
)	_	_
/2−	_	_
dis/2	_	_
and	_	_
x	_	_
=	_	_
rwoffset	_	_
+	_	_
S	_	_
+W	_	_
y	_	_
=	_	_
hoffset	_	_
+H	_	_
dis	_	_
=	_	_
lwoffset	_	_
−	_	_
rwoffset	_	_
−	_	_
2S	_	_
.	_	_

#116
Where	_	_
,	_	_
offset1	_	_
,	_	_
offset2	_	_
,	_	_
offset3	_	_
,	_	_
lwoffset	_	_
,	_	_
rwoffset	_	_
,	_	_
hoffset	_	_
define	_	_
the	_	_
center	_	_
of	_	_
cuboid	_	_
area	_	_
,	_	_
but	_	_
we	_	_
omit	_	_
details	_	_
here	_	_
.	_	_

#117
If	_	_
dis	_	_
changes	_	_
2	_	_
,	_	_
then	_	_
S	_	_
changes	_	_
1	_	_
.	_	_

#118
Therefore	_	_
in	_	_
our	_	_
model	_	_
the	_	_
half	_	_
of	_	_
pixels	_	_
are	_	_
unused	_	_
.	_	_

#119
This	_	_
is	_	_
the	_	_
weak	_	_
point	_	_
of	_	_
our	_	_
new	_	_
site-labeling	_	_
formulation	_	_
.	_	_

#120
However	_	_
,	_	_
since	_	_
the	_	_
pixel	_	_
density	_	_
of	_	_
CMOS	_	_
camera	_	_
is	_	_
increasing	_	_
year	_	_
by	_	_
year	_	_
,	_	_
we	_	_
think	_	_
this	_	_
is	_	_
not	_	_
significant	_	_
.	_	_

#121
Using	_	_
this	_	_
relation	_	_
,	_	_
we	_	_
can	_	_
translate	_	_
each	_	_
other	_	_
between	_	_
ground	_	_
truth	_	_
cross	_	_
points	_	_
and	_	_
ground	_	_
truth	_	_
disparities	_	_
.	_	_

#122
In	_	_
dividing-by-2	_	_
operations	_	_
in	_	_
the	_	_
above	_	_
equations	_	_
,	_	_
we	_	_
round	_	_
away	_	_
to	_	_
get	_	_
integer	_	_
values	_	_
.	_	_

#123
4.2	_	_
.	_	_

#124
Error	_	_
count	_	_
For	_	_
evaluation	_	_
we	_	_
define	_	_
an	_	_
‘error’	_	_
as	_	_
follows	_	_
,	_	_
error	_	_
=	_	_
∑	_	_
s∈all	_	_
sites	_	_
d	_	_
(	_	_
s	_	_
)	_	_
=	_	_
∑	_	_
d=0	_	_
d×	_	_
the	_	_
number	_	_
of	_	_
such	_	_
sites	_	_
.	_	_

#125
(	_	_
2	_	_
)	_	_
Here	_	_
,	_	_
d	_	_
(	_	_
s	_	_
)	_	_
means	_	_
difference	_	_
between	_	_
the	_	_
truth	_	_
depth	_	_
number	_	_
and	_	_
the	_	_
estimated	_	_
depth	_	_
number	_	_
at	_	_
site	_	_
s.	_	_
d	_	_
number	_	_
of	_	_
such	_	_
sites	_	_
percentage	_	_
0	_	_
76502	_	_
92	_	_
%	_	_
1	_	_
3766	_	_
4	_	_
%	_	_
2	_	_
839	_	_
1	_	_
%	_	_
3	_	_
547	_	_
0	_	_
%	_	_
4	_	_
98	_	_
0	_	_
%	_	_
5	_	_
82	_	_
0	_	_
%	_	_
6	_	_
146	_	_
0	_	_
%	_	_
7	_	_
46	_	_
0	_	_
%	_	_
8	_	_
36	_	_
0	_	_
%	_	_
9	_	_
245	_	_
0	_	_
%	_	_
10∼	_	_
0	_	_
0	_	_
%	_	_
error	_	_
11578	_	_
Table	_	_
1	_	_
.	_	_

#126
Breakdown	_	_
of	_	_
the	_	_
error	_	_
(	_	_
Equation	_	_
2	_	_
)	_	_
at	_	_
inhibit=1023	_	_
,	_	_
penalty=14	_	_
.	_	_

#127
d	_	_
indicates	_	_
the	_	_
differences	_	_
to	_	_
ground	_	_
truth	_	_
.	_	_

#128
4.3	_	_
.	_	_

#129
Graph	_	_
cuts	_	_
using	_	_
our	_	_
model	_	_
We	_	_
use	_	_
a	_	_
cuboid	_	_
area	_	_
which	_	_
includes	_	_
372×288×24	_	_
cross	_	_
points	_	_
for	_	_
Tsukuba	_	_
stereo	_	_
pair	_	_
.	_	_

#130
This	_	_
cuboid	_	_
cross	_	_
points	_	_
are	_	_
mapped	_	_
to	_	_
a	_	_
graph	_	_
with	_	_
372	_	_
×	_	_
288	_	_
×	_	_
23	_	_
+	_	_
2	_	_
=	_	_
2464130	_	_
nodes	_	_
and	_	_
19430137	_	_
edges	_	_
.	_	_

#131
We	_	_
use	_	_
a	_	_
simple	_	_
sum	_	_
of	_	_
absolute	_	_
difference	_	_
data	_	_
term	_	_
as	_	_
gv	_	_
(	_	_
Xv	_	_
)	_	_
=	_	_
|LR	_	_
−RR|+	_	_
|LG	_	_
−RG|+	_	_
|LB	_	_
−RB	_	_
|	_	_
,	_	_
where	_	_
,	_	_
Xv	_	_
means	_	_
the	_	_
cross	_	_
point	_	_
(	_	_
g	_	_
,	_	_
d	_	_
,	_	_
y	_	_
)	_	_
=	_	_
(	_	_
xl	_	_
,	_	_
xr	_	_
,	_	_
y	_	_
)	_	_
in	_	_
our	_	_
model	_	_
,	_	_
therefore	_	_
,	_	_
(	_	_
LR	_	_
,	_	_
LG	_	_
,	_	_
LB	_	_
)	_	_
is	_	_
color	_	_
of	_	_
left	_	_
pixel	_	_
(	_	_
xl	_	_
,	_	_
y	_	_
)	_	_
,	_	_
(	_	_
RR	_	_
,	_	_
RG	_	_
,	_	_
RB	_	_
)	_	_
is	_	_
color	_	_
of	_	_
right	_	_
pixel	_	_
(	_	_
xr	_	_
,	_	_
y	_	_
)	_	_
.	_	_

#132
The	_	_
color	_	_
intensity	_	_
is	_	_
from	_	_
0	_	_
to	_	_
255	_	_
.	_	_

#133
So	_	_
,	_	_
gv	_	_
(	_	_
Xv	_	_
)	_	_
varies	_	_
from	_	_
0	_	_
to	_	_
765	_	_
.	_	_

#134
We	_	_
use	_	_
1023	_	_
for	_	_
the	_	_
inhibit	_	_
constant	_	_
(	_	_
h̃2	_	_
)	_	_
.	_	_

#135
1023	_	_
is	_	_
enough	_	_
big	_	_
,	_	_
since	_	_
increasing	_	_
the	_	_
inhibit	_	_
constant	_	_
did	_	_
not	_	_
increase	_	_
max	_	_
flow	_	_
in	_	_
our	_	_
experiments	_	_
.	_	_

#136
We	_	_
do	_	_
not	_	_
know	_	_
the	_	_
theoretical	_	_
reason	_	_
to	_	_
get	_	_
the	_	_
best	_	_
penalty	_	_
constant	_	_
value	_	_
(	_	_
h̃1	_	_
)	_	_
.	_	_

#137
We	_	_
sought	_	_
it	_	_
by	_	_
experiments	_	_
.	_	_

#138
Figure	_	_
6	_	_
indicates	_	_
14	_	_
is	_	_
experimentally	_	_
the	_	_
best	_	_
.	_	_

#139
At	_	_
this	_	_
value	_	_
the	_	_
error	_	_
becomes	_	_
11578	_	_
.	_	_

#140
Table	_	_
1	_	_
shows	_	_
details	_	_
of	_	_
this	_	_
case	_	_
.	_	_

#141
The	_	_
92	_	_
%	_	_
of	_	_
sites	_	_
are	_	_
equal	_	_
to	_	_
the	_	_
ground	_	_
truth	_	_
.	_	_

#142
Figure	_	_
7	_	_
is	_	_
the	_	_
result	_	_
disparity	_	_
image	_	_
of	_	_
our	_	_
stereo	_	_
formulation	_	_
with	_	_
h̃1	_	_
=	_	_
14	_	_
,	_	_
h̃2	_	_
=	_	_
1023	_	_
.	_	_

#143
Figure	_	_
6	_	_
also	_	_
indicates	_	_
the	_	_
difference	_	_
between	_	_
with	_	_
the	_	_
inhibit	_	_
constant	_	_
and	_	_
without	_	_
it	_	_
.	_	_

#144
4.4	_	_
.	_	_

#145
GPU	_	_
graph	_	_
cuts	_	_
This	_	_
graph	_	_
is	_	_
successfully	_	_
cut	_	_
by	_	_
BK	_	_
Maxflow/mincut	_	_
code	_	_
(	_	_
maxflow-v3.01.zip	_	_
at	_	_
vision.csd.uwo.ca/code	_	_
)	_	_
.	_	_

#146
It	_	_
takes	_	_
3823ms	_	_
at	_	_
Corei7-5930K	_	_
3.5GHz	_	_
CPU	_	_
(	_	_
Table	_	_
2	_	_
)	_	_
.	_	_

#147
It	_	_
is	_	_
so	_	_
slow	_	_
for	_	_
real	_	_
time	_	_
use	_	_
that	_	_
we	_	_
have	_	_
developed	_	_
high	_	_
speed	_	_
GPU	_	_
graph	_	_
cuts	_	_
codes	_	_
.	_	_

#148
We	_	_
have	_	_
adopted	_	_
the	_	_
‘push	_	_
relabel’	_	_
algorithm	_	_
with	_	_
global	_	_
label	_	_
update	_	_
[	_	_
8	_	_
,	_	_
6	_	_
,	_	_
7	_	_
]	_	_
.	_	_

#149
The	_	_
following	_	_
is	_	_
our	_	_
graph	_	_
cut	_	_
function	_	_
described	_	_
in	_	_
CUDA	_	_
(	_	_
Compute	_	_
Unified	_	_
Device	_	_
Architecture	_	_
)	_	_
for	_	_
NVIDIA	_	_
GPUs	_	_
.	_	_

#150
Before	_	_
calling	_	_
this	_	_
function	_	_
,	_	_
the	_	_
‘data’s	_	_
from/to	_	_
the	_	_
special	_	_
node	_	_
S/T	_	_
are	_	_
translated	_	_
to	_	_
the	_	_
positive/negative	_	_
overflows	_	_
data	_	_
inhibit	_	_
penalty	_	_
S	_	_
T|lr-rr|+|lg-rg|+|lb-rb|	_	_
object	_	_
surface	_	_
cut	_	_
Figure	_	_
4	_	_
.	_	_

#151
The	_	_
graph	_	_
structure	_	_
representing	_	_
the	_	_
energy	_	_
function	_	_
.	_	_

#152
Left	_	_
portion	_	_
indicates	_	_
‘gaze	_	_
lines’	_	_
and	_	_
‘depth	_	_
numbers’	_	_
,	_	_
i.e.	_	_
‘cross	_	_
points’	_	_
,	_	_
right	_	_
portion	_	_
indicates	_	_
a	_	_
corresponding	_	_
graph	_	_
structure	_	_
.	_	_

#153
‘Cross	_	_
points’	_	_
correspond	_	_
to	_	_
the	_	_
edges	_	_
of	_	_
the	_	_
graph	_	_
.	_	_

#154
This	_	_
figure	_	_
shows	_	_
only	_	_
one	_	_
epipolar	_	_
slice	_	_
.	_	_

#155
Actual	_	_
graph	_	_
is	_	_
three	_	_
dimensional	_	_
.	_	_

#156
of	_	_
nodes	_	_
,	_	_
while	_	_
the	_	_
‘data’s	_	_
between	_	_
normal	_	_
nodes	_	_
are	_	_
set	_	_
to	_	_
the	_	_
edges	_	_
.	_	_

#157
void	_	_
graph_cut	_	_
(	_	_
void	_	_
)	_	_
{	_	_
int	_	_
d	_	_
;	_	_
wave_init	_	_
<	_	_
<	_	_
<	_	_
grid	_	_
,	_	_
block	_	_
>	_	_
>	_	_
>	_	_
(	_	_
)	_	_
;	_	_
for	_	_
(	_	_
int	_	_
time	_	_
=	_	_
1	_	_
;	_	_
time	_	_
<	_	_
A	_	_
;	_	_
time++	_	_
)	_	_
wave	_	_
<	_	_
<	_	_
<	_	_
grid	_	_
,	_	_
block	_	_
>	_	_
>	_	_
>	_	_
(	_	_
time	_	_
)	_	_
;	_	_
for	_	_
(	_	_
;	_	_
;	_	_
)	_	_
{	_	_
//	_	_
push	_	_
relabel	_	_
loop	_	_
bfs_init	_	_
<	_	_
<	_	_
<	_	_
grid	_	_
,	_	_
block	_	_
>	_	_
>	_	_
>	_	_
(	_	_
)	_	_
;	_	_
for	_	_
(	_	_
;	_	_
;	_	_
)	_	_
{	_	_
bfs_i	_	_
<	_	_
<	_	_
<	_	_
grid	_	_
,	_	_
block	_	_
>	_	_
>	_	_
>	_	_
(	_	_
)	_	_
;	_	_
d	_	_
=	_	_
0	_	_
;	_	_
bfs_o	_	_
<	_	_
<	_	_
<	_	_
grid	_	_
,	_	_
block	_	_
>	_	_
>	_	_
>	_	_
(	_	_
d	_	_
)	_	_
;	_	_
if	_	_
(	_	_
d	_	_
==	_	_
0	_	_
)	_	_
break	_	_
;	_	_
}	_	_
ovf	_	_
<	_	_
<	_	_
<	_	_
grid	_	_
,	_	_
block	_	_
>	_	_
>	_	_
>	_	_
(	_	_
d	_	_
)	_	_
;	_	_
if	_	_
(	_	_
d	_	_
==	_	_
0	_	_
)	_	_
break	_	_
;	_	_
for	_	_
(	_	_
int	_	_
i	_	_
=	_	_
0	_	_
;	_	_
i	_	_
<	_	_
B	_	_
;	_	_
i++	_	_
)	_	_
push_relabel	_	_
<	_	_
<	_	_
<	_	_
grid	_	_
,	_	_
block	_	_
>	_	_
>	_	_
>	_	_
(	_	_
)	_	_
;	_	_
}	_	_
}	_	_
Where	_	_
,	_	_
grid	_	_
×	_	_
block	_	_
=	_	_
372	_	_
×	_	_
288	_	_
×	_	_
23	_	_
=	_	_
2464128	_	_
and	_	_
<	_	_
<	_	_
<	_	_
>	_	_
>	_	_
>	_	_
indicates	_	_
threads	_	_
invoking	_	_
.	_	_

#158
Accordingly	_	_
,	_	_
2464128	_	_
cuda	_	_
cores	_	_
in	_	_
a	_	_
GPU	_	_
are	_	_
invoked	_	_
at	_	_
once	_	_
.	_	_

#159
Before	_	_
the	_	_
push	_	_
relabel	_	_
loop	_	_
,	_	_
we	_	_
add	_	_
the	_	_
‘wave	_	_
front	_	_
fetch’	_	_
operation	_	_
which	_	_
we	_	_
have	_	_
developed	_	_
originally	_	_
.	_	_

#160
This	_	_
increases	_	_
the	_	_
graph	_	_
cut	_	_
speed	_	_
twice	_	_
,	_	_
but	_	_
we	_	_
omit	_	_
details	_	_
here	_	_
.	_	_

#161
It	_	_
takes	_	_
122ms	_	_
at	_	_
GTX1080	_	_
GPU	_	_
(	_	_
Table	_	_
2	_	_
)	_	_
.	_	_

#162
It	_	_
is	_	_
still	_	_
slow	_	_
for	_	_
real	_	_
time	_	_
use	_	_
.	_	_

#163
4.5	_	_
.	_	_

#164
Approximate	_	_
graph	_	_
cuts	_	_
In	_	_
order	_	_
to	_	_
reduce	_	_
the	_	_
processing	_	_
time	_	_
,	_	_
we	_	_
have	_	_
developed	_	_
the	_	_
hierarchical	_	_
graph	_	_
cuts	_	_
which	_	_
consist	_	_
of	_	_
two	_	_
steps	_	_
.	_	_

#165
In	_	_
the	_	_
first	_	_
step	_	_
,	_	_
2	_	_
×	_	_
2	_	_
×	_	_
2	_	_
or	_	_
3	_	_
×	_	_
3	_	_
×	_	_
3	_	_
neighboring	_	_
cross	_	_
points	_	_
are	_	_
combined	_	_
into	_	_
one	_	_
delegate	_	_
point	_	_
.	_	_

#166
The	_	_
first	_	_
graph	_	_
cut	_	_
determines	_	_
which	_	_
delegate	_	_
points	_	_
include	_	_
real	_	_
cross	_	_
points	_	_
.	_	_

#167
The	_	_
second	_	_
graph	_	_
cut	_	_
finds	_	_
real	_	_
cross	_	_
points	_	_
from	_	_
the	_	_
all	_	_
cross	_	_
points	_	_
which	_	_
are	_	_
included	_	_
in	_	_
a	_	_
thin	_	_
skin	_	_
3D	_	_
area	_	_
.	_	_

#168
We	_	_
denote	_	_
this	_	_
procedure	_	_
as	_	_
level	_	_
1	_	_
approximation	_	_
.	_	_

#169
In	_	_
the	_	_
expression	_	_
2	_	_
×	_	_
2	_	_
×	_	_
2	_	_
or	_	_
3	_	_
×	_	_
3	_	_
×	_	_
3	_	_
,	_	_
we	_	_
call	_	_
2	_	_
or	_	_
3	_	_
as	_	_
‘block	_	_
size’	_	_
,	_	_
2	_	_
×	_	_
2	_	_
×	_	_
2	_	_
or	_	_
3	_	_
×	_	_
3	_	_
×	_	_
3	_	_
as	_	_
‘block’	_	_
.	_	_

#170
These	_	_
‘block’	_	_
differ	_	_
from	_	_
previous	_	_
block	_	_
.	_	_

#171
If	_	_
the	_	_
block	_	_
size	_	_
equals	_	_
to	_	_
1	_	_
,	_	_
the	_	_
first	_	_
graph	_	_
cut	_	_
find	_	_
real	_	_
cross	_	_
points	_	_
,	_	_
that	_	_
is	_	_
,	_	_
this	_	_
means	_	_
exact	_	_
minimization	_	_
.	_	_

#172
Using	_	_
level	_	_
1	_	_
approximation	_	_
,	_	_
the	_	_
same	_	_
processing	_	_
time	_	_
of	_	_
14ms	_	_
was	_	_
achieved	_	_
for	_	_
both	_	_
block	_	_
sizes	_	_
of	_	_
2	_	_
and	_	_
3	_	_
at	_	_
GTX1080	_	_
GPU	_	_
(	_	_
Table	_	_
2	_	_
)	_	_
.	_	_

#173
Corresponding	_	_
the	_	_
result	_	_
disparity	_	_
images	_	_
are	_	_
Figure	_	_
8	_	_
and	_	_
Figure	_	_
9	_	_
,	_	_
respectively	_	_
.	_	_

#174
We	_	_
have	_	_
developed	_	_
further	_	_
approximation	_	_
i.e.	_	_
level	_	_
2	_	_
approximation	_	_
.	_	_

#175
In	_	_
it	_	_
,	_	_
the	_	_
push	_	_
relabel	_	_
loop	_	_
cuts	_	_
each	_	_
block	_	_
separately	_	_
,	_	_
while	_	_
the	_	_
wave	_	_
front	_	_
fetch	_	_
loop	_	_
deals	_	_
with	_	_
the	_	_
thin	_	_
skin	_	_
3D	_	_
area	_	_
as	_	_
same	_	_
as	_	_
in	_	_
level	_	_
1	_	_
.	_	_

#176
This	_	_
approximation	_	_
dramatically	_	_
reduces	_	_
the	_	_
processing	_	_
time	_	_
.	_	_

#177
It	_	_
takes	_	_
only	_	_
5ms	_	_
at	_	_
GTX1080	_	_
GPU	_	_
,	_	_
19ms	_	_
at	_	_
GTX660	_	_
GPU	_	_
(	_	_
Table	_	_
2	_	_
)	_	_
.	_	_

#178
Corresponding	_	_
the	_	_
result	_	_
disparity	_	_
image	_	_
is	_	_
Figure	_	_
10	_	_
.	_	_

#179
The	_	_
wave	_	_
front	_	_
fetch	_	_
algorithm	_	_
is	_	_
very	_	_
strong	_	_
in	_	_
the	_	_
early	_	_
stage	_	_
where	_	_
a	_	_
lots	_	_
of	_	_
overflows	_	_
exist	_	_
in	_	_
the	_	_
graph	_	_
,	_	_
but	_	_
very	_	_
poor	_	_
for	_	_
overflows	_	_
to	_	_
run	_	_
out	_	_
.	_	_

#180
Therefore	_	_
this	_	_
combination	_	_
leads	_	_
to	_	_
a	_	_
good	_	_
result	_	_
.	_	_

#181
right	_	_
cameraleft	_	_
camera	_	_
continuous	_	_
surface	_	_
rejected	_	_
area	_	_
real	_	_
surface	_	_
we	_	_
can	_	_
not	_	_
know	_	_
whether	_	_
real	_	_
surface	_	_
or	_	_
not	_	_
Figure	_	_
5	_	_
.	_	_

#182
We	_	_
seek	_	_
continuous	_	_
surface	_	_
.	_	_

#183
0	_	_
50000	_	_
100000	_	_
150000	_	_
200000	_	_
250000	_	_
300000	_	_
0	_	_
10	_	_
20	_	_
30	_	_
40	_	_
50	_	_
60	_	_
70	_	_
80	_	_
90	_	_
100	_	_
e	_	_
r	_	_
r	_	_
o	_	_
r	_	_
penalty	_	_
inhibit=1023	_	_
inhibit=0	_	_
Figure	_	_
6	_	_
.	_	_

#184
Relation	_	_
between	_	_
the	_	_
penalty	_	_
constant	_	_
and	_	_
the	_	_
error	_	_
(	_	_
Equation	_	_
2	_	_
)	_	_
at	_	_
the	_	_
inhibit	_	_
constant	_	_
equals	_	_
0	_	_
and	_	_
1023	_	_
.	_	_

#185
Method	_	_
error	_	_
%	_	_
corei7	_	_
gtx1080	_	_
gtx660	_	_
BK	_	_
11578	_	_
92	_	_
3823ms	_	_
—	_	_
—	_	_
l=1	_	_
b=1	_	_
11578	_	_
92	_	_
—	_	_
122ms	_	_
472ms	_	_
l=1	_	_
b=2	_	_
14624	_	_
91	_	_
—	_	_
14ms	_	_
83ms	_	_
l=1	_	_
b=3	_	_
20657	_	_
88	_	_
—	_	_
14ms	_	_
86ms	_	_
l=2	_	_
b=3	_	_
21294	_	_
88	_	_
—	_	_
5ms	_	_
19ms	_	_
Table	_	_
2	_	_
.	_	_

#186
Comparison	_	_
of	_	_
the	_	_
errors	_	_
(	_	_
Equation	_	_
2	_	_
)	_	_
and	_	_
execution	_	_
times	_	_
on	_	_
Tsukuba	_	_
.	_	_

#187
b=1	_	_
means	_	_
exact	_	_
minimization	_	_
,	_	_
l=2	_	_
indicates	_	_
level	_	_
2	_	_
approximation	_	_
.	_	_

#188
%	_	_
indicates	_	_
the	_	_
sites	_	_
percentage	_	_
of	_	_
corresponding	_	_
to	_	_
ground	_	_
truth	_	_
.	_	_

#189
Figure	_	_
7.	_	_
block	_	_
size=1	_	_
,	_	_
exact	_	_
minimization	_	_
5	_	_
.	_	_

#190
Conclusion	_	_
The	_	_
new	_	_
sites	_	_
labeling	_	_
formulation	_	_
for	_	_
stereo	_	_
has	_	_
been	_	_
presented	_	_
.	_	_

#191
We	_	_
treat	_	_
left	_	_
and	_	_
right	_	_
image	_	_
symmetrically	_	_
and	_	_
introduce	_	_
a	_	_
novel	_	_
concept	_	_
of	_	_
gaze	_	_
lines	_	_
,	_	_
which	_	_
are	_	_
auxiliary	_	_
lines	_	_
defined	_	_
on	_	_
the	_	_
cross	_	_
points	_	_
of	_	_
rays	_	_
corresponding	_	_
to	_	_
left	_	_
and	_	_
right	_	_
image	_	_
pixels	_	_
.	_	_

#192
In	_	_
our	_	_
formulations	_	_
,	_	_
sites	_	_
are	_	_
gaze	_	_
lines	_	_
and	_	_
labels	_	_
are	_	_
depth	_	_
numbers	_	_
.	_	_

#193
For	_	_
this	_	_
symmetrical	_	_
formulation	_	_
,	_	_
visibility	_	_
reasoning	_	_
is	_	_
naturally	_	_
included	_	_
in	_	_
the	_	_
energy	_	_
function	_	_
,	_	_
and	_	_
a	_	_
small	_	_
smoothness	_	_
term	_	_
does	_	_
not	_	_
damage	_	_
the	_	_
3D	_	_
results	_	_
much	_	_
.	_	_

#194
This	_	_
makes	_	_
the	_	_
minimization	_	_
step	_	_
so	_	_
simple	_	_
that	_	_
we	_	_
could	capability-feasibility	_
develop	_	_
an	_	_
approximation	_	_
method	_	_
for	_	_
graph	_	_
cut	_	_
itself	_	_
which	_	_
dramatically	_	_
reduces	_	_
the	_	_
processing	_	_
time	_	_
.	_	_

#195
And	_	_
now	_	_
we	_	_
are	_	_
noticed	_	_
that	_	_
this	_	_
symmetrical	_	_
minimization	_	_
could	_	_
perform	_	_
stereo	_	_
rectification	_	_
for	_	_
the	_	_
two	_	_
cameras	_	_
without	_	_
any	_	_
calibration	_	_
objects	_	_
like	_	_
chess	_	_
boards	_	_
[	_	_
19	_	_
]	_	_
.	_	_