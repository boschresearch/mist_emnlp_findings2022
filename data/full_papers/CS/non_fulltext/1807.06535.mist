#0
A	_	_
framework	_	_
for	_	_
remote	_	_
sensing	_	_
images	_	_
processing	_	_
using	_	_
deep	_	_
learning	_	_
techniques	_	_
Rémi	_	_
Cresson∗	_	_
Deep	_	_
learning	_	_
techniques	_	_
are	_	_
becoming	_	_
increasingly	_	_
important	_	_
to	_	_
solve	_	_
a	_	_
number	_	_
of	_	_
image	_	_
processing	_	_
tasks	_	_
.	_	_

#1
Among	_	_
common	_	_
algorithms	_	_
,	_	_
Convolutional	_	_
Neural	_	_
Networks	_	_
and	_	_
Recurrent	_	_
Neural	_	_
Networks	_	_
based	_	_
systems	_	_
achieve	_	_
state	_	_
of	_	_
the	_	_
art	_	_
results	_	_
on	_	_
satellite	_	_
and	_	_
aerial	_	_
imagery	_	_
in	_	_
many	_	_
applications	_	_
.	_	_

#2
While	_	_
these	_	_
approaches	_	_
are	_	_
subject	_	_
to	_	_
scientific	_	_
interest	_	_
,	_	_
there	_	_
is	_	_
currently	_	_
no	_	_
operational	_	_
and	_	_
generic	_	_
implementation	_	_
available	_	_
at	_	_
user-level	_	_
for	_	_
the	_	_
remote	_	_
sensing	_	_
community	_	_
.	_	_

#3
In	_	_
this	_	_
paper	_	_
,	_	_
we	_	_
presents	_	_
a	_	_
framework	_	_
enabling	_	_
the	_	_
use	_	_
of	_	_
deep	_	_
learning	_	_
techniques	_	_
with	_	_
remote	_	_
sensing	_	_
images	_	_
and	_	_
geospatial	_	_
data	_	_
.	_	_

#4
Our	_	_
solution	_	_
takes	_	_
roots	_	_
in	_	_
two	_	_
extensively	_	_
used	_	_
open-source	_	_
libraries	_	_
,	_	_
the	_	_
remote	_	_
sensing	_	_
image	_	_
processing	_	_
library	_	_
Orfeo	_	_
ToolBox	_	_
,	_	_
and	_	_
the	_	_
high	_	_
performance	_	_
numerical	_	_
computation	_	_
library	_	_
TensorFlow	_	_
.	_	_

#5
It	_	_
can	_	_
apply	_	_
deep	_	_
nets	_	_
without	_	_
restriction	_	_
on	_	_
images	_	_
size	_	_
and	_	_
is	_	_
computationally	_	_
efficient	_	_
,	_	_
regardless	_	_
hardware	_	_
configuration	_	_
.	_	_

#6
I	_	_
.	_	_

#7
INTRODUCTION	_	_
The	_	_
volume	_	_
of	_	_
earth	_	_
observation	_	_
data	_	_
never	_	_
stopped	_	_
to	_	_
increase	_	_
in	_	_
recent	_	_
years	_	_
.	_	_

#8
In	_	_
one	_	_
hand	_	_
,	_	_
the	_	_
use	_	_
of	_	_
very	_	_
high	_	_
spatial	_	_
resolution	_	_
satellites	_	_
(	_	_
VHRS	_	_
)	_	_
images	_	_
is	_	_
booming	_	_
,	_	_
and	_	_
sensors	_	_
are	_	_
each	_	_
generation	_	_
sharper	_	_
[	_	_
1	_	_
]	_	_
.	_	_

#9
There	_	_
is	_	_
also	_	_
more	_	_
and	_	_
more	_	_
sensors	_	_
with	_	_
close	_	_
temporal	_	_
acquisition	_	_
,	_	_
such	_	_
as	_	_
the	_	_
Sentinel	_	_
constellation	_	_
.	_	_

#10
In	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
community-based	_	_
geographic	_	_
information	_	_
gathering	_	_
systems	_	_
are	_	_
expanding	_	_
each	_	_
years	_	_
in-situ	_	_
geospatial	_	_
data	_	_
bases	_	_
like	_	_
OpenStreetMap	_	_
[	_	_
2	_	_
]	_	_
.	_	_

#11
Deep	_	_
learning	_	_
(	_	_
DL	_	_
)	_	_
is	_	_
a	_	_
growing	_	_
trend	_	_
in	_	_
big	_	_
data	_	_
analysis	_	_
,	_	_
and	_	_
had	_	_
a	_	_
breakthrough	_	_
impact	_	_
in	_	_
the	_	_
last	_	_
few	_	_
years	_	_
on	_	_
such	_	_
diverse	_	_
domains	_	_
like	_	_
Computer	_	_
Vision	_	_
,	_	_
Speech	_	_
Recognition	_	_
,	_	_
Image	_	_
Processing	_	_
,	_	_
and	_	_
Remote	_	_
Sensing	_	_
(	_	_
RS	_	_
)	_	_
.	_	_

#12
Convolutional	_	_
Neural	_	_
Networks	_	_
(	_	_
CNN	_	_
)	_	_
are	_	_
designed	_	_
to	_	_
extract	_	_
features	_	_
in	_	_
images	_	_
,	_	_
enabling	_	_
image	_	_
recognition	_	_
,	_	_
object	_	_
detection	_	_
,	_	_
semantic	_	_
segmentation	_	_
.	_	_

#13
Recurrent	_	_
Neural	_	_
Networks	_	_
(	_	_
RNNs	_	_
)	_	_
are	_	_
suited	_	_
for	_	_
sequential	_	_
data	_	_
analysis	_	_
,	_	_
such	_	_
as	_	_
speech	_	_
recognition	_	_
and	_	_
action	_	_
recognition	_	_
tasks	_	_
.	_	_

#14
In	_	_
recent	_	_
years	_	_
,	_	_
a	_	_
number	_	_
of	_	_
studies	_	_
have	_	_
shown	_	_
that	_	_
RS	_	_
benefits	_	_
strongly	_	_
from	_	_
these	_	_
new	_	_
approaches	_	_
,	_	_
thanks	_	_
to	_	_
the	_	_
availability	_	_
of	_	_
data	_	_
and	_	_
computing	_	_
resources	_	_
[	_	_
3	_	_
]	_	_
.	_	_

#15
Many	_	_
typical	_	_
RS	_	_
problems	_	_
have	_	_
been	_	_
successfully	_	_
addressed	_	_
with	_	_
these	_	_
architectures	_	_
:	_	_
synthetic	_	_
aperture	_	_
radar	_	_
interpretation	_	_
with	_	_
target	_	_
recognition	_	_
[	_	_
4	_	_
]	_	_
,	_	_
classification	_	_
from	_	_
time	_	_
series	_	_
[	_	_
5	_	_
]	_	_
,	_	_
and	_	_
parameter	_	_
inversion	_	_
[	_	_
6	_	_
]	_	_
,	_	_
hyperspectral	_	_
image	_	_
analysis	_	_
with	_	_
classification	_	_
[	_	_
7	_	_
]	_	_
,	_	_
anomaly	_	_
detection	_	_
[	_	_
8	_	_
]	_	_
,	_	_
VHRS	_	_
images	_	_
interpretation	_	_
with	_	_
scene	_	_
classification	_	_
[	_	_
9	_	_
,	_	_
10	_	_
]	_	_
,	_	_
object	_	_
detection	_	_
[	_	_
11	_	_
]	_	_
,	_	_
image	_	_
retrieval	_	_
[	_	_
12	_	_
]	_	_
,	_	_
classification	_	_
from	_	_
time-series	_	_
[	_	_
13	_	_
]	_	_
.	_	_

#16
DL	_	_
has	_	_
addressed	_	_
other	_	_
issues	_	_
in	_	_
RS	_	_
,	_	_
like	_	_
data	_	_
fusion	_	_
(	_	_
see	_	_
[	_	_
14	_	_
]	_	_
for	_	_
a	_	_
review	_	_
)	_	_
e.g.	_	_
multimodal	_	_
classification	_	_
[	_	_
15	_	_
]	_	_
,	_	_
pansharpening	_	_
[	_	_
16	_	_
]	_	_
,	_	_
and	_	_
3D	_	_
reconstruction	_	_
.	_	_

#17
DL	_	_
allows	_	_
researchers	_	_
in	_	_
RS	_	_
to	_	_
move	_	_
beyond	_	_
usual	_	_
approaches	_	_
and	_	_
tackle	_	_
a	_	_
number	_	_
of	_	_
problems	_	_
with	_	_
solid	_	_
results	_	_
.	_	_

#18
However	_	_
,	_	_
there	_	_
is	_	_
still	_	_
challenges	_	_
remaining	_	_
ahead	_	_
in	_	_
operational	_	_
context	_	_
.	_	_

#19
First	_	_
,	_	_
one	_	_
crucial	_	_
point	_	_
is	_	_
software	_	_
implementation	_	_
.	_	_

#20
Entering	_	_
into	_	_
∗	_	_
R.	_	_
Cresson	_	_
is	_	_
with	_	_
the	_	_
IRSTEA	_	_
,	_	_
UMR	_	_
TETIS	_	_
,	_	_
BP	_	_
5095	_	_
,	_	_
Montpellier	_	_
,	_	_
France	_	_
.	_	_

#21
remi-dot-cresson-at-irstea.fr	_	_
DL	_	_
requires	_	_
to	_	_
familiarize	_	_
with	_	_
a	_	_
framework	_	_
.	_	_

#22
Several	_	_
popular	_	_
open-source	_	_
frameworks	_	_
exist	_	_
,	_	_
such	_	_
as	_	_
Caffe	_	_
,	_	_
Torch	_	_
,	_	_
Theano	_	_
,	_	_
and	_	_
TensorFlow	_	_
,	_	_
but	_	_
implementing	_	_
new	_	_
methods	_	_
requires	_	_
an	_	_
extensive	_	_
programming	_	_
background	_	_
and	_	_
DL	_	_
knowledge	_	_
,	_	_
holding	_	_
back	_	_
DL	_	_
democratization	_	_
in	_	_
RS	_	_
community	_	_
.	_	_

#23
Conversely	_	_
,	_	_
many	_	_
studies	_	_
rely	_	_
exclusively	_	_
on	_	_
pre-processed	_	_
,	_	_
densely	_	_
annotated	_	_
public	_	_
datasets	_	_
like	_	_
UC	_	_
Merced	_	_
[	_	_
17	_	_
]	_	_
or	_	_
Postdam	_	_
[	_	_
18	_	_
]	_	_
because	_	_
data	_	_
extraction	_	_
requires	_	_
knowledge	_	_
of	_	_
geospatial	_	_
standards	_	_
and	_	_
tools	_	_
like	_	_
Geographic	_	_
Information	_	_
Systems	_	_
and	_	_
RS	_	_
image	_	_
processing	_	_
software	_	_
.	_	_

#24
Secondly	_	_
,	_	_
the	_	_
need	_	_
of	_	_
tools	_	_
that	_	_
scale	_	_
enough	_	_
to	_	_
the	_	_
huge	_	_
size	_	_
of	_	_
real-world	_	_
RS	_	_
images	_	_
and	_	_
datasets	_	_
,	_	_
raises	_	_
as	_	_
a	_	_
major	_	_
computing	_	_
challenge	_	_
.	_	_

#25
While	_	_
RS	_	_
images	_	_
processing	_	_
software	_	_
have	_	_
internal	_	_
mechanisms	_	_
to	_	_
deal	_	_
with	_	_
the	_	_
large	_	_
stacks	_	_
of	_	_
images	_	_
,	_	_
this	_	_
problematic	_	_
is	_	_
out	_	_
of	_	_
DL	_	_
frameworks	_	_
scope	_	_
.	_	_

#26
Another	_	_
point	_	_
is	_	_
that	_	_
algorithms	_	_
presented	_	_
in	_	_
the	_	_
literature	_	_
are	_	_
often	_	_
serving	_	_
one	_	_
unique	_	_
purpose	_	_
.	_	_

#27
Therefore	_	_
,	_	_
coding	_	_
is	_	_
not	_	_
generic	_	_
and	_	_
each	_	_
new	_	_
algorithm	_	_
implementation	_	_
require	_	_
new	_	_
effort	_	_
and	_	_
expertise	_	_
.	_	_

#28
Finally	_	_
,	_	_
recent	_	_
studies	_	_
have	_	_
pointed	_	_
that	_	_
using	_	_
the	_	_
features	_	_
computed	_	_
with	_	_
deep	_	_
nets	_	_
in	_	_
machine	_	_
learning	_	_
algorithms	_	_
like	_	_
Support	_	_
Vector	_	_
Machines	_	_
(	_	_
SVM	_	_
)	_	_
or	_	_
Random	_	_
Forests	_	_
,	_	_
offers	_	_
state	_	_
of	_	_
the	_	_
art	_	_
results	_	_
[	_	_
19–21	_	_
]	_	_
.	_	_

#29
However	_	_
,	_	_
even	_	_
if	_	_
RS	_	_
image	_	_
processing	_	_
software	_	_
implement	_	_
generally	_	_
a	_	_
machine	_	_
learning	_	_
framework	_	_
,	_	_
there	_	_
is	_	_
no	_	_
existing	_	_
one	_	_
enabling	_	_
the	_	_
combination	_	_
of	_	_
DL	_	_
algorithms	_	_
with	_	_
already	_	_
implemented	_	_
well-known	_	_
machine	_	_
learning	_	_
algorithms	_	_
.	_	_

#30
Regarding	_	_
these	_	_
matters	_	_
,	_	_
we	_	_
propose	_	_
a	_	_
generic	_	_
framework	_	_
to	_	_
enable	_	_
DL	_	_
for	_	_
RS	_	_
images	_	_
,	_	_
which	_	_
(	_	_
i	_	_
)	_	_
is	_	_
open-source	_	_
and	_	_
cross-platform	_	_
,	_	_
(	_	_
ii	_	_
)	_	_
enables	_	_
users	_	_
without	_	_
programming	_	_
knowledge	_	_
to	_	_
use	_	_
deeps	_	_
nets	_	_
on	_	_
RS	_	_
images	_	_
,	_	_
(	_	_
iii	_	_
)	_	_
is	_	_
integrated	_	_
in	_	_
an	_	_
existing	_	_
rich	_	_
machine	_	_
learning	_	_
framework	_	_
for	_	_
RS	_	_
images	_	_
,	_	_
(	_	_
iv	_	_
)	_	_
is	_	_
computationally	_	_
efficient	_	_
and	_	_
allows	_	_
the	_	_
processing	_	_
of	_	_
very	_	_
large	_	_
RS	_	_
images	_	_
.	_	_

#31
Our	_	_
approach	_	_
is	_	_
based	_	_
on	_	_
the	_	_
RS	_	_
image	_	_
processing	_	_
library	_	_
,	_	_
Orfeo	_	_
Toolbox	_	_
(	_	_
OTB	_	_
)	_	_
[	_	_
22	_	_
]	_	_
and	_	_
rely	_	_
on	_	_
the	_	_
high	_	_
performance	_	_
numerical	_	_
computation	_	_
library	_	_
for	_	_
training	_	_
and	_	_
inference	_	_
on	_	_
deep	_	_
neural	_	_
networks	_	_
,	_	_
TensorFlow	_	_
(	_	_
TF	_	_
)	_	_
[	_	_
23	_	_
]	_	_
.	_	_

#32
The	_	_
existing	_	_
machine	_	_
learning	_	_
framework	_	_
of	_	_
OTB	_	_
includes	_	_
tools	_	_
for	_	_
RS	_	_
data	_	_
selection	_	_
,	_	_
sampling	_	_
,	_	_
training	_	_
,	_	_
classification	_	_
,	_	_
regression	_	_
,	_	_
with	_	_
many	_	_
strategies	_	_
and	_	_
parameters	_	_
fine	_	_
tuning	_	_
.	_	_

#33
We	_	_
extend	_	_
this	_	_
framework	_	_
using	_	_
TF	_	_
to	_	_
enable	_	_
the	_	_
processing	_	_
of	_	_
RS	_	_
images	_	_
with	_	_
deep	_	_
nets	_	_
.	_	_

#34
We	_	_
first	_	_
give	_	_
in	_	_
ar	_	_
X	_	_
iv	_	_
:1	_	_
7	_	_
.	_	_

#35
5v	_	_
2	_	_
[	_	_
cs	_	_
.C	_	_
V	_	_
]	_	_
5	_	_
S	_	_
ep	_	_
2	_	_
Section	_	_
II	_	_
a	_	_
detailed	_	_
description	_	_
of	_	_
our	_	_
method	_	_
.	_	_

#36
We	_	_
then	_	_
analyze	_	_
the	_	_
scalability	_	_
of	_	_
our	_	_
approach	_	_
with	_	_
state	_	_
of	_	_
the	_	_
art	_	_
deep	_	_
nets	_	_
and	_	_
Spot-7	_	_
and	_	_
Sentinel-2	_	_
images	_	_
(	_	_
Section	_	_
III	_	_
)	_	_
.	_	_

#37
We	_	_
finally	_	_
discuss	_	_
the	_	_
main	_	_
advantages	_	_
and	_	_
limits	_	_
of	_	_
our	_	_
approach	_	_
in	_	_
Section	_	_
IV	_	_
.	_	_

#38
II	_	_
.	_	_

#39
METHOD	_	_
A.	_	_
Overview	_	_
The	_	_
Orfeo	_	_
ToolBox	_	_
(	_	_
OTB	_	_
)	_	_
is	_	_
a	_	_
library	_	_
for	_	_
RS	_	_
image	_	_
processing	_	_
,	_	_
built	_	_
on	_	_
top	_	_
of	_	_
an	_	_
application	_	_
development	_	_
framework	_	_
widely	_	_
used	_	_
in	_	_
medical	_	_
image	_	_
processing	_	_
,	_	_
the	_	_
Insight	_	_
Toolkit	_	_
(	_	_
ITK	_	_
)	_	_
[	_	_
24	_	_
]	_	_
.	_	_

#40
The	_	_
machine	_	_
learning	_	_
framework	_	_
of	_	_
OTB	_	_
is	_	_
able	_	_
to	_	_
process	_	_
large	_	_
datasets	_	_
at	_	_
continental	_	_
scale	_	_
for	_	_
land	_	_
mapping	_	_
[	_	_
25	_	_
]	_	_
and	_	_
benefits	_	_
from	_	_
High	_	_
Performance	_	_
Computing	_	_
(	_	_
HPC	_	_
)	_	_
architectures	_	_
like	_	_
clusters	_	_
[	_	_
26	_	_
]	_	_
.	_	_

#41
TensorFlow	_	_
(	_	_
TF	_	_
)	_	_
is	_	_
a	_	_
library	_	_
for	_	_
dataflow	_	_
programming	_	_
.	_	_

#42
It	_	_
is	_	_
a	_	_
symbolic	_	_
math	_	_
library	_	_
,	_	_
and	_	_
is	_	_
intensively	_	_
used	_	_
for	_	_
machine	_	_
learning	_	_
applications	_	_
such	_	_
as	_	_
deep	_	_
nets	_	_
.	_	_

#43
It	_	_
can	_	_
also	_	_
operate	_	_
at	_	_
large	_	_
scale	_	_
in	_	_
HPC	_	_
architectures	_	_
like	_	_
GPU	_	_
.	_	_

#44
We	_	_
aim	_	_
to	_	_
extend	_	_
the	_	_
existing	_	_
rich	_	_
machine	_	_
learning	_	_
framework	_	_
of	_	_
OTB	_	_
with	_	_
TF	_	_
.	_	_

#45
Implementation	_	_
of	_	_
state	_	_
of	_	_
the	_	_
art	_	_
deep	_	_
nets	_	_
should	_	_
be	_	_
enabled	_	_
with	_	_
the	_	_
minimum	_	_
effort	_	_
,	_	_
and	_	_
the	_	_
opportunity	_	_
to	_	_
apply	_	_
them	_	_
on	_	_
RS	_	_
images	_	_
must	deontic	_
be	_	_
granted	_	_
to	_	_
non-developers	_	_
,	_	_
namely	_	_
users	_	_
.	_	_

#46
The	_	_
existing	_	_
user-oriented	_	_
machine	_	_
learning	_	_
framework	_	_
of	_	_
OTB	_	_
must	deontic	_
be	_	_
preserved	_	_
.	_	_

#47
We	_	_
also	_	_
sought	_	_
the	_	_
implementation	_	_
of	_	_
a	_	_
component	_	_
which	_	_
can	_	_
be	_	_
used	_	_
in	_	_
a	_	_
transparent	_	_
way	_	_
inside	_	_
any	_	_
OTB	_	_
pipeline	_	_
,	_	_
to	_	_
enable	_	_
the	_	_
combination	_	_
of	_	_
already	_	_
implemented	_	_
approaches	_	_
with	_	_
DL	_	_
.	_	_

#48
In	_	_
the	_	_
following	_	_
sections	_	_
,	_	_
we	_	_
provide	_	_
description	_	_
of	_	_
the	_	_
libraries	_	_
processing	_	_
frameworks	_	_
(	_	_
Sections	_	_
II	_	_
B	_	_
and	_	_
II	_	_
C	_	_
)	_	_
.	_	_

#49
Then	_	_
we	_	_
introduce	_	_
our	_	_
low-level	_	_
OTB	_	_
compliant	_	_
component	_	_
in	_	_
Section	_	_
II	_	_
D	_	_
and	_	_
our	_	_
new	_	_
user-oriented	_	_
OTB	_	_
applications	_	_
in	_	_
Section	_	_
II	_	_
E.	_	_
Finally	_	_
,	_	_
we	_	_
analyze	_	_
performances	_	_
of	_	_
our	_	_
approach	_	_
with	_	_
state	_	_
of	_	_
the	_	_
art	_	_
RS	_	_
deep	_	_
nets	_	_
in	_	_
Section	_	_
III	_	_
.	_	_

#50
B	_	_
.	_	_

#51
Libraries	_	_
paradigms	_	_
This	_	_
section	_	_
describes	_	_
the	_	_
processing	_	_
logic	_	_
of	_	_
OTB	_	_
and	_	_
TF	_	_
.	_	_

#52
1	_	_
.	_	_

#53
OTB	_	_
workflow	_	_
A	_	_
pipeline	_	_
refers	_	_
to	_	_
a	_	_
directed	_	_
graph	_	_
of	_	_
process	_	_
objects	_	_
,	_	_
that	_	_
can	_	_
be	_	_
either	_	_
sources	_	_
(	_	_
initiating	_	_
the	_	_
pipeline	_	_
)	_	_
,	_	_
filters	_	_
(	_	_
processing	_	_
the	_	_
data	_	_
)	_	_
or	_	_
mappers	_	_
(	_	_
typically	_	_
,	_	_
write	_	_
a	_	_
result	_	_
on	_	_
disk	_	_
)	_	_
.	_	_

#54
Sources	_	_
and	_	_
filters	_	_
can	_	_
generate	_	_
one	_	_
or	_	_
multiple	_	_
data	_	_
objects	_	_
(	_	_
e.g.	_	_
image	_	_
,	_	_
vector	_	_
)	_	_
.	_	_

#55
In	_	_
the	_	_
same	_	_
way	_	_
,	_	_
filters	_	_
and	_	_
mappers	_	_
consume	_	_
one	_	_
or	_	_
multiple	_	_
data	_	_
objects	_	_
.	_	_

#56
The	_	_
architecture	_	_
of	_	_
OTB	_	_
inherits	_	_
from	_	_
ITK	_	_
and	_	_
hides	_	_
the	_	_
complexity	_	_
of	_	_
internal	_	_
mechanisms	_	_
for	_	_
pipeline	_	_
execution	_	_
,	_	_
which	_	_
involve	_	_
several	_	_
steps	_	_
.	_	_

#57
Detailed	_	_
description	_	_
of	_	_
the	_	_
pipeline	_	_
mechanism	_	_
can	_	_
be	_	_
found	_	_
in	_	_
[	_	_
27	_	_
]	_	_
including	_	_
figures	_	_
and	_	_
sequence	_	_
diagram	_	_
.	_	_

#58
The	_	_
execution	_	_
of	_	_
a	_	_
pipeline	_	_
starts	_	_
from	_	_
a	_	_
mapper	_	_
,	_	_
triggering	_	_
its	_	_
upstream	_	_
filter	_	_
(	_	_
s	_	_
)	_	_
.	_	_

#59
When	_	_
a	_	_
filter	_	_
is	_	_
triggered	_	_
,	_	_
information	_	_
about	_	_
mandatory	_	_
input	_	_
data	_	_
(	_	_
i.e.	_	_
information	_	_
about	_	_
output	_	_
data	_	_
of	_	_
upstream	_	_
process	_	_
object	_	_
(	_	_
s	_	_
)	_	_
)	_	_
is	_	_
also	_	_
requested	_	_
upstream	_	_
.	_	_

#60
In	_	_
this	_	_
way	_	_
,	_	_
it	_	_
is	_	_
propagated	_	_
back	_	_
through	_	_
the	_	_
pipeline	_	_
,	_	_
from	_	_
mappers	_	_
to	_	_
sources	_	_
via	_	_
filters	_	_
.	_	_

#61
Once	_	_
this	_	_
request	_	_
reach	_	_
sources	_	_
,	_	_
data	_	_
objects	_	_
information	_	_
are	_	_
generated	_	_
(	_	_
e.g.	_	_
image	_	_
size	_	_
,	_	_
pixel	_	_
spacing	_	_
)	_	_
then	_	_
propagated	_	_
downstream	_	_
to	_	_
mappers	_	_
.	_	_

#62
It	_	_
should	_	_
be	_	_
noted	_	_
that	_	_
filters	_	_
can	_	_
potentially	_	_
modify	_	_
these	_	_
information	_	_
,	_	_
according	_	_
to	_	_
the	_	_
process	_	_
they	_	_
implement	_	_
(	_	_
e.g.	_	_
changing	_	_
image	_	_
size	_	_
)	_	_
which	_	_
is	_	_
the	_	_
case	_	_
with	_	_
image	_	_
re-sampling	_	_
for	_	_
instance	_	_
.	_	_

#63
Finally	_	_
,	_	_
they	_	_
reach	_	_
the	_	_
mapper	_	_
,	_	_
initiating	_	_
the	_	_
data	_	_
processing	_	_
.	_	_

#64
Information	_	_
regarding	_	_
the	_	_
size	_	_
of	_	_
the	_	_
image	_	_
that	_	_
will	_	_
be	_	_
produced	_	_
,	_	_
is	_	_
then	_	_
used	_	_
by	_	_
the	_	_
mapper	_	_
to	_	_
choose	_	_
a	_	_
splitting	_	_
strategy	_	_
.	_	_

#65
The	_	_
default	_	_
splitting	_	_
scheme	_	_
is	_	_
based	_	_
on	_	_
the	_	_
system	_	_
memory	_	_
specification	_	_
.	_	_

#66
Other	_	_
strategies	_	_
can	_	_
be	_	_
chosen	_	_
,	_	_
e.g.	_	_
striped	_	_
or	_	_
tiled	_	_
regions	_	_
with	_	_
fixed	_	_
dimensions	_	_
.	_	_

#67
Then	_	_
,	_	_
the	_	_
mapper	_	_
requests	_	_
its	_	_
input	_	_
image	_	_
to	_	_
upstream	_	_
filter	_	_
(	_	_
s	_	_
)	_	_
sequentially	_	_
,	_	_
region	_	_
after	_	_
region	_	_
.	_	_

#68
The	_	_
data	_	_
request	_	_
and	_	_
generation	_	_
is	_	_
handled	_	_
through	_	_
the	_	_
pipeline	_	_
in	_	_
the	_	_
same	_	_
way	_	_
as	_	_
for	_	_
the	_	_
information	_	_
:	_	_
once	_	_
the	_	_
request	_	_
reaches	_	_
the	_	_
sources	_	_
,	_	_
initiating	_	_
the	_	_
pipeline	_	_
,	_	_
the	_	_
requested	_	_
region	_	_
is	_	_
produced	_	_
,	_	_
then	_	_
processed	_	_
through	_	_
filters	_	_
,	_	_
to	_	_
finally	_	_
end	_	_
in	_	_
the	_	_
mapper	_	_
.	_	_

#69
The	_	_
pipeline	_	_
execution	_	_
continues	_	_
with	_	_
the	_	_
next	_	_
image	_	_
region	_	_
until	_	_
the	_	_
entire	_	_
output	_	_
is	_	_
generated	_	_
.	_	_

#70
This	_	_
mechanism	_	_
,	_	_
named	_	_
streaming	_	_
,	_	_
enables	_	_
the	_	_
processing	_	_
of	_	_
very	_	_
large	_	_
images	_	_
regardless	_	_
the	_	_
memory	_	_
consumption	_	_
of	_	_
the	_	_
process	_	_
objects	_	_
composing	_	_
the	_	_
pipeline	_	_
.	_	_

#71
2	_	_
.	_	_

#72
TF	_	_
workflow	_	_
TF	_	_
uses	_	_
symbolic	_	_
programming	_	_
,	_	_
which	_	_
distinguish	_	_
definition	_	_
of	_	_
computations	_	_
from	_	_
their	_	_
execution	_	_
.	_	_

#73
In	_	_
TF	_	_
,	_	_
tensors	_	_
are	_	_
abstraction	_	_
objects	_	_
of	_	_
the	_	_
operations	_	_
and	_	_
objects	_	_
in	_	_
the	_	_
memory	_	_
,	_	_
simplifying	_	_
manipulation	_	_
regardless	_	_
the	_	_
computing	_	_
environment	_	_
(	_	_
e.g.	_	_
CPU	_	_
or	_	_
GPU	_	_
)	_	_
.	_	_

#74
A	_	_
TF	_	_
model	_	_
consists	_	_
in	_	_
operations	_	_
arranged	_	_
into	_	_
a	_	_
graph	_	_
of	_	_
nodes	_	_
.	_	_

#75
Each	_	_
node	_	_
can	_	_
viewed	_	_
as	_	_
an	_	_
operation	_	_
taking	_	_
zero	_	_
or	_	_
more	_	_
tensors	_	_
as	_	_
inputs	_	_
,	_	_
and	_	_
producing	_	_
a	_	_
tensor	_	_
.	_	_

#76
This	_	_
data	_	_
flow	_	_
graph	_	_
defines	_	_
the	_	_
operations	_	_
(	_	_
e.g.	_	_
linear	_	_
algebra	_	_
operators	_	_
)	_	_
,	_	_
but	_	_
the	_	_
computations	_	_
are	_	_
performed	_	_
within	_	_
the	_	_
so-called	_	_
session	_	_
.	_	_

#77
A	_	_
high-level	_	_
API	_	_
enables	_	_
the	_	_
construction	_	_
of	_	_
TF	_	_
graphs	_	_
,	_	_
and	_	_
the	_	_
session	_	_
runs	_	_
the	_	_
graph	_	_
in	_	_
delegating	_	_
calculations	_	_
to	_	_
low	_	_
level	_	_
,	_	_
highly-optimized	_	_
routines	_	_
.	_	_

#78
Among	_	_
tensors	_	_
,	_	_
we	_	_
can	_	_
distinguish	_	_
concepts	_	_
such	_	_
as	_	_
Placeholders	_	_
,	_	_
Constants	_	_
and	_	_
Variables	_	_
.	_	_

#79
A	_	_
Placeholder	_	_
is	_	_
a	_	_
symbol	_	_
hosting	_	_
input	_	_
data	_	_
,	_	_
e.g.	_	_
a	_	_
set	_	_
of	_	_
images	_	_
.	_	_

#80
As	_	_
its	_	_
name	_	_
indicates	_	_
,	_	_
Constants	_	_
are	_	_
tensors	_	_
with	_	_
constant	_	_
values	_	_
,	_	_
and	_	_
Variables	_	_
hold	_	_
non	_	_
persistent	_	_
values	_	_
,	_	_
e.g.	_	_
parameters	_	_
to	_	_
estimate	_	_
during	_	_
training	_	_
.	_	_

#81
Variables	_	_
must	deontic	_
be	_	_
explicitly	_	_
initialized	_	_
,	_	_
and	_	_
can	_	_
be	_	_
saved	_	_
or	_	_
restored	_	_
during	_	_
a	_	_
session	_	_
along	_	_
with	_	_
the	_	_
graph	_	_
.	_	_

#82
A	_	_
number	_	_
of	_	_
tools	_	_
enable	_	_
design	_	_
of	_	_
TF	_	_
models	_	_
,	_	_
like	_	_
the	_	_
TF	_	_
Python	_	_
API	_	_
or	_	_
user-oriented	_	_
software	_	_
developed	_	_
by	_	_
the	_	_
TF	_	_
community	_	_
.	_	_

#83
C.	_	_
Flowing	_	_
the	_	_
pipeline	_	_

#84
In	_	_
this	_	_
section	_	_
,	_	_
we	_	_
present	_	_
prerequisites	_	_
for	_	_
the	_	_
integration	_	_
of	_	_
a	_	_
process	_	_
object	_	_
that	_	_
runs	_	_
TF	_	_
session	_	_
for	_	_
generic	_	_
deep	_	_
nets	_	_
,	_	_
in	_	_
a	_	_
OTB	_	_
pipeline	_	_
with	_	_
RS	_	_
images	_	_
as	_	_
data	_	_
objects	_	_
.	_	_

#85
In	_	_
the	_	_
pipeline	_	_
workflow	_	_
,	_	_
the	_	_
generation	_	_
of	_	_
images	_	_
information	_	_
and	_	_
the	_	_
requested	_	_
regions	_	_
computation	_	_
by	_	_
process	_	_
objects	_	_
,	_	_
are	_	_
crucial	_	_
steps	_	_
.	_	_

#86
We	_	_
denote	_	_
the	_	_
spacing	_	_
the	_	_
physical	_	_
size	_	_
of	_	_
a	_	_
single	_	_
RS	_	_
image	_	_
pixel	_	_
.	_	_

#87
The	_	_
generation	_	_
of	_	_
output	_	_
images	_	_
information	_	_
includes	_	_
origin	_	_
,	_	_
spacing	_	_
,	_	_
size	_	_
,	_	_
and	_	_
additional	_	_
RS	_	_
metadata	_	_
e.g.	_	_
projection	_	_
reference	_	_
.	_	_

#88
Process	_	_
objects	_	_
must	deontic	_
also	_	_
propagate	_	_
the	_	_
requested	_	_
regions	_	_
to	_	_
input	_	_
images	_	_
.	_	_

#89
Regarding	_	_
deep	_	_
nets	_	_
implementation	_	_
,	_	_
and	_	_
particularly	_	_
CNNs	_	_
,	_	_
this	_	_
process	_	_
must	deontic	_
be	_	_
carefully	_	_
handled	_	_
.	_	_

#90
CNNs	_	_
usually	_	_
involve	_	_
several	_	_
operations	_	_
,	_	_
mostly	_	_
including	_	_
a	_	_
succession	_	_
of	_	_
convolutions	_	_
,	_	_
pooling	_	_
,	_	_
and	_	_
non-linear	_	_
functions	_	_
.	_	_

#91
There	_	_
is	_	_
also	_	_
a	_	_
number	_	_
of	_	_
deriving	_	_
operators	_	_
e.g.	_	_
transposed	_	_
convolution	_	_
.	_	_

#92
Most	_	_
of	_	_
these	_	_
operators	_	_
modify	_	_
the	_	_
size	_	_
and	_	_
spacing	_	_
of	_	_
the	_	_
result	_	_
.	_	_

#93
For	_	_
example	_	_
,	_	_
convolution	_	_
can	_	_
change	_	_
the	_	_
output	_	_
image	_	_
size	_	_
,	_	_
depending	_	_
its	_	_
kernel	_	_
size	_	_
and	_	_
input	_	_
padding	_	_
.	_	_

#94
It	_	_
can	_	_
also	_	_
change	_	_
the	_	_
spacing	_	_
of	_	_
the	_	_
output	_	_
if	_	_
performed	_	_
with	_	_
strides	_	_
,	_	_
that	_	_
is	_	_
,	_	_
the	_	_
step	_	_
of	_	_
which	_	_
is	_	_
shifted	_	_
the	_	_
filter	_	_
at	_	_
each	_	_
computation	_	_
.	_	_

#95
Pooling	_	_
operators	_	_
are	_	_
also	_	_
a	_	_
common	_	_
kind	_	_
of	_	_
operator	_	_
that	_	_
modify	_	_
the	_	_
output	_	_
size	_	_
and	_	_
spacing	_	_
,	_	_
depending	_	_
of	_	_
the	_	_
stride	_	_
and	_	_
the	_	_
size	_	_
of	_	_
the	_	_
sliding	_	_
window	_	_
.	_	_

#96
We	_	_
should	_	_
note	_	_
that	_	_
a	_	_
number	_	_
of	_	_
other	_	_
operators	_	_
change	_	_
size	_	_
and	_	_
scale	_	_
the	_	_
spacing	_	_
of	_	_
the	_	_
output	_	_
.	_	_

#97
Considering	_	_
a	_	_
process	_	_
object	_	_
implementing	_	_
such	_	_
operations	_	_
,	_	_
it	_	_
must	deontic	_
propagate	_	_
requested	_	_
regions	_	_
of	_	_
images	_	_
to	_	_
its	_	_
inputs	_	_
.	_	_

#98
In	_	_
the	_	_
following	_	_
,	_	_
we	_	_
introduce	_	_
a	_	_
generic	_	_
description	_	_
of	_	_
size	_	_
and	_	_
spacing	_	_
modifications	_	_
that	_	_
a	_	_
deep	_	_
net	_	_
induces	_	_
in	_	_
processing	_	_
RS	_	_
images	_	_
.	_	_

#99
We	_	_
name	_	_
the	_	_
scaling	_	_
factor	_	_
of	_	_
a	_	_
particular	_	_
output	_	_
of	_	_
the	_	_
net	_	_
,	_	_
the	_	_
ratio	_	_
between	_	_
the	_	_
output	_	_
spacing	_	_
and	_	_
a	_	_
reference	_	_
spacing	_	_
(	_	_
typically	_	_
one	_	_
input	_	_
image	_	_
feeding	_	_
the	_	_
deep	_	_
net	_	_
)	_	_
.	_	_

#100
This	_	_
parameter	_	_
enables	_	_
the	_	_
description	_	_
of	_	_
any	_	_
change	_	_
of	_	_
physical	_	_
size	_	_
of	_	_
the	_	_
pixel	_	_
introduced	_	_
by	_	_
operators	_	_
such	_	_
as	_	_
pooling	_	_
or	_	_
convolution	_	_
involving	_	_
non-unitary	_	_
strides	_	_
.	_	_

#101
In	_	_
addition	_	_
,	_	_
each	_	_
input	_	_
has	_	_
its	_	_
own	_	_
receptive	_	_
field	_	_
,	_	_
the	_	_
input	_	_
space	_	_
that	_	_
a	_	_
particular	_	_
output	_	_
of	_	_
the	_	_
net	_	_
is	_	_
affected	_	_
by	_	_
.	_	_

#102
In	_	_
the	_	_
same	_	_
way	_	_
,	_	_
each	_	_
output	_	_
has	_	_
its	_	_
own	_	_
expression	_	_
field	_	_
,	_	_
the	_	_
output	_	_
space	_	_
resulting	_	_
from	_	_
the	_	_
receptive	_	_
field	_	_
.	_	_

#103
Images	_	_
regions	_	_
and	_	_
spacing	_	_
modifications	_	_
induced	_	_
by	_	_
a	_	_
TF	_	_
graph	_	_
are	_	_
thus	_	_
defined	_	_
with	_	_
the	_	_
receptive	_	_
field	_	_
of	_	_
inputs	_	_
,	_	_
and	_	_
the	_	_
scaling	_	_
factor	_	_
and	_	_
expression	_	_
field	_	_
of	_	_
outputs	_	_
.	_	_

#104
D.	_	_
Running	_	_
TF	_	_
session	_	_
in	_	_
process	_	_
object	_	_
We	_	_
introduce	_	_
a	_	_
new	_	_
OTB	_	_
process	_	_
object	_	_
which	_	_
internally	_	_
invokes	_	_
the	_	_
TF	_	_
engine	_	_
and	_	_
enforces	_	_
the	_	_
pipeline	_	_
execution	_	_
described	_	_
in	_	_
Section	_	_
II	_	_
C	_	_
and	_	_
hence	_	_
,	_	_
can	_	_
seamlessly	_	_
process	_	_
large	_	_
images	_	_
.	_	_

#105
It	_	_
takes	_	_
one	_	_
or	_	_
multiple	_	_
input	_	_
images	_	_
,	_	_
and	_	_
produces	_	_
zero	_	_
or	_	_
multiple	_	_
output	_	_
images	_	_
.	_	_

#106
The	_	_
input	_	_
placeholders	_	_
of	_	_
the	_	_
TF	_	_
model	_	_
are	_	_
fed	_	_
with	_	_
the	_	_
input	_	_
images	_	_
of	_	_
the	_	_
process	_	_
object	_	_
.	_	_

#107
After	_	_
the	_	_
session	_	_
run	_	_
,	_	_
computed	_	_
tensors	_	_
are	_	_
assigned	_	_
to	_	_
the	_	_
process	_	_
object	_	_
outputs	_	_
.	_	_

#108
Placeholders	_	_
corresponding	_	_
to	_	_
input	_	_
images	_	_
,	_	_
as	_	_
well	_	_
as	_	_
tensors	_	_
corresponding	_	_
to	_	_
output	_	_
images	_	_
,	_	_
are	_	_
both	_	_
specified	_	_
as	_	_
named	_	_
in	_	_
the	_	_
TF	_	_
model	_	_
.	_	_

#109
The	_	_
process	_	_
object	_	_
uses	_	_
receptive	_	_
field	_	_
of	_	_
inputs	_	_
,	_	_
as	_	_
well	_	_
as	_	_
expression	_	_
field	_	_
and	_	_
scaling	_	_
factor	_	_
of	_	_
outputs	_	_
,	_	_
to	_	_
propagate	_	_
requested	_	_
input	_	_
images	_	_
regions	_	_
and	_	_
generate	_	_
information	_	_
of	_	_
output	_	_
images	_	_
.	_	_

#110
Finally	_	_
,	_	_
two	_	_
processing	_	_
modes	_	_
are	_	_
currently	_	_
supported	_	_
:	_	_
1	_	_
.	_	_

#111
Patch-based	_	_
Extract	_	_
and	_	_
process	_	_
patches	_	_
independently	_	_
at	_	_
regular	_	_
intervals	_	_
.	_	_

#112
Patches	_	_
sizes	_	_
are	_	_
equal	_	_
to	_	_
the	_	_
receptive	_	_
field	_	_
sizes	_	_
of	_	_
inputs	_	_
.	_	_

#113
For	_	_
each	_	_
input	_	_
,	_	_
a	_	_
tensor	_	_
with	_	_
a	_	_
number	_	_
of	_	_
elements	_	_
equal	_	_
to	_	_
the	_	_
number	_	_
of	_	_
patches	_	_
feds	_	_
the	_	_
TF	_	_
model	_	_
.	_	_

#114
2	_	_
.	_	_

#115
Fully-convolutional	_	_
Unlike	_	_
patch-based	_	_
mode	_	_
,	_	_
it	_	_
allows	_	_
the	_	_
processing	_	_
of	_	_
an	_	_
entire	_	_
requested	_	_
region	_	_
.	_	_

#116
For	_	_
each	_	_
input	_	_
,	_	_
a	_	_
tensor	_	_
composed	_	_
of	_	_
one	_	_
single	_	_
element	_	_
,	_	_
corresponding	_	_
to	_	_
the	_	_
input	_	_
requested	_	_
region	_	_
,	_	_
is	_	_
fed	_	_
to	_	_
the	_	_
TF	_	_
model	_	_
.	_	_

#117
This	_	_
mode	_	_
requires	_	_
that	_	_
receptive	_	_
fields	_	_
,	_	_
expression	_	_
fields	_	_
and	_	_
scale	_	_
factors	_	_
are	_	_
consistent	_	_
with	_	_
operators	_	_
implemented	_	_
in	_	_
the	_	_
TF	_	_
model	_	_
,	_	_
input	_	_
images	_	_
physical	_	_
spacing	_	_
and	_	_
alignment	_	_
.	_	_

#118
Blocking	_	_
artifact	_	_
is	_	_
avoided	_	_
by	_	_
computing	_	_
input	_	_
images	_	_
regions	_	_
aligned	_	_
to	_	_
the	_	_
expression	_	_
field	_	_
sizes	_	_
of	_	_
the	_	_
model	_	_
,	_	_
and	_	_
keeping	_	_
only	_	_
the	_	_
subset	_	_
of	_	_
the	_	_
output	_	_
corresponding	_	_
to	_	_
the	_	_
requested	_	_
output	_	_
region	_	_
.	_	_

#119
E.	_	_
New	_	_
OTB	_	_
applications	_	_
OTB	_	_
applications	_	_
generally	_	_
implement	_	_
pipelines	_	_
composed	_	_
of	_	_
several	_	_
process	_	_
objects	_	_
connected	_	_
together	_	_
.	_	_

#120
We	_	_
first	_	_
provide	_	_
a	_	_
new	_	_
application	_	_
dedicated	_	_
to	_	_
RS	_	_
images	_	_
sampling	_	_
suited	_	_
for	_	_
DL	_	_
.	_	_

#121
Then	_	_
,	_	_
using	_	_
our	_	_
new	_	_
filter	_	_
described	_	_
in	_	_
Section	_	_
II	_	_
D	_	_
,	_	_
we	_	_
provide	_	_
new	_	_
applications	_	_
for	_	_
TF	_	_
model	_	_
training	_	_
and	_	_
serving	_	_
.	_	_

#122
Finally	_	_
,	_	_
we	_	_
introduce	_	_
some	_	_
new	_	_
applications	_	_
consisting	_	_
in	_	_
an	_	_
assembly	_	_
of	_	_
multiple	_	_
OTB	_	_
applications	_	_
.	_	_

#123
All	_	_
these	_	_
new	_	_
applications	_	_
are	_	_
integrated	_	_
seamlessly	_	_
in	_	_
the	_	_
existing	_	_
machine	_	_
learning	_	_
framework	_	_
of	_	_
OTB	_	_
.	_	_

#124
1	_	_
.	_	_

#125
Sampling	_	_
The	_	_
existing	_	_
machine	_	_
learning	_	_
framework	_	_
of	_	_
OTB	_	_
includes	_	_
sample	_	_
selection	_	_
and	_	_
extraction	_	_
applications	_	_
suited	_	_
for	_	_
geospatial	_	_
data	_	_
like	_	_
vector	_	_
layers	_	_
and	_	_
RS	_	_
images	_	_
.	_	_

#126
Multiple	_	_
sampling	_	_
strategies	_	_
can	_	_
be	_	_
chosen	_	_
,	_	_
with	_	_
fine	_	_
control	_	_
of	_	_
parameters	_	_
.	_	_

#127
However	_	_
,	_	_
DL	_	_
on	_	_
images	_	_
usually	_	_
involves	_	_
reference	_	_
data	_	_
made	_	_
of	_	_
patches	_	_
,	_	_
but	_	_
the	_	_
existing	_	_
application	_	_
performs	_	_
pixel-wise	_	_
sample	_	_
extraction	_	_
.	_	_

#128
We	_	_
introduce	_	_
a	_	_
new	_	_
application	_	_
that	_	_
performs	_	_
patches	_	_
extraction	_	_
in	_	_
input	_	_
images	_	_
,	_	_
from	_	_
samples	_	_
positions	_	_
resulting	_	_
from	_	_
the	_	_
existing	_	_
sample	_	_
selection	_	_
application	_	_
of	_	_
OTB	_	_
.	_	_

#129
As	_	_
we	_	_
want	_	_
to	_	_
stick	_	_
to	_	_
RS	_	_
images	_	_
files	_	_
formats	_	_
,	_	_
samples	_	_
are	_	_
concatenated	_	_
in	_	_
rows	_	_
to	_	_
form	_	_
one	_	_
unique	_	_
big	_	_
image	_	_
of	_	_
patches	_	_
.	_	_

#130
Typically	_	_
,	_	_
considering	_	_
a	_	_
number	_	_
n	_	_
of	_	_
sampled	_	_
patches	_	_
of	_	_
size	_	_
[	_	_
Srow	_	_
,	_	_
Scol	_	_
,	_	_
Sch	_	_
]	_	_
,	_	_
the	_	_
resulting	_	_
image	_	_
have	_	_
a	_	_
size	_	_
of	_	_
[	_	_
n	_	_
⋅	_	_
Srow	_	_
,	_	_
Scol	_	_
,	_	_
Sch	_	_
]	_	_
.	_	_

#131
The	_	_
main	_	_
advantage	_	_
of	_	_
this	_	_
technique	_	_
is	_	_
that	_	_
pixel	_	_
interleave	_	_
is	_	_
unchanged	_	_
(	_	_
typically	_	_
row	_	_
,	_	_
column	_	_
,	_	_
channel	_	_
)	_	_
,	_	_
guaranteeing	_	_
the	_	_
efficient	_	_
copy	_	_
and	_	_
processing	_	_
.	_	_

#132
2	_	_
.	_	_

#133
Training	_	_
Since	_	_
the	_	_
high	_	_
level	_	_
TF	_	_
API	_	_
is	_	_
Python	_	_
,	_	_
we	_	_
provide	_	_
a	_	_
light	_	_
Python	_	_
environment	_	_
to	_	_
allow	_	_
developers	_	_
to	_	_
build	_	_
and	_	_
train	_	_
their	_	_
models	_	_
from	_	_
patches	_	_
images	_	_
produced	_	_
using	_	_
our	_	_
sampling	_	_
application	_	_
described	_	_
in	_	_
Section	_	_
II	_	_
E	_	_
1	_	_
.	_	_

#134
As	_	_
there	_	_
is	_	_
already	_	_
a	_	_
number	_	_
of	_	_
available	_	_
TF	_	_
models	_	_
and	_	_
existing	_	_
user-oriented	_	_
opens-source	_	_
applications	_	_
to	_	_
create	_	_
TF	_	_
models	_	_
,	_	_
we	_	_
chose	_	_
not	_	_
to	_	_
focus	_	_
it	_	_
.	_	_

#135
Our	_	_
contribution	_	_
for	_	_
RS	_	_
images	_	_
deep	_	_
net	_	_
training	_	_
is	_	_
a	_	_
user-oriented	_	_
OTB	_	_
application	_	_
dedicated	_	_
for	_	_
training	_	_
existing	_	_
TF	_	_
models	_	_
.	_	_

#136
The	_	_
application	_	_
can	_	_
import	_	_
any	_	_
existing	_	_
TF	_	_
model	_	_
.	_	_

#137
It	_	_
can	_	_
restore	_	_
from	_	_
file	_	_
model	_	_
variables	_	_
before	_	_
the	_	_
training	_	_
,	_	_
or	_	_
save	_	_
them	_	_
to	_	_
disk	_	_
after	_	_
training	_	_
.	_	_

#138
Thus	_	_
this	_	_
application	_	_
can	_	_
be	_	_
used	_	_
either	_	_
to	_	_
train	_	_
a	_	_
particular	_	_
model	_	_
from	_	_
scratch	_	_
,	_	_
or	_	_
perform	_	_
fine	_	_
tuning	_	_
depending	_	_
on	_	_
the	_	_
variables	_	_
restored	_	_
.	_	_

#139
The	_	_
training	_	_
can	_	_
be	_	_
performed	_	_
over	_	_
one	_	_
or	_	_
multiple	_	_
inputs	_	_
given	_	_
their	_	_
corresponding	_	_
TF	_	_
placeholders	_	_
names	_	_
and	_	_
provide	_	_
usual	_	_
evaluation	_	_
metrics	_	_
.	_	_

#140
3	_	_
.	_	_

#141
Model	_	_
serving	_	_
We	_	_
introduce	_	_
a	_	_
single	_	_
OTB	_	_
application	_	_
dedicated	_	_
to	_	_
TF	_	_
model	_	_
serving	_	_
,	_	_
that	_	_
implements	_	_
a	_	_
pipeline	_	_
with	_	_
the	_	_
filter	_	_
described	_	_
in	_	_
Section	_	_
II	_	_
D.	_	_
It	_	_
produces	_	_
one	_	_
output	_	_
image	_	_
resulting	_	_
from	_	_
TF	_	_
model	_	_
computations	_	_
.	_	_

#142
As	_	_
the	_	_
entire	_	_
pipeline	_	_
implements	_	_
the	_	_
streaming	_	_
mechanism	_	_
described	_	_
in	_	_
Section	_	_
II	_	_
C	_	_
,	_	_
it	_	_
can	_	_
process	_	_
one	_	_
or	_	_
multiple	_	_
images	_	_
of	_	_
arbitrary	_	_
sizes	_	_
.	_	_

#143
The	_	_
user	_	_
can	_	_
adjust	_	_
the	_	_
produced	_	_
images	_	_
blocks	_	_
sizes	_	_
,	_	_
thanks	_	_
to	_	_
the	_	_
internal	_	_
OTB	_	_
application	_	_
architecture	_	_
.	_	_

#144
This	_	_
application	_	_
provides	_	_
a	_	_
generic	_	_
support	_	_
for	_	_
the	_	_
operational	_	_
deployment	_	_
of	_	_
trained	_	_
deep	_	_
nets	_	_
on	_	_
RS	_	_
images	_	_
.	_	_

#145
4	_	_
.	_	_

#146
Composite	_	_
applications	_	_
Composite	_	_
applications	_	_
are	_	_
OTB	_	_
applications	_	_
connected	_	_
together	_	_
.	_	_

#147
Recent	_	_
studies	_	_
have	_	_
suggested	_	_
that	_	_
deep	_	_
nets	_	_
features	_	_
can	_	_
be	_	_
used	_	_
as	_	_
input	_	_
features	_	_
of	_	_
Table	_	_
1	_	_
.	_	_

#148
Models	_	_
parameters	_	_
Maggiori	_	_
FC17	_	_
Ienco	_	_
M3	_	_
RF	_	_
80x80	_	_
(	_	_
VHRS	_	_
)	_	_
1x1	_	_
(	_	_
TS	_	_
)	_	_
,	_	_
25x25	_	_
(	_	_
VHRS	_	_
)	_	_
EF	_	_
16x16	_	_
1x1	_	_
Mode	_	_
Fully-conv	_	_
Patch-based	_	_
Reference	_	_
VHRS	_	_
TS	_	_
Table	_	_
2	_	_
.	_	_

#149
Characteristics	_	_
of	_	_
the	_	_
dataset	_	_
Id	_	_
Product	_	_
type	_	_
Size	_	_
(	_	_
col	_	_
×	_	_
row	_	_
×	_	_
band	_	_
)	_	_
Pixel	_	_
spacing	_	_
VHRS	_	_
Spot-7	_	_
PXS	_	_
24110	_	_
×	_	_
33740	_	_
×	_	_
4	_	_
1.5	_	_
meters	_	_
TS	_	_
S2	_	_
Time	_	_
series	_	_
3616	_	_
×	_	_
5060	_	_
×	_	_
592	_	_
10	_	_
meters	_	_
algorithms	_	_
like	_	_
classification	_	_
,	_	_
leading	_	_
state	_	_
of	_	_
the	_	_
art	_	_
results	_	_
.	_	_

#150
Regarding	_	_
RS	_	_
image	_	_
classification	_	_
,	_	_
OTB	_	_
already	_	_
implement	_	_
a	_	_
number	_	_
of	_	_
algorithms	_	_
in	_	_
its	_	_
classification	_	_
application	_	_
,	_	_
e.g.	_	_
SVM	_	_
,	_	_
Random	_	_
Forests	_	_
,	_	_
boost	_	_
classifier	_	_
,	_	_
decision	_	_
tree	_	_
classifier	_	_
,	_	_
gradient	_	_
boosted	_	_
tree	_	_
classifier	_	_
,	_	_
normal	_	_
Bayes	_	_
classifier	_	_
.	_	_

#151
In	_	_
the	_	_
sake	_	_
of	_	_
demonstrating	_	_
the	_	_
operational	_	_
aspect	_	_
of	_	_
our	_	_
approach	_	_
,	_	_
we	_	_
implement	_	_
a	_	_
composite	_	_
application	_	_
that	_	_
reuse	_	_
our	_	_
model	_	_
serving	_	_
application	_	_
(	_	_
described	_	_
in	_	_
II	_	_
E	_	_
3	_	_
)	_	_
as	_	_
input	_	_
of	_	_
two	_	_
existing	_	_
OTB	_	_
applications	_	_
:	_	_
the	_	_
TrainImagesClassifier	_	_
and	_	_
ImagesClassifier	_	_
applications	_	_
respectively	_	_
dedicated	_	_
to	_	_
train	_	_
a	_	_
classifier	_	_
and	_	_
perform	_	_
an	_	_
image	_	_
classification	_	_
.	_	_

#152
III	_	_
.	_	_

#153
EXPERIMENTS	_	_
In	_	_
this	_	_
section	_	_
,	_	_
we	_	_
analyze	_	_
performances	_	_
of	_	_
our	_	_
TF	_	_
model	_	_
serving	_	_
application	_	_
.	_	_

#154
We	_	_
conduct	_	_
a	_	_
series	_	_
of	_	_
experiments	_	_
on	_	_
two	_	_
representative	_	_
state	_	_
of	_	_
the	_	_
art	_	_
deep	_	_
nets	_	_
for	_	_
RS	_	_
images	_	_
,	_	_
the	_	_
Maggiori	_	_
et	_	_
al.	_	_
fully	_	_
convolutional	_	_
model	_	_
[	_	_
10	_	_
]	_	_
and	_	_
the	_	_
Ienco	_	_
M3	_	_
data	_	_
fusion	_	_
model	_	_
[	_	_
13	_	_
]	_	_
.	_	_

#155
Both	_	_
perform	_	_
land	_	_
cover	_	_
classification	_	_
,	_	_
but	_	_
are	_	_
different	_	_
in	_	_
terms	_	_
of	_	_
architecture	_	_
as	_	_
well	_	_
as	_	_
implementation	_	_
.	_	_

#156
The	_	_
model	_	_
of	_	_
Maggiori	_	_
is	_	_
a	_	_
single-input	_	_
CNN	_	_
composed	_	_
exclusively	_	_
of	_	_
convolutions	_	_
,	_	_
pooling	_	_
and	_	_
activation	_	_
functions	_	_
,	_	_
allowing	_	_
to	_	_
process	_	_
one	_	_
image	_	_
region	_	_
with	_	_
a	_	_
single	_	_
convolution	_	_
.	_	_

#157
The	_	_
M3	_	_
model	_	_
is	_	_
an	_	_
hybrid	_	_
CNN-RNN	_	_
model	_	_
that	_	_
inputs	_	_
time	_	_
series	_	_
(	_	_
TS	_	_
)	_	_
and	_	_
one	_	_
VHRS	_	_
image	_	_
.	_	_

#158
Unlike	_	_
the	_	_
Maggiori	_	_
model	_	_
,	_	_
it	_	_
consumes	_	_
patches	_	_
of	_	_
the	_	_
VHRS	_	_
image	_	_
and	_	_
one	_	_
pixel	_	_
stack	_	_
of	_	_
time	_	_
series	_	_
,	_	_
to	_	_
perform	_	_
a	_	_
single	_	_
estimation	_	_
at	_	_
one	_	_
only	_	_
location	_	_
.	_	_

#159
Table	_	_
1	_	_
summarizes	_	_
models	_	_
parameters	_	_
:	_	_
Expression	_	_
Field	_	_
(	_	_
EF	_	_
)	_	_
,	_	_
Receptive	_	_
Fields	_	_
(	_	_
RF	_	_
)	_	_
,	_	_
mode	_	_
and	_	_
input	_	_
reference	_	_
image	_	_
.	_	_

#160
Both	_	_
models	_	_
have	_	_
an	_	_
unitary	_	_
scale	_	_
factor	_	_
.	_	_

#161
The	_	_
used	_	_
images	_	_
are	_	_
presented	_	_
in	_	_
Table	_	_
2	_	_
:	_	_
one	_	_
VHRS	_	_
Spot-7	_	_
image	_	_
acquired	_	_
within	_	_
the	_	_
GEOSUD	_	_
project	_	_
[	_	_
28	_	_
]	_	_
and	_	_
one	_	_
S2	_	_
TS	_	_
provided	_	_
by	_	_
the	_	_
THEIA	_	_
Land	_	_
Data	_	_
Center	_	_
[	_	_
29	_	_
]	_	_
.	_	_

#162
The	_	_
TS	_	_
consists	_	_
in	_	_
spectral	_	_
bands	_	_
resampled	_	_
at	_	_
10m	_	_
and	_	_
additional	_	_
radiometric	_	_
indices	_	_
.	_	_

#163
The	_	_
Maggiori	_	_
net	_	_
was	_	_
trained	_	_
to	_	_
estimate	_	_
two	_	_
classes	_	_
and	_	_
M3	_	_
eight	_	_
classes	_	_
.	_	_

#164
All	_	_
experiments	_	_
are	_	_
conducted	_	_
on	_	_
two	_	_
computers	_	_
.	_	_

#165
The	_	_
first	_	_
is	_	_
a	_	_
basic	_	_
workstation	_	_
without	_	_
GPU	_	_
support	_	_
(	_	_
Intel	_	_
Xeon	_	_
CPU	_	_
E5-2609	_	_
@	_	_
2.50GHz	_	_
and	_	_
16	_	_
GB	_	_
of	_	_
0	_	_
4e+08	_	_
8e+08	_	_
Number	_	_
of	_	_
pixels	_	_
Pr	_	_
oc	_	_
es	_	_
si	_	_
ng	_	_
ti	_	_
m	_	_
e	_	_
(	_	_
s	_	_
ec	_	_
on	_	_
ds	_	_
)	_	_
CPU	_	_
(	_	_
Ts=128	_	_
)	_	_
CPU	_	_
(	_	_
Ts=512	_	_
)	_	_
CPU	_	_
(	_	_
Ts=2048	_	_
)	_	_
GPU	_	_
(	_	_
Ts=128	_	_
)	_	_
GPU	_	_
(	_	_
Ts=512	_	_
)	_	_
GPU	_	_
(	_	_
Ts=2048	_	_
)	_	_
0	_	_
1e+07	_	_
1.8e+07	_	_
Number	_	_
of	_	_
pixels	_	_
Pr	_	_
oc	_	_
es	_	_
si	_	_
ng	_	_
ti	_	_
m	_	_
e	_	_
(	_	_
h	_	_
ou	_	_
rs	_	_
)	_	_
CPU	_	_
(	_	_
Ts=16	_	_
)	_	_
CPU	_	_
(	_	_
Ts=32	_	_
)	_	_
CPU	_	_
(	_	_
Ts=64	_	_
)	_	_
GPU	_	_
(	_	_
Ts=16	_	_
)	_	_
GPU	_	_
(	_	_
Ts=32	_	_
)	_	_
GPU	_	_
(	_	_
Ts=64	_	_
)	_	_
(	_	_
a	_	_
)	_	_
MAG17	_	_
(	_	_
b	_	_
)	_	_
M3	_	_
Figure	_	_
1	_	_
.	_	_

#166
Measured	_	_
processing	_	_
times	_	_
for	_	_
different	_	_
images	_	_
sizes	_	_
for	_	_
(	_	_
a	_	_
)	_	_
the	_	_
Maggiori	_	_
model	_	_
(	_	_
MAG17	_	_
)	_	_
and	_	_
(	_	_
b	_	_
)	_	_
Ienco	_	_
M3	_	_
model	_	_
(	_	_
M3	_	_
)	_	_
RAM	_	_
)	_	_
.	_	_

#167
The	_	_
second	_	_
is	_	_
a	_	_
server	_	_
with	_	_
GPU	_	_
support	_	_
(	_	_
Intel	_	_
(	_	_
R	_	_
)	_	_
Xeon	_	_
(	_	_
R	_	_
)	_	_
CPU	_	_
E5-2667	_	_
v4	_	_
@	_	_
3.20Ghz	_	_
with	_	_
256	_	_
GB	_	_
of	_	_
RAM	_	_
and	_	_
TITAN	_	_
X	_	_
GPU	_	_
)	_	_
.	_	_

#168
Libraries	_	_
versions	_	_
are	_	_
OTB	_	_
6.7	_	_
and	_	_
TF	_	_
1.7	_	_
.	_	_

#169
We	_	_
measure	_	_
run	_	_
times	_	_
of	_	_
our	_	_
applications	_	_
using	_	_
the	_	_
two	_	_
models	_	_
on	_	_
both	_	_
configurations	_	_
,	_	_
for	_	_
different	_	_
computed	_	_
images	_	_
sizes	_	_
and	_	_
various	_	_
tile	_	_
size	_	_
.	_	_

#170
We	_	_
presents	_	_
separately	_	_
the	_	_
results	_	_
for	_	_
both	_	_
models	_	_
because	_	_
their	_	_
processing	_	_
time	_	_
differs	_	_
largely	_	_
due	_	_
to	_	_
the	_	_
fact	_	_
that	_	_
M3	_	_
is	_	_
more	_	_
complex	_	_
than	_	_
the	_	_
Maggiori	_	_
model	_	_
.	_	_

#171
Figure	_	_
1	_	_
shows	_	_
that	_	_
processing	_	_
time	_	_
is	_	_
linear	_	_
to	_	_
the	_	_
number	_	_
of	_	_
pixels	_	_
of	_	_
the	_	_
produced	_	_
image	_	_
,	_	_
regardless	_	_
parameters	_	_
.	_	_

#172
Very	_	_
large	_	_
input	_	_
datasets	_	_
are	_	_
entirely	_	_
processed	_	_
thank	_	_
to	_	_
the	_	_
streaming	_	_
mechanism	_	_
,	_	_
even	_	_
on	_	_
the	_	_
basic	_	_
workstation	_	_
with	_	_
only	_	_
16Gb	_	_
RAM	_	_
.	_	_

#173
TF	_	_
computations	_	_
are	_	_
benefiting	_	_
strongly	_	_
from	_	_
the	_	_
GPU	_	_
support	_	_
especially	_	_
for	_	_
image	_	_
convolution	_	_
,	_	_
but	_	_
CPU	_	_
workstation	_	_
processing	_	_
time	_	_
is	_	_
reasonable	_	_
with	_	_
less	_	_
than	_	_
24	_	_
hours	_	_
for	_	_
M3	_	_
(	_	_
Fig.	_	_
1b	_	_
)	_	_
and	_	_
less	_	_
than	_	_
1	_	_
hour	_	_
for	_	_
the	_	_
Maggiori	_	_
model	_	_
(	_	_
Fig.	_	_
1a	_	_
)	_	_
.	_	_

#174
IV	_	_
.	_	_

#175
DISCUSSION	_	_
A	_	_
.	_	_

#176
Operational	_	_
deep	_	_
learning	_	_
framework	_	_
for	_	_
RS	_	_
images	_	_
Our	_	_
first	_	_
goal	_	_
was	_	_
to	_	_
provide	_	_
a	_	_
generic	_	_
DL	_	_
framework	_	_
for	_	_
RS	_	_
images	_	_
processing	_	_
.	_	_

#177
We	_	_
propose	_	_
a	_	_
solution	_	_
which	_	_
takes	_	_
roots	_	_
in	_	_
the	_	_
OTB	_	_
library	_	_
.	_	_

#178
The	_	_
original	_	_
machine	_	_
learning	_	_
framework	_	_
was	_	_
enriched	_	_
to	_	_
embed	_	_
TF	_	_
for	_	_
training	_	_
and	_	_
using	_	_
deep	_	_
neural	_	_
networks	_	_
.	_	_

#179
We	_	_
introduce	_	_
a	_	_
new	_	_
component	_	_
enforcing	_	_
the	_	_
OTB	_	_
workflow	_	_
,	_	_
that	_	_
developers	_	_
can	_	_
implement	_	_
in	_	_
pipelines	_	_
.	_	_

#180
We	_	_
present	_	_
a	_	_
set	_	_
of	_	_
new	_	_
applications	_	_
that	_	_
users	_	_
without	_	_
programming	_	_
knowledge	_	_
can	_	_
operate	_	_
:	_	_
patches	_	_
sampling	_	_
,	_	_
model	_	_
training	_	_
and	_	_
serving	_	_
,	_	_
and	_	_
also	_	_
training	_	_
and	_	_
classification	_	_
applications	_	_
performing	_	_
on	_	_
features	_	_
of	_	_
any	_	_
deep	_	_
net	_	_
exported	_	_
as	_	_
a	_	_
TF	_	_
model	_	_
.	_	_

#181
Our	_	_
approach	_	_
is	_	_
successfully	_	_
applied	_	_
to	_	_
common	_	_
RS	_	_
images	_	_
with	_	_
two	_	_
representative	_	_
state	_	_
of	_	_
the	_	_
art	_	_
deep	_	_
nets	_	_
.	_	_

#182
Processing	_	_
times	_	_
measurements	_	_
have	_	_
shown	_	_
a	_	_
great	_	_
scalability	_	_
and	_	_
also	_	_
that	_	_
our	_	_
applications	_	_
can	_	_
run	_	_
deep	_	_
nets	_	_
without	_	_
restriction	_	_
on	_	_
dataset	_	_
size	_	_
and	_	_
regardless	_	_
hardware	_	_
configuration	_	_
.	_	_

#183
B	_	_
.	_	_

#184
Limits	_	_
and	_	_
further	_	_
research	_	_
It	_	_
should	_	_
be	_	_
noted	_	_
that	_	_
the	_	_
presented	_	_
method	_	_
also	_	_
has	_	_
limits	_	_
.	_	_

#185
The	_	_
user	_	_
has	_	_
responsibility	_	_
in	_	_
providing	_	_
crucial	_	_
parameters	_	_
to	_	_
applications	_	_
.	_	_

#186
In	_	_
particular	_	_
,	_	_
receptive	_	_
field	_	_
,	_	_
expression	_	_
field	_	_
and	_	_
scale	_	_
factor	_	_
of	_	_
deep	_	_
nets	_	_
.	_	_

#187
In	_	_
future	_	_
development	_	_
,	_	_
those	_	_
parameters	_	_
could	_	_
be	_	_
extracted	_	_
from	_	_
the	_	_
serialized	_	_
TF	_	_
graph	_	_
.	_	_

#188
In	_	_
the	_	_
same	_	_
way	_	_
,	_	_
the	_	_
memory	_	_
footprint	_	_
is	_	_
computed	_	_
within	_	_
the	_	_
OTB	_	_
pipeline	_	_
,	_	_
but	_	_
does	_	_
not	_	_
takes	_	_
in	_	_
account	_	_
the	_	_
memory	_	_
consumed	_	_
internally	_	_
by	_	_
TF	_	_
during	_	_
the	_	_
execution	_	_
of	_	_
the	_	_
computational	_	_
graph	_	_
:	_	_
the	_	_
user	_	_
is	_	_
thus	_	_
responsible	_	_
of	_	_
fine	_	_
tuning	_	_
using	_	_
the	_	_
OTB	_	_
application	_	_
engine	_	_
parameters	_	_
.	_	_

#189
V.	_	_
CONCLUSION	_	_
This	_	_
work	_	_
was	_	_
carried	_	_
out	_	_
with	_	_
a	_	_
view	_	_
toward	_	_
processing	_	_
remote	_	_
sensing	_	_
(	_	_
RS	_	_
)	_	_
images	_	_
using	_	_
deep	_	_
learning	_	_
(	_	_
DL	_	_
)	_	_
techniques	_	_
from	_	_
the	_	_
user	_	_
perspective	_	_
.	_	_

#190
We	_	_
propose	_	_
a	_	_
generic	_	_
framework	_	_
based	_	_
on	_	_
Orfeo	_	_
Toolbox	_	_
(	_	_
OTB	_	_
)	_	_
and	_	_
TensorFlow	_	_
(	_	_
TF	_	_
)	_	_
libraries	_	_
.	_	_

#191
We	_	_
have	_	_
successfully	_	_
applied	_	_
existing	_	_
state	_	_
of	_	_
the	_	_
art	_	_
deep	_	_
nets	_	_
on	_	_
common	_	_
RS	_	_
images	_	_
using	_	_
our	_	_
framework	_	_
and	_	_
shown	_	_
a	_	_
good	_	_
computational	_	_
efficiency	_	_
,	_	_
without	_	_
restriction	_	_
on	_	_
images	_	_
sizes	_	_
and	_	_
regardless	_	_
hardware	_	_
configuration	_	_
.	_	_

#192
Our	_	_
approach	_	_
enables	_	_
users	_	_
without	_	_
coding	_	_
skills	_	_
to	_	_
use	_	_
deep	_	_
nets	_	_
in	_	_
their	_	_
RS	_	_
applications	_	_
,	_	_
and	_	_
developers	_	_
to	_	_
create	_	_
operational	_	_
RS	_	_
processing	_	_
pipelines	_	_
benefiting	_	_
from	_	_
the	_	_
development	_	_
framework	_	_
of	_	_
OTB	_	_
library	_	_
.	_	_

#193
Our	_	_
approach	_	_
allows	_	_
the	_	_
combination	_	_
of	_	_
the	_	_
existing	_	_
OTB	_	_
machine	_	_
learning	_	_
framework	_	_
with	_	_
deep	_	_
nets	_	_
.	_	_

#194
The	_	_
integration	_	_
of	_	_
DL	_	_
processes	_	_
in	_	_
high	_	_
performance	_	_
computing	_	_
architectures	_	_
is	_	_
enabled	_	_
thank	_	_
to	_	_
the	_	_
heterogeneous	_	_
devices	_	_
supported	_	_
by	_	_
the	_	_
used	_	_
libraries	_	_
.	_	_

#195
Further	_	_
research	_	_
could	_	_
focus	_	_
on	_	_
improving	_	_
the	_	_
automatic	_	_
retrieval	_	_
of	_	_
nets	_	_
parameters	_	_
and	_	_
memory	_	_
footprint	_	_
.	_	_

#196
The	_	_
source	_	_
code	_	_
and	_	_
documentation	_	_
corresponding	_	_
to	_	_
the	_	_
implementation	_	_
presented	_	_
in	_	_
this	_	_
paper	_	_
is	_	_
available	_	_
at	_	_
[	_	_
30	_	_
]	_	_
,	_	_
and	_	_
the	_	_
exposed	_	_
framework	_	_
will	_	_
be	_	_
proposed	_	_
as	_	_
official	_	_
contribution	_	_
in	_	_
the	_	_
forthcoming	_	_
releases	_	_
of	_	_
OTB	_	_
.	_	_

#197
ACKNOWLEDGMENTS	_	_
The	_	_
author	_	_
thanks	_	_
the	_	_
OTB	_	_
team	_	_
,	_	_
Dino	_	_
Ienco	_	_
and	_	_
Emmanuel	_	_
Maggiori	_	_
.	_	_

#198
This	_	_
work	_	_
was	_	_
supported	_	_
by	_	_
public	_	_
funds	_	_
received	_	_
through	_	_
GEOSUD	_	_
,	_	_
a	_	_
project	_	_
(	_	_
ANR-10-EQPX-20	_	_
)	_	_
of	_	_
the	_	_
Investissements	_	_
d’Avenir	_	_
program	_	_
managed	_	_
by	_	_
the	_	_
French	_	_
National	_	_
Research	_	_
Agency	_	_
.	_	_

#199
The	_	_
author	_	_
would	_	_
also	_	_
like	_	_
to	_	_
thank	_	_
the	_	_
reviewers	_	_
for	_	_
their	_	_
valuable	_	_
suggestions	_	_
.	_	_

#200
[	_	_
1	_	_
]	_	_
J	_	_
.	_	_

#201
A.	_	_
Benediktsson	_	_
,	_	_
J.	_	_
Chanussot	_	_
,	_	_
and	_	_
W.	_	_
M.	_	_
Moon	_	_
.	_	_

#202
Advances	_	_
in	_	_
very-high-resolution	_	_
remote	_	_
sensing	_	_
.	_	_

#203
Proceedings	_	_
of	_	_
the	_	_
IEEE	_	_
,	_	_
101	_	_
,	_	_
2013	_	_
.	_	_

#204
[	_	_
2	_	_
]	_	_
Mordechai	_	_
Haklay	_	_
and	_	_
Patrick	_	_
Weber	_	_
.	_	_

#205
Openstreetmap	_	_
:	_	_
User-generated	_	_
street	_	_
maps	_	_
.	_	_

#206
IEEE	_	_
Pervasive	_	_
Computing	_	_
,	_	_
7	_	_
(	_	_
4	_	_
)	_	_
:12–18	_	_
,	_	_
2008	_	_
.	_	_

#207
[	_	_
3	_	_
]	_	_
Xiao	_	_
Xiang	_	_
Zhu	_	_
,	_	_
Devis	_	_
Tuia	_	_
,	_	_
Lichao	_	_
Mou	_	_
,	_	_
Gui-Song	_	_
Xia	_	_
,	_	_
Liangpei	_	_
Zhang	_	_
,	_	_
Feng	_	_
Xu	_	_
,	_	_
and	_	_
Friedrich	_	_
Fraundorfer	_	_
.	_	_

#208
Deep	_	_
learning	_	_
in	_	_
remote	_	_
sensing	_	_
:	_	_
a	_	_
review	_	_
.	_	_

#209
arXiv	_	_
preprint	_	_
arXiv:1710.03959	_	_
,	_	_
2017	_	_
.	_	_

#210
[	_	_
4	_	_
]	_	_
Sizhe	_	_
Chen	_	_
and	_	_
Haipeng	_	_
Wang	_	_
.	_	_

#211
Sar	_	_
target	_	_
recognition	_	_
based	_	_
on	_	_
deep	_	_
learning	_	_
.	_	_

#212
In	_	_
Data	_	_
Science	_	_
and	_	_
Advanced	_	_
Analytics	_	_
(	_	_
DSAA	_	_
)	_	_
,	_	_
2014	_	_
International	_	_
Conference	_	_
on	_	_
,	_	_
pages	_	_
541–547	_	_
.	_	_

#213
IEEE	_	_
,	_	_
2014	_	_
.	_	_

#214
[	_	_
5	_	_
]	_	_
Dinh	_	_
Ho	_	_
Tong	_	_
Minh	_	_
,	_	_
Dino	_	_
Ienco	_	_
,	_	_
Raffaele	_	_
Gaetano	_	_
,	_	_
Nathalie	_	_
Lalande	_	_
,	_	_
Emile	_	_
Ndikumana	_	_
,	_	_
Faycal	_	_
Osman	_	_
,	_	_
and	_	_
Pierre	_	_
Maurel	_	_
.	_	_

#215
Deep	_	_
recurrent	_	_
neural	_	_
networks	_	_
for	_	_
winter	_	_
vegetation	_	_
quality	_	_
mapping	_	_
via	_	_
multitemporal	_	_
sar	_	_
sentinel-1	_	_
.	_	_

#216
IEEE	_	_
Geoscience	_	_
and	_	_
Remote	_	_
Sensing	_	_
Letters	_	_
,	_	_
15	_	_
(	_	_
3	_	_
)	_	_
:464–468	_	_
,	_	_
2018	_	_
.	_	_

#217
[	_	_
6	_	_
]	_	_
Lei	_	_
Wang	_	_
,	_	_
K	_	_
Andrea	_	_
Scott	_	_
,	_	_
Linlin	_	_
Xu	_	_
,	_	_
and	_	_
David	_	_
A	_	_
Clausi	_	_
.	_	_

#218
Sea	_	_
ice	_	_
concentration	_	_
estimation	_	_
during	_	_
melt	_	_
from	_	_
dual-pol	_	_
sar	_	_
scenes	_	_
using	_	_
deep	_	_
convolutional	_	_
neural	_	_
networks	_	_
:	_	_
A	_	_
case	_	_
study	_	_
.	_	_

#219
IEEE	_	_
Transactions	_	_
on	_	_
Geoscience	_	_
and	_	_
Remote	_	_
Sensing	_	_
,	_	_
54	_	_
(	_	_
8	_	_
)	_	_
:4524–4533	_	_
,	_	_
2016	_	_
.	_	_

#220
[	_	_
7	_	_
]	_	_
Y.	_	_
Chen	_	_
,	_	_
Z.	_	_
Lin	_	_
,	_	_
X.	_	_
Zhao	_	_
,	_	_
G.	_	_
Wang	_	_
,	_	_
and	_	_
Y.	_	_
Gu	_	_
.	_	_

#221
Deep	_	_
learning-based	_	_
classification	_	_
of	_	_
hyperspectral	_	_
data	_	_
.	_	_

#222
IEEE	_	_
Journal	_	_
of	_	_
Selected	_	_
Topics	_	_
in	_	_
Applied	_	_
Earth	_	_
Observations	_	_
and	_	_
Remote	_	_
Sensing	_	_
,	_	_
7	_	_
(	_	_
6	_	_
)	_	_
:2094–2107	_	_
,	_	_
June	_	_
2014	_	_
.	_	_

#223
[	_	_
8	_	_
]	_	_
W.	_	_
Li	_	_
,	_	_
G.	_	_
Wu	_	_
,	_	_
and	_	_
Q	_	_
.	_	_

#224
Du	_	_
.	_	_

#225
Transferred	_	_
deep	_	_
learning	_	_
for	_	_
anomaly	_	_
detection	_	_
in	_	_
hyperspectral	_	_
imagery	_	_
.	_	_

#226
IEEE	_	_
Geoscience	_	_
and	_	_
Remote	_	_
Sensing	_	_
Letters	_	_
,	_	_
14	_	_
(	_	_
5	_	_
)	_	_
:597–	_	_
601	_	_
,	_	_
May	_	_
2017	_	_
.	_	_

#227
[	_	_
9	_	_
]	_	_
Michele	_	_
Volpi	_	_
and	_	_
Devis	_	_
Tuia	_	_
.	_	_

#228
Dense	_	_
semantic	_	_
labeling	_	_
of	_	_
subdecimeter	_	_
resolution	_	_
images	_	_
with	_	_
convolutional	_	_
neural	_	_
networks	_	_
.	_	_

#229
IEEE	_	_
Transactions	_	_
on	_	_
Geoscience	_	_
and	_	_
Remote	_	_
Sensing	_	_
,	_	_
55	_	_
(	_	_
2	_	_
)	_	_
:881–893	_	_
,	_	_
2017	_	_
.	_	_

#230
[	_	_
10	_	_
]	_	_
Emmanuel	_	_
Maggiori	_	_
,	_	_
Yuliya	_	_
Tarabalka	_	_
,	_	_
Guillaume	_	_
Charpiat	_	_
,	_	_
and	_	_
Pierre	_	_
Alliez	_	_
.	_	_

#231
High-resolution	_	_
aerial	_	_
image	_	_
labeling	_	_
with	_	_
convolutional	_	_
neural	_	_
networks	_	_
.	_	_

#232
IEEE	_	_
Transactions	_	_
on	_	_
Geoscience	_	_
and	_	_
Remote	_	_
Sensing	_	_
,	_	_
55	_	_
(	_	_
12	_	_
)	_	_
:7092–7103	_	_
,	_	_
2017	_	_
.	_	_

#233
[	_	_
11	_	_
]	_	_
Gong	_	_
Cheng	_	_
and	_	_
Junwei	_	_
Han	_	_
.	_	_

#234
A	_	_
survey	_	_
on	_	_
object	_	_
detection	_	_
in	_	_
optical	_	_
remote	_	_
sensing	_	_
images	_	_
.	_	_

#235
ISPRS	_	_
Journal	_	_
of	_	_
Photogrammetry	_	_
and	_	_
Remote	_	_
Sensing	_	_
,	_	_
117:11–	_	_
28	_	_
,	_	_
2016	_	_
.	_	_

#236
[	_	_
12	_	_
]	_	_
Paolo	_	_
Napoletano	_	_
.	_	_

#237
Visual	_	_
descriptors	_	_
for	_	_
content-based	_	_
retrieval	_	_
of	_	_
remote-sensing	_	_
images	_	_
.	_	_

#238
International	_	_
Journal	_	_
of	_	_
Remote	_	_
Sensing	_	_
,	_	_
39	_	_
(	_	_
5	_	_
)	_	_
:1343–1376	_	_
,	_	_
2018	_	_
.	_	_

#239
[	_	_
13	_	_
]	_	_
Dino	_	_
Ienco	_	_
,	_	_
Raffaele	_	_
Gaetano	_	_
,	_	_
Claire	_	_
Dupaquier	_	_
,	_	_
and	_	_
Pierre	_	_
Maurel	_	_
.	_	_

#240
Land	_	_
cover	_	_
classification	_	_
via	_	_
multi-temporal	_	_
spatial	_	_
data	_	_
by	_	_
deep	_	_
recurrent	_	_
neural	_	_
networks	_	_
.	_	_

#241
IEEE	_	_
Geoscience	_	_
and	_	_
Remote	_	_
Sensing	_	_
Letters	_	_
,	_	_
14	_	_
(	_	_
10	_	_
)	_	_
:1685–1689	_	_
,	_	_
2017	_	_
.	_	_

#242
[	_	_
14	_	_
]	_	_
Luis	_	_
Gomez-Chova	_	_
,	_	_
Devis	_	_
Tuia	_	_
,	_	_
Gabriele	_	_
Moser	_	_
,	_	_
and	_	_
Gustau	_	_
Camps-Valls	_	_
.	_	_

#243
Multimodal	_	_
classification	_	_
of	_	_
remote	_	_
sensing	_	_
images	_	_
:	_	_
A	_	_
review	_	_
and	_	_
future	_	_
directions	_	_
.	_	_

#244
Proceedings	_	_
of	_	_
the	_	_
IEEE	_	_
,	_	_
103	_	_
(	_	_
9	_	_
)	_	_
:1560–1584	_	_
,	_	_
2015	_	_
.	_	_

#245
[	_	_
15	_	_
]	_	_
P	_	_
Benedetti	_	_
,	_	_
D	_	_
Ienco	_	_
,	_	_
R	_	_
Gaetano	_	_
,	_	_
K	_	_
Osé	_	_
,	_	_
R	_	_
Pensa	_	_
,	_	_
and	_	_
S	_	_
Dupuy	_	_
.	_	_

#246
M3fusion	_	_
:	_	_
A	_	_
deep	_	_
learning	_	_
architecture	_	_
for	_	_
multi-	_	_
{	_	_
Scale/Modal/Temporal	_	_
}	_	_
satellite	_	_
data	_	_
fusion	_	_
.	_	_

#247
arXiv	_	_
preprint	_	_
arXiv:1803.01945	_	_
,	_	_
2018	_	_
.	_	_

#248
[	_	_
16	_	_
]	_	_
Giuseppe	_	_
Masi	_	_
,	_	_
Davide	_	_
Cozzolino	_	_
,	_	_
Luisa	_	_
Verdoliva	_	_
,	_	_
and	_	_
Giuseppe	_	_
Scarpa	_	_
.	_	_

#249
Pansharpening	_	_
by	_	_
convolutional	_	_
neural	_	_
networks	_	_
.	_	_

#250
Remote	_	_
Sensing	_	_
,	_	_
8	_	_
(	_	_
7	_	_
)	_	_
:594	_	_
,	_	_
2016	_	_
.	_	_

#251
[	_	_
17	_	_
]	_	_
Yi	_	_
Yang	_	_
and	_	_
Shawn	_	_
Newsam	_	_
.	_	_

#252
Bag-of-visual-words	_	_
and	_	_
spatial	_	_
extensions	_	_
for	_	_
land-use	_	_
classification	_	_
.	_	_

#253
In	_	_
Proceedings	_	_
of	_	_
the	_	_
18th	_	_
SIGSPATIAL	_	_
international	_	_
conference	_	_
on	_	_
advances	_	_
in	_	_
geographic	_	_
information	_	_
systems	_	_
,	_	_
pages	_	_
270–279	_	_
.	_	_

#254
ACM	_	_
,	_	_
2010	_	_
.	_	_

#255
[	_	_
18	_	_
]	_	_
Postdam	_	_
dataset	_	_
.	_	_

#256
www2.isprs.org/commissions/	_	_
comm3/wg4/2d-sem-label-potsdam.html	_	_
.	_	_

#257
Accessed	_	_
:	_	_
2018-04-30	_	_
.	_	_

#258
[	_	_
19	_	_
]	_	_
Keiller	_	_
Nogueira	_	_
,	_	_
Otávio	_	_
AB	_	_
Penatti	_	_
,	_	_
and	_	_
Jefersson	_	_
A	_	_
dos	_	_
Santos	_	_
.	_	_

#259
Towards	_	_
better	_	_
exploiting	_	_
convolutional	_	_
neural	_	_
networks	_	_
for	_	_
remote	_	_
sensing	_	_
scene	_	_
classification	_	_
.	_	_

#260
Pattern	_	_
Recognition	_	_
,	_	_
61:539–556	_	_
,	_	_
2017	_	_
.	_	_

#261
[	_	_
20	_	_
]	_	_
Dimitrios	_	_
Marmanis	_	_
,	_	_
Mihai	_	_
Datcu	_	_
,	_	_
Thomas	_	_
Esch	_	_
,	_	_
and	_	_
Uwe	_	_
Stilla	_	_
.	_	_

#262
Deep	_	_
learning	_	_
earth	_	_
observation	_	_
classification	_	_
using	_	_
imagenet	_	_
pretrained	_	_
networks	_	_
.	_	_

#263
IEEE	_	_
Geoscience	_	_
and	_	_
Remote	_	_
Sensing	_	_
Letters	_	_
,	_	_
13	_	_
(	_	_
1	_	_
)	_	_
:105–109	_	_
,	_	_
2016	_	_
.	_	_

#264
[	_	_
21	_	_
]	_	_
Fan	_	_
Hu	_	_
,	_	_
Gui-Song	_	_
Xia	_	_
,	_	_
Jingwen	_	_
Hu	_	_
,	_	_
and	_	_
Liangpei	_	_
Zhang	_	_
.	_	_

#265
Transferring	_	_
deep	_	_
convolutional	_	_
neural	_	_
networks	_	_
for	_	_
the	_	_
scene	_	_
classification	_	_
of	_	_
high-resolution	_	_
remote	_	_
sensing	_	_
imagery	_	_
.	_	_

#266
Remote	_	_
Sensing	_	_
,	_	_
7	_	_
(	_	_
11	_	_
)	_	_
:14680–	_	_
14707	_	_
,	_	_
2015	_	_
.	_	_

#267
[	_	_
22	_	_
]	_	_
Manuel	_	_
Grizonnet	_	_
,	_	_
Julien	_	_
Michel	_	_
,	_	_
Victor	_	_
Poughon	_	_
,	_	_
Jordi	_	_
Inglada	_	_
,	_	_
Mickaël	_	_
Savinaud	_	_
,	_	_
and	_	_
Rémi	_	_
Cresson	_	_
.	_	_

#268
Orfeo	_	_
toolbox	_	_
:	_	_
open	_	_
source	_	_
processing	_	_
of	_	_
remote	_	_
sensing	_	_
images	_	_
.	_	_

#269
Open	_	_
Geospatial	_	_
Data	_	_
,	_	_
Software	_	_
and	_	_
Standards	_	_
,	_	_
2	_	_
(	_	_
1	_	_
)	_	_
:15	_	_
,	_	_
2017	_	_
.	_	_

#270
[	_	_
23	_	_
]	_	_
Mart́ın	_	_
Abadi	_	_
,	_	_
Paul	_	_
Barham	_	_
,	_	_
Jianmin	_	_
Chen	_	_
,	_	_
Zhifeng	_	_
Chen	_	_
,	_	_
Andy	_	_
Davis	_	_
,	_	_
Jeffrey	_	_
Dean	_	_
,	_	_
Matthieu	_	_
Devin	_	_
,	_	_
Sanjay	_	_
Ghemawat	_	_
,	_	_
Geoffrey	_	_
Irving	_	_
,	_	_
Michael	_	_
Isard	_	_
,	_	_
et	_	_
al.	_	_
Tensorflow	_	_
:	_	_
A	_	_
system	_	_
for	_	_
large-scale	_	_
machine	_	_
learning	_	_
.	_	_

#271
In	_	_
OSDI	_	_
,	_	_
volume	_	_
16	_	_
,	_	_
pages	_	_
265–283	_	_
,	_	_
2016	_	_
.	_	_

#272
[	_	_
24	_	_
]	_	_
T.	_	_
S.	_	_
Yoo	_	_
,	_	_
M.	_	_
J.	_	_
Ackerman	_	_
,	_	_
W.	_	_
E.	_	_
Laorensen	_	_
,	_	_
W.	_	_
Schroeder	_	_
,	_	_
V.	_	_
Chalana	_	_
,	_	_
S.	_	_
Aylward	_	_
,	_	_
D.	_	_
Metaxas	_	_
,	_	_
and	_	_
R.	_	_
Whitaker	_	_
.	_	_

#273
Engineering	_	_
and	_	_
algorithm	_	_
design	_	_
for	_	_
an	_	_
image	_	_
processing	_	_
API	_	_
:	_	_
A	_	_
technical	_	_
report	_	_
on	_	_
ITK	_	_
-	_	_
The	_	_
Insight	_	_
Toolkit	_	_
.	_	_

#274
In	_	_
IOS	_	_
Press	_	_
Amsterdam	_	_
J.	_	_
Westwood	_	_
,	_	_
ed.	_	_
,	_	_
editor	_	_
,	_	_
Proceedings	_	_
of	_	_
Medecine	_	_
Meets	_	_
Virtual	_	_
Reality	_	_
,	_	_
2002	_	_
.	_	_

#275
[	_	_
25	_	_
]	_	_
Jordi	_	_
Inglada	_	_
,	_	_
Arthur	_	_
Vincent	_	_
,	_	_
Marcela	_	_
Arias	_	_
,	_	_
Benjamin	_	_
Tardy	_	_
,	_	_
David	_	_
Morin	_	_
,	_	_
and	_	_
Isabel	_	_
Rodes	_	_
.	_	_

#276
Operational	_	_
high	_	_
resolution	_	_
land	_	_
cover	_	_
map	_	_
production	_	_
at	_	_
the	_	_
country	_	_
scale	_	_
using	_	_
satellite	_	_
image	_	_
time	_	_
series	_	_
.	_	_

#277
Remote	_	_
Sensing	_	_
,	_	_
9	_	_
(	_	_
1	_	_
)	_	_
:95	_	_
,	_	_
2017	_	_
.	_	_

#278
[	_	_
26	_	_
]	_	_
Rémi	_	_
Cresson	_	_
and	_	_
Gabriel	_	_
Hautreux	_	_
.	_	_

#279
A	_	_
generic	_	_
framework	_	_
for	_	_
the	_	_
development	_	_
of	_	_
geospatial	_	_
processing	_	_
pipelines	_	_
on	_	_
clusters	_	_
.	_	_

#280
IEEE	_	_
Geoscience	_	_
and	_	_
Remote	_	_
Sensing	_	_
Letters	_	_
,	_	_
13	_	_
(	_	_
11	_	_
)	_	_
:1706–1710	_	_
,	_	_
2016	_	_
.	_	_

#281
[	_	_
27	_	_
]	_	_
Luis	_	_
Ibez	_	_
and	_	_
Brad	_	_
King	_	_
.	_	_

#282
ITK	_	_
(	_	_
http	_	_
:	_	_
//www.aosabook.org/en/itk.html	_	_
)	_	_
.	_	_

#283
Accessed	_	_
:	_	_
2016-05-24	_	_
.	_	_

#284
[	_	_
28	_	_
]	_	_
www.equipex-geosud.fr	_	_
.	_	_

#285
[	_	_
29	_	_
]	_	_
http	_	_
:	_	_
//www.theia-land.fr/en	_	_
.	_	_

#286
[	_	_
30	_	_
]	_	_
OTBTensorflow	_	_
remote	_	_
module	_	_
for	_	_
orfeo	_	_
toolbox	_	_
.	_	_

#287
https	_	_
:	_	_
//github.com/remicres/otbtf	_	_
.	_	_

#288
Accessed	_	_
:	_	_
2018-09-05	_	_
.	_	_