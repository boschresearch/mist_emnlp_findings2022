#0
Coherent	_	_
clusters	_	_
in	_	_
source	_	_
code	_	_
Highlights	_	_
•	_	_
Introduction	_	_
of	_	_
efficient	_	_
clustering	_	_
algorithm	_	_
.	_	_

#1
•	_	_
Empirical	_	_
analysis	_	_
to	_	_
assess	_	_
the	_	_
frequency	_	_
and	_	_
size	_	_
of	_	_
coherent	_	_
clusters	_	_
.	_	_

#2
•	_	_
A	_	_
series	_	_
of	_	_
case	_	_
studies	_	_
showing	_	_
how	_	_
clusters	_	_
identify	_	_
logical	_	_
program	_	_
structures	_	_
.	_	_

#3
•	_	_
A	_	_
study	_	_
on	_	_
the	_	_
relationship	_	_
between	_	_
coherent	_	_
clusters	_	_
and	_	_
program	_	_
faults	_	_
.	_	_

#4
•	_	_
A	_	_
study	_	_
on	_	_
the	_	_
relationship	_	_
between	_	_
coherent	_	_
clusters	_	_
and	_	_
system	_	_
evolution	_	_
.	_	_

#5
Abstract	_	_
This	_	_
paper	_	_
presents	_	_
the	_	_
results	_	_
of	_	_
a	_	_
large	_	_
scale	_	_
empirical	_	_
study	_	_
of	_	_
coherent	_	_
dependence	_	_
clusters	_	_
.	_	_

#6
All	_	_
statements	_	_
in	_	_
a	_	_
coherent	_	_
dependence	_	_
cluster	_	_
depend	_	_
upon	_	_
the	_	_
same	_	_
set	_	_
of	_	_
statements	_	_
and	_	_
affect	_	_
the	_	_
same	_	_
set	_	_
of	_	_
statements	_	_
;	_	_
a	_	_
coherent	_	_
cluster	_	_
's	_	_
statements	_	_
have	_	_
'coherent	_	_
'	_	_
shared	_	_
backward	_	_
and	_	_
forward	_	_
dependence	_	_
.	_	_

#7
We	_	_
introduce	_	_
an	_	_
approximation	_	_
to	_	_
efficiently	_	_
locate	_	_
coherent	_	_
clusters	_	_
and	_	_
show	_	_
that	_	_
it	_	_
has	_	_
a	_	_
minimum	_	_
precision	_	_
of	_	_
97.76	_	_
%	_	_
.	_	_

#8
Our	_	_
empirical	_	_
study	_	_
also	_	_
finds	_	_
that	_	_
,	_	_
despite	_	_
their	_	_
tight	_	_
coherence	_	_
constraints	_	_
,	_	_
coherent	_	_
dependence	_	_
clusters	_	_
are	_	_
in	_	_
abundance	_	_
:	_	_
23	_	_
of	_	_
the	_	_
30	_	_
programs	_	_
studied	_	_
have	_	_
coherent	_	_
clusters	_	_
that	_	_
contain	_	_
at	_	_
least	_	_
10	_	_
%	_	_
of	_	_
the	_	_
whole	_	_
program	_	_
.	_	_

#9
Studying	_	_
patterns	_	_
of	_	_
clustering	_	_
in	_	_
these	_	_
programs	_	_
reveals	_	_
that	_	_
most	_	_
programs	_	_
contain	_	_
multiple	_	_
substantial	_	_
coherent	_	_
clusters	_	_
.	_	_

#10
A	_	_
series	_	_
of	_	_
subsequent	_	_
case	_	_
studies	_	_
uncover	_	_
that	_	_
all	_	_
clusters	_	_
of	_	_
significant	_	_
size	_	_
map	_	_
to	_	_
a	_	_
logical	_	_
functionality	_	_
and	_	_
correspond	_	_
to	_	_
a	_	_
program	_	_
structure	_	_
.	_	_

#11
For	_	_
example	_	_
,	_	_
we	_	_
show	_	_
that	_	_
for	_	_
the	_	_
program	_	_
acct	_	_
,	_	_
the	_	_
top	_	_
five	_	_
coherent	_	_
clusters	_	_
all	_	_
map	_	_
to	_	_
specific	_	_
,	_	_
yet	_	_
otherwise	_	_
non-obvious	_	_
,	_	_
functionality	_	_
.	_	_

#12
Cluster	_	_
visualization	_	_
also	_	_
brings	_	_
out	_	_
subtle	_	_
deficiencies	_	_
in	_	_
program	_	_
structure	_	_
and	_	_
identifies	_	_
potential	_	_
refactoring	_	_
candidates	_	_
.	_	_

#13
A	_	_
study	_	_
of	_	_
inter-cluster	_	_
dependence	_	_
is	_	_
used	_	_
to	_	_
highlight	_	_
how	_	_
coherent	_	_
clusters	_	_
are	_	_
connected	_	_
to	_	_
each	_	_
other	_	_
,	_	_
revealing	_	_
higher-level	_	_
structures	_	_
,	_	_
which	_	_
can	feasibility	_
be	_	_
used	_	_
in	_	_
reverse	_	_
engineering	_	_
.	_	_

#14
Finally	_	_
,	_	_
studies	_	_
are	_	_
presented	_	_
to	_	_
illustrate	_	_
how	_	_
clusters	_	_
are	_	_
not	_	_
correlated	_	_
with	_	_
program	_	_
faults	_	_
as	_	_
they	_	_
remain	_	_
stable	_	_
during	_	_
most	_	_
system	_	_
evolution	_	_
.	_	_

#15
Introduction	_	_
Program	_	_
dependence	_	_
analysis	_	_
is	_	_
a	_	_
foundation	_	_
for	_	_
many	_	_
activities	_	_
in	_	_
software	_	_
engineering	_	_
such	_	_
as	_	_
testing	_	_
,	_	_
comprehension	_	_
,	_	_
and	_	_
impact	_	_
analysis	_	_
(	_	_
Binkley	_	_
,	_	_
2007	_	_
)	_	_
.	_	_

#16
For	_	_
example	_	_
,	_	_
it	_	_
is	_	_
essential	_	_
to	_	_
understand	_	_
the	_	_
relationships	_	_
between	_	_
different	_	_
parts	_	_
of	_	_
a	_	_
system	_	_
when	_	_
making	_	_
changes	_	_
and	_	_
the	_	_
impacts	_	_
of	_	_
these	_	_
changes	_	_
(	_	_
Gallagher	_	_
and	_	_
Lyle	_	_
,	_	_
1991	_	_
)	_	_
.	_	_

#17
This	_	_
has	_	_
led	_	_
to	_	_
both	_	_
static	_	_
(	_	_
Yau	_	_
and	_	_
Collofello	_	_
,	_	_
1985	_	_
;	_	_
Black	_	_
,	_	_
2001	_	_
)	_	_
and	_	_
blended	_	_
(	_	_
static	_	_
and	_	_
dynamic	_	_
)	_	_
(	_	_
Ren	_	_
et	_	_
al.	_	_
,	_	_
2006	_	_
,	_	_
2005	_	_
)	_	_
dependence	_	_
analyses	_	_
of	_	_
the	_	_
relationships	_	_
between	_	_
dependence	_	_
and	_	_
impact	_	_
.	_	_

#18
One	_	_
important	_	_
property	_	_
of	_	_
dependence	_	_
is	_	_
the	_	_
way	_	_
in	_	_
which	_	_
it	_	_
may	capability-options	_
cluster	_	_
.	_	_

#19
This	_	_
occurs	_	_
when	_	_
a	_	_
set	_	_
of	_	_
statements	_	_
all	_	_
depend	_	_
upon	_	_
one	_	_
another	_	_
,	_	_
forming	_	_
a	_	_
dependence	_	_
cluster	_	_
.	_	_

#20
Within	_	_
such	_	_
a	_	_
cluster	_	_
,	_	_
any	_	_
change	_	_
to	_	_
an	_	_
element	_	_
potentially	_	_
affects	_	_
every	_	_
other	_	_
element	_	_
of	_	_
the	_	_
cluster	_	_
.	_	_

#21
If	_	_
such	_	_
a	_	_
dependence	_	_
cluster	_	_
is	_	_
very	_	_
large	_	_
,	_	_
then	_	_
this	_	_
mutual	_	_
dependence	_	_
clearly	_	_
has	_	_
implications	_	_
related	_	_
to	_	_
the	_	_
cost	_	_
of	_	_
maintaining	_	_
the	_	_
code	_	_
.	_	_

#22
In	_	_
previous	_	_
work	_	_
(	_	_
Binkley	_	_
and	_	_
Harman	_	_
,	_	_
2005	_	_
)	_	_
,	_	_
we	_	_
introduced	_	_
the	_	_
study	_	_
of	_	_
dependence	_	_
clusters	_	_
in	_	_
terms	_	_
of	_	_
program	_	_
slicing	_	_
and	_	_
demonstrated	_	_
that	_	_
large	_	_
dependence	_	_
clusters	_	_
were	_	_
(	_	_
perhaps	_	_
surprisingly	_	_
)	_	_
common	_	_
,	_	_
both	_	_
in	_	_
production	_	_
(	_	_
closed	_	_
source	_	_
)	_	_
code	_	_
and	_	_
in	_	_
open	_	_
source	_	_
code	_	_
(	_	_
Harman	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
)	_	_
.	_	_

#23
Our	_	_
findings	_	_
over	_	_
a	_	_
large	_	_
corpus	_	_
of	_	_
C	_	_
code	_	_
was	_	_
that	_	_
89	_	_
%	_	_
of	_	_
the	_	_
programs	_	_
studied	_	_
contained	_	_
at	_	_
least	_	_
one	_	_
dependence	_	_
cluster	_	_
composed	_	_
of	_	_
10	_	_
%	_	_
or	_	_
more	_	_
of	_	_
the	_	_
program	_	_
's	_	_
statements	_	_
.	_	_

#24
The	_	_
average	_	_
size	_	_
of	_	_
the	_	_
programs	_	_
studied	_	_
was	_	_
20KLoC	_	_
,	_	_
so	_	_
these	_	_
clusters	_	_
of	_	_
more	_	_
than	_	_
10	_	_
%	_	_
denoted	_	_
significant	_	_
portions	_	_
of	_	_
code	_	_
.	_	_

#25
We	_	_
also	_	_
found	_	_
evidence	_	_
of	_	_
super-large	_	_
clusters	_	_
:	_	_
40	_	_
%	_	_
of	_	_
the	_	_
programs	_	_
had	_	_
a	_	_
dependence	_	_
cluster	_	_
that	_	_
consumed	_	_
over	_	_
half	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#26
More	_	_
recently	_	_
,	_	_
our	_	_
finding	_	_
that	_	_
large	_	_
clusters	_	_
are	_	_
widespread	_	_
in	_	_
C	_	_
systems	_	_
has	_	_
been	_	_
replicated	_	_
for	_	_
other	_	_
languages	_	_
and	_	_
systems	_	_
by	_	_
other	_	_
authors	_	_
,	_	_
both	_	_
in	_	_
open	_	_
source	_	_
and	_	_
in	_	_
proprietary	_	_
code	_	_
(	_	_
Acharya	_	_
and	_	_
Robinson	_	_
,	_	_
2011	_	_
;	_	_
Beszédes	_	_
et	_	_
al.	_	_
,	_	_
2007	_	_
;	_	_
Szegedi	_	_
et	_	_
al.	_	_
,	_	_
2007	_	_
)	_	_
.	_	_

#27
Large	_	_
dependence	_	_
clusters	_	_
were	_	_
also	_	_
found	_	_
in	_	_
Java	_	_
systems	_	_
(	_	_
Beszédes	_	_
et	_	_
al.	_	_
,	_	_
2007	_	_
;	_	_
Savernik	_	_
,	_	_
2007	_	_
;	_	_
Szegedi	_	_
et	_	_
al.	_	_
,	_	_
2007	_	_
)	_	_
and	_	_
in	_	_
legacy	_	_
Cobol	_	_
systems	_	_
(	_	_
Hajnal	_	_
and	_	_
Forgács	_	_
,	_	_
2011	_	_
)	_	_
.	_	_

#28
There	_	_
has	_	_
been	_	_
interesting	_	_
work	_	_
on	_	_
the	_	_
relationship	_	_
between	_	_
faults	_	_
,	_	_
program	_	_
size	_	_
,	_	_
and	_	_
dependence	_	_
clusters	_	_
(	_	_
Black	_	_
et	_	_
al.	_	_
,	_	_
2006	_	_
)	_	_
,	_	_
and	_	_
between	_	_
impact	_	_
analysis	_	_
and	_	_
dependence	_	_
clusters	_	_
(	_	_
Acharya	_	_
and	_	_
Robinson	_	_
,	_	_
2011	_	_
;	_	_
Harman	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
)	_	_
.	_	_

#29
Large	_	_
dependence	_	_
clusters	_	_
can	capability	_
be	_	_
thought	_	_
of	_	_
as	_	_
dependence	_	_
'anti-patterns	_	_
'	_	_
because	_	_
of	_	_
the	_	_
high	_	_
impact	_	_
that	_	_
a	_	_
change	_	_
anywhere	_	_
in	_	_
the	_	_
cluster	_	_
has	_	_
.	_	_

#30
For	_	_
example	_	_
,	_	_
it	_	_
may	options	_
lead	_	_
to	_	_
problems	_	_
for	_	_
on-going	_	_
software	_	_
maintenance	_	_
and	_	_
evolution	_	_
(	_	_
Acharya	_	_
and	_	_
Robinson	_	_
,	_	_
2011	_	_
;	_	_
Binkley	_	_
et	_	_
al.	_	_
,	_	_
2008	_	_
;	_	_
Savernik	_	_
,	_	_
2007	_	_
)	_	_
.	_	_

#31
As	_	_
a	_	_
result	_	_
,	_	_
refactoring	_	_
has	_	_
been	_	_
proposed	_	_
as	_	_
a	_	_
technique	_	_
for	_	_
breaking	_	_
larger	_	_
clusters	_	_
of	_	_
dependence	_	_
into	_	_
smaller	_	_
clusters	_	_
(	_	_
Binkley	_	_
and	_	_
Harman	_	_
,	_	_
2005	_	_
;	_	_
Black	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
)	_	_
.	_	_

#32
Dependence	_	_
cluster	_	_
analysis	_	_
is	_	_
complicated	_	_
by	_	_
the	_	_
fact	_	_
that	_	_
inter-procedural	_	_
program	_	_
dependence	_	_
is	_	_
non-transitive	_	_
,	_	_
which	_	_
means	_	_
that	_	_
the	_	_
statements	_	_
in	_	_
a	_	_
traditional	_	_
dependence	_	_
cluster	_	_
,	_	_
though	_	_
they	_	_
all	_	_
depend	_	_
on	_	_
each	_	_
other	_	_
,	_	_
may	options	negation
not	_	_
each	_	_
depend	_	_
on	_	_
the	_	_
same	_	_
set	_	_
of	_	_
statements	_	_
,	_	_
nor	_	_
need	_	_
they	_	_
necessarily	_	_
affect	_	_
the	_	_
same	_	_
set	_	_
of	_	_
statements	_	_
external	_	_
to	_	_
the	_	_
cluster	_	_
.	_	_

#33
This	_	_
paper	_	_
introduces	_	_
and	_	_
empirically	_	_
studies11	_	_
Preliminary	_	_
results	_	_
were	_	_
presented	_	_
at	_	_
PASTE	_	_
(	_	_
Islam	_	_
et	_	_
al.	_	_
,	_	_
2010b	_	_
)	_	_
.	_	_

#34
coherent	_	_
dependence	_	_
clusters	_	_
.	_	_

#35
In	_	_
a	_	_
coherent	_	_
dependence	_	_
cluster	_	_
all	_	_
statements	_	_
share	_	_
identical	_	_
intra-cluster	_	_
and	_	_
extra-cluster	_	_
dependence	_	_
.	_	_

#36
A	_	_
coherent	_	_
dependence	_	_
cluster	_	_
is	_	_
thus	_	_
more	_	_
constrained	_	_
than	_	_
a	_	_
general	_	_
dependence	_	_
cluster	_	_
.	_	_

#37
A	_	_
coherent	_	_
dependence	_	_
cluster	_	_
retains	_	_
the	_	_
essential	_	_
property	_	_
that	_	_
all	_	_
statements	_	_
within	_	_
the	_	_
cluster	_	_
are	_	_
mutually	_	_
dependent	_	_
,	_	_
but	_	_
adds	_	_
the	_	_
constraint	_	_
that	_	_
all	_	_
incoming	_	_
dependence	_	_
must	deontic	_
be	_	_
identical	_	_
and	_	_
all	_	_
outgoing	_	_
dependence	_	_
must	deontic	_
also	_	_
be	_	_
identical	_	_
.	_	_

#38
That	_	_
is	_	_
,	_	_
all	_	_
statements	_	_
within	_	_
a	_	_
coherent	_	_
cluster	_	_
depend	_	_
upon	_	_
the	_	_
same	_	_
set	_	_
of	_	_
statements	_	_
outside	_	_
the	_	_
cluster	_	_
and	_	_
all	_	_
statements	_	_
within	_	_
a	_	_
coherent	_	_
cluster	_	_
affect	_	_
the	_	_
same	_	_
set	_	_
of	_	_
statements	_	_
outside	_	_
the	_	_
cluster	_	_
.	_	_

#39
This	_	_
means	_	_
that	_	_
,	_	_
when	_	_
studying	_	_
a	_	_
coherent	_	_
cluster	_	_
,	_	_
we	_	_
need	_	_
to	_	_
understand	_	_
only	_	_
a	_	_
single	_	_
external	_	_
dependence	_	_
context	_	_
in	_	_
order	_	_
to	_	_
understand	_	_
the	_	_
behavior	_	_
of	_	_
the	_	_
entire	_	_
cluster	_	_
.	_	_

#40
For	_	_
a	_	_
dependence	_	_
cluster	_	_
that	_	_
fails	_	_
to	_	_
meet	_	_
the	_	_
external	_	_
constraint	_	_
,	_	_
statements	_	_
of	_	_
the	_	_
cluster	_	_
may	options	_
have	_	_
a	_	_
different	_	_
external	_	_
dependence	_	_
context	_	_
.	_	_

#41
This	_	_
is	_	_
possible	_	_
because	_	_
inter-procedural	_	_
dependence	_	_
is	_	_
non-transitive	_	_
.	_	_

#42
It	_	_
might	speculation	_
be	_	_
thought	_	_
that	_	_
very	_	_
few	_	_
sets	_	_
of	_	_
statements	_	_
would	_	_
meet	_	_
these	_	_
additional	_	_
coherence	_	_
constraints	_	_
,	_	_
or	_	_
that	_	_
,	_	_
where	_	_
such	_	_
sets	_	_
of	_	_
statements	_	_
do	_	_
meet	_	_
the	_	_
constraints	_	_
,	_	_
there	_	_
would	_	_
be	_	_
relatively	_	_
few	_	_
statements	_	_
in	_	_
the	_	_
coherent	_	_
cluster	_	_
so-formed	_	_
.	_	_

#43
Our	_	_
empirical	_	_
findings	_	_
provide	_	_
evidence	_	_
that	_	_
this	_	_
is	_	_
not	_	_
the	_	_
case	_	_
:	_	_
coherent	_	_
dependence	_	_
clusters	_	_
are	_	_
common	_	_
and	_	_
they	_	_
can	options	_
be	_	_
very	_	_
large	_	_
.	_	_

#44
This	_	_
paper	_	_
is	_	_
part	_	_
of	_	_
a	_	_
series	_	_
of	_	_
work	_	_
that	_	_
we	_	_
have	_	_
conducted	_	_
in	_	_
the	_	_
area	_	_
of	_	_
dependence	_	_
clusters	_	_
.	_	_

#45
The	_	_
overarching	_	_
motivation	_	_
for	_	_
this	_	_
work	_	_
is	_	_
to	_	_
gain	_	_
a	_	_
better	_	_
understanding	_	_
of	_	_
the	_	_
dependence	_	_
clusters	_	_
found	_	_
in	_	_
programs	_	_
.	_	_

#46
Although	_	_
this	_	_
paper	_	_
is	_	_
a	_	_
continuation	_	_
of	_	_
our	_	_
previous	_	_
work	_	_
on	_	_
dependence	_	_
clusters	_	_
,	_	_
we	_	_
present	_	_
the	_	_
work	_	_
in	_	_
a	_	_
completely	_	_
new	_	_
light	_	_
.	_	_

#47
In	_	_
this	_	_
paper	_	_
we	_	_
show	_	_
that	_	_
the	_	_
specialized	_	_
version	_	_
of	_	_
dependence	_	_
clusters	_	_
,	_	_
coherent	_	_
clusters	_	_
are	_	_
found	_	_
in	_	_
abundance	_	_
in	_	_
programs	_	_
and	_	_
need	_	_
not	_	_
be	_	_
regarded	_	_
as	_	_
problems	_	_
.	_	_

#48
We	_	_
rather	_	_
show	_	_
that	_	_
these	_	_
clusters	_	_
map	_	_
to	_	_
logical	_	_
program	_	_
structures	_	_
which	_	_
will	_	_
aid	_	_
developers	_	_
in	_	_
program	_	_
comprehension	_	_
and	_	_
understanding	_	_
.	_	_

#49
Furthermore	_	_
,	_	_
this	_	_
paper	_	_
extends	_	_
the	_	_
current	_	_
knowledge	_	_
in	_	_
the	_	_
area	_	_
and	_	_
motivates	_	_
future	_	_
work	_	_
by	_	_
presenting	_	_
initial	_	_
results	_	_
of	_	_
inter-cluster	_	_
dependence	_	_
which	_	_
can	capability-feasibility	_
be	_	_
used	_	_
as	_	_
a	_	_
foundation	_	_
for	_	_
reverse	_	_
engineering	_	_
.	_	_

#50
We	_	_
answer	_	_
several	_	_
representative	_	_
open	_	_
questions	_	_
such	_	_
as	_	_
whether	_	_
clusters	_	_
are	_	_
related	_	_
to	_	_
program	_	_
faults	_	_
and	_	_
how	_	_
clusters	_	_
change	_	_
over	_	_
time	_	_
during	_	_
system	_	_
evolution	_	_
.	_	_

#51
The	_	_
primary	_	_
contributions	_	_
of	_	_
the	_	_
paper	_	_
are	_	_
as	_	_
follows:1	_	_
An	_	_
Empirical	_	_
analysis	_	_
of	_	_
thirty	_	_
programs	_	_
assesses	_	_
the	_	_
frequency	_	_
and	_	_
size	_	_
of	_	_
coherent	_	_
dependence	_	_
clusters	_	_
.	_	_

#52
The	_	_
results	_	_
demonstrate	_	_
that	_	_
large	_	_
coherent	_	_
clusters	_	_
are	_	_
common	_	_
,	_	_
validating	_	_
their	_	_
further	_	_
study	_	_
.	_	_

#53
2	_	_
Two	_	_
further	_	_
empirical	_	_
validation	_	_
studies	_	_
consider	_	_
the	_	_
impact	_	_
of	_	_
data-flow	_	_
analysis	_	_
precision	_	_
and	_	_
the	_	_
precision	_	_
of	_	_
the	_	_
approximation	_	_
used	_	_
to	_	_
efficiently	_	_
identify	_	_
coherent	_	_
clusters	_	_
.	_	_

#54
3	_	_
A	_	_
series	_	_
of	_	_
four	_	_
case	_	_
studies	_	_
shows	_	_
how	_	_
coherent	_	_
clusters	_	_
map	_	_
to	_	_
logical	_	_
program	_	_
structures	_	_
.	_	_

#55
4	_	_
A	_	_
study	_	_
of	_	_
inter-cluster	_	_
dependence	_	_
highlights	_	_
how	_	_
coherent	_	_
clusters	_	_
form	_	_
the	_	_
building	_	_
blocks	_	_
of	_	_
larger	_	_
dependence	_	_
structures	_	_
where	_	_
identification	_	_
can	capability	_
support	_	_
,	_	_
as	_	_
an	_	_
example	_	_
,	_	_
reverse	_	_
engineering	_	_
.	_	_

#56
5	_	_
A	_	_
study	_	_
of	_	_
bug	_	_
fixes	_	_
finds	_	_
no	_	_
relationship	_	_
between	_	_
program	_	_
faults	_	_
and	_	_
coherent	_	_
clusters	_	_
implying	_	_
that	_	_
dependence	_	_
clusters	_	_
are	_	_
not	_	_
responsible	_	_
for	_	_
program	_	_
faults	_	_
.	_	_

#57
6	_	_
A	_	_
longitudinal	_	_
study	_	_
of	_	_
system	_	_
evolution	_	_
shows	_	_
that	_	_
coherent	_	_
clusters	_	_
remain	_	_
stable	_	_
during	_	_
evolution	_	_
thus	_	_
depicting	_	_
the	_	_
core	_	_
architecture	_	_
of	_	_
systems	_	_
.	_	_

#58
The	_	_
remainder	_	_
of	_	_
this	_	_
paper	_	_
is	_	_
organized	_	_
as	_	_
follows	_	_
:	_	_
Section	_	_
2	_	_
provides	_	_
background	_	_
on	_	_
coherent	_	_
clusters	_	_
and	_	_
their	_	_
visualization	_	_
.	_	_

#59
Section	_	_
3	_	_
provides	_	_
details	_	_
on	_	_
the	_	_
subject	_	_
programs	_	_
,	_	_
the	_	_
validation	_	_
of	_	_
the	_	_
slice	_	_
approximation	_	_
used	_	_
,	_	_
and	_	_
the	_	_
experimental	_	_
setup	_	_
.	_	_

#60
This	_	_
is	_	_
followed	_	_
by	_	_
quantitative	_	_
and	_	_
qualitative	_	_
studies	_	_
into	_	_
the	_	_
existence	_	_
and	_	_
impact	_	_
of	_	_
coherent	_	_
dependence	_	_
clusters	_	_
and	_	_
the	_	_
inter-cluster	_	_
dependence	_	_
study	_	_
.	_	_

#61
It	_	_
also	_	_
includes	_	_
studies	_	_
on	_	_
program	_	_
faults	_	_
and	_	_
system	_	_
evolution	_	_
and	_	_
their	_	_
relationship	_	_
to	_	_
coherent	_	_
clusters	_	_
.	_	_

#62
Section	_	_
4	_	_
considers	_	_
related	_	_
work	_	_
and	_	_
finally	_	_
,	_	_
Section	_	_
5	_	_
summarizes	_	_
the	_	_
work	_	_
presented	_	_
.	_	_

#63
Background	_	_
This	_	_
section	_	_
provides	_	_
background	_	_
on	_	_
dependence	_	_
clusters	_	_
.	_	_

#64
It	_	_
first	_	_
presents	_	_
a	_	_
sequence	_	_
of	_	_
definitions	_	_
that	_	_
culminate	_	_
in	_	_
the	_	_
definition	_	_
for	_	_
a	_	_
coherent	_	_
dependence	_	_
cluster	_	_
.	_	_

#65
Previous	_	_
work	_	_
(	_	_
Binkley	_	_
and	_	_
Harman	_	_
,	_	_
2005	_	_
;	_	_
Harman	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
)	_	_
has	_	_
used	_	_
the	_	_
term	_	_
dependence	_	_
cluster	_	_
for	_	_
a	_	_
particular	_	_
kind	_	_
of	_	_
cluster	_	_
,	_	_
termed	_	_
a	_	_
mutually-dependent	_	_
cluster	_	_
herein	_	_
to	_	_
emphasize	_	_
that	_	_
such	_	_
clusters	_	_
consider	_	_
only	_	_
mutual	_	_
dependence	_	_
internal	_	_
to	_	_
the	_	_
cluster	_	_
.	_	_

#66
This	_	_
distinction	_	_
allows	_	_
the	_	_
definition	_	_
to	_	_
be	_	_
extended	_	_
to	_	_
incorporate	_	_
external	_	_
dependence	_	_
.	_	_

#67
The	_	_
section	_	_
also	_	_
reviews	_	_
the	_	_
current	_	_
graph-based	_	_
visualizations	_	_
for	_	_
dependence	_	_
clusters	_	_
.	_	_

#68
Dependence	_	_
clusters	_	_
Informally	_	_
,	_	_
mutually-dependent	_	_
clusters	_	_
are	_	_
maximal	_	_
sets	_	_
of	_	_
program	_	_
statements	_	_
that	_	_
mutually	_	_
depend	_	_
upon	_	_
one	_	_
another	_	_
(	_	_
Harman	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
)	_	_
.	_	_

#69
They	_	_
are	_	_
formalized	_	_
in	_	_
terms	_	_
of	_	_
mutually	_	_
dependent	_	_
sets	_	_
in	_	_
the	_	_
following	_	_
definition	_	_
.	_	_

#70
Definition	_	_
2.1	_	_
Mutually-dependent	_	_
set	_	_
and	_	_
cluster	_	_
(	_	_
Harman	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
)	_	_
A	_	_
mutually-dependent	_	_
set	_	_
(	_	_
MDS	_	_
)	_	_
is	_	_
a	_	_
set	_	_
of	_	_
statements	_	_
,	_	_
S	_	_
,	_	_
such	_	_
that	_	_
∀x	_	_
,	_	_
y∈S	_	_
:	_	_
x	_	_
depends	_	_
on	_	_
y.	_	_
A	_	_
mutually-dependent	_	_
cluster	_	_
is	_	_
a	_	_
maximal	_	_
MDS	_	_
;	_	_
thus	_	_
,	_	_
it	_	_
is	_	_
an	_	_
MDS	_	_
not	_	_
properly	_	_
contained	_	_
within	_	_
another	_	_
MDS	_	_
.	_	_

#71
The	_	_
definition	_	_
of	_	_
an	_	_
MDS	_	_
is	_	_
parameterized	_	_
by	_	_
an	_	_
underlying	_	_
depends-on	_	_
relation	_	_
.	_	_

#72
Ideally	_	_
,	_	_
such	_	_
a	_	_
relation	_	_
would	_	_
precisely	_	_
capture	_	_
the	_	_
impact	_	_
,	_	_
influence	_	_
,	_	_
and	_	_
dependence	_	_
between	_	_
statements	_	_
.	_	_

#73
Unfortunately	_	_
,	_	_
such	_	_
a	_	_
relation	_	_
is	_	_
not	_	_
computable	_	_
(	_	_
Weiser	_	_
,	_	_
1984	_	_
)	_	_
.	_	_

#74
A	_	_
well	_	_
known	_	_
approximation	_	_
is	_	_
based	_	_
on	_	_
Weiser	_	_
's	_	_
program	_	_
slice	_	_
(	_	_
Weiser	_	_
,	_	_
1984	_	_
)	_	_
:	_	_
a	_	_
slice	_	_
is	_	_
the	_	_
set	_	_
of	_	_
program	_	_
statements	_	_
that	_	_
affect	_	_
the	_	_
values	_	_
computed	_	_
at	_	_
a	_	_
particular	_	_
statement	_	_
of	_	_
interest	_	_
(	_	_
referred	_	_
to	_	_
as	_	_
a	_	_
slicing	_	_
criterion	_	_
)	_	_
.	_	_

#75
While	_	_
its	_	_
computation	_	_
is	_	_
undecidable	_	_
,	_	_
a	_	_
minimal	_	_
(	_	_
or	_	_
precise	_	_
)	_	_
slice	_	_
includes	_	_
exactly	_	_
those	_	_
program	_	_
elements	_	_
that	_	_
affect	_	_
the	_	_
criterion	_	_
and	_	_
thus	_	_
can	capability-feasibility	_
be	_	_
used	_	_
to	_	_
define	_	_
an	_	_
MDS	_	_
in	_	_
which	_	_
t	_	_
depends	_	_
on	_	_
s	_	_
iff	_	_
s	_	_
is	_	_
in	_	_
the	_	_
minimal	_	_
slice	_	_
taken	_	_
with	_	_
respect	_	_
to	_	_
slicing	_	_
criterion	_	_
t.	_	_
The	_	_
slice-based	_	_
definition	_	_
is	_	_
useful	_	_
because	_	_
algorithms	_	_
to	_	_
compute	_	_
approximations	_	_
to	_	_
minimal	_	_
slices	_	_
can	capability-feasibility	_
be	_	_
used	_	_
to	_	_
define	_	_
and	_	_
compute	_	_
approximations	_	_
to	_	_
mutually-dependent	_	_
clusters	_	_
.	_	_

#76
One	_	_
such	_	_
algorithm	_	_
computes	_	_
a	_	_
slice	_	_
as	_	_
the	_	_
solution	_	_
to	_	_
a	_	_
reachability	_	_
problem	_	_
over	_	_
a	_	_
program	_	_
's	_	_
System	_	_
Dependence	_	_
Graph	_	_
(	_	_
SDG	_	_
)	_	_
(	_	_
Horwitz	_	_
et	_	_
al.	_	_
,	_	_
1990	_	_
)	_	_
.	_	_

#77
An	_	_
SDG	_	_
is	_	_
comprised	_	_
of	_	_
vertices	_	_
,	_	_
which	_	_
essentially	_	_
represent	_	_
the	_	_
statements	_	_
of	_	_
the	_	_
program	_	_
and	_	_
two	_	_
kinds	_	_
of	_	_
edges	_	_
:	_	_
data	_	_
dependence	_	_
edges	_	_
and	_	_
control	_	_
dependence	_	_
edges	_	_
.	_	_

#78
A	_	_
data	_	_
dependence	_	_
connects	_	_
a	_	_
definition	_	_
of	_	_
a	_	_
variable	_	_
with	_	_
each	_	_
use	_	_
of	_	_
the	_	_
variable	_	_
reached	_	_
by	_	_
the	_	_
definition	_	_
(	_	_
Ferrante	_	_
et	_	_
al.	_	_
,	_	_
1987	_	_
)	_	_
.	_	_

#79
Control	_	_
dependence	_	_
connects	_	_
a	_	_
predicate	_	_
p	_	_
to	_	_
a	_	_
vertex	_	_
v	_	_
when	_	_
p	_	_
has	_	_
at	_	_
least	_	_
two	_	_
control-flow-graph	_	_
successors	_	_
,	_	_
one	_	_
of	_	_
which	_	_
can	options	_
lead	_	_
to	_	_
the	_	_
exit	_	_
vertex	_	_
without	_	_
encountering	_	_
v	_	_
and	_	_
the	_	_
other	_	_
always	_	_
leads	_	_
eventually	_	_
to	_	_
v	_	_
(	_	_
Ferrante	_	_
et	_	_
al.	_	_
,	_	_
1987	_	_
)	_	_
.	_	_

#80
Thus	_	_
p	_	_
controls	_	_
the	_	_
possible	_	_
future	_	_
execution	_	_
of	_	_
v.	_	_
For	_	_
structured	_	_
code	_	_
,	_	_
control	_	_
dependence	_	_
reflects	_	_
the	_	_
nesting	_	_
structure	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#81
When	_	_
slicing	_	_
an	_	_
SDG	_	_
,	_	_
a	_	_
slicing	_	_
criterion	_	_
is	_	_
a	_	_
vertex	_	_
from	_	_
the	_	_
SDG	_	_
.	_	_

#82
A	_	_
naïve	_	_
definition	_	_
of	_	_
a	_	_
dependence	_	_
cluster	_	_
would	_	_
be	_	_
based	_	_
on	_	_
the	_	_
transitive	_	_
closure	_	_
of	_	_
the	_	_
dependence	_	_
relation	_	_
and	_	_
thus	_	_
would	_	_
define	_	_
a	_	_
cluster	_	_
to	_	_
be	_	_
a	_	_
strongly	_	_
connected	_	_
component	_	_
.	_	_

#83
Unfortunately	_	_
,	_	_
for	_	_
certain	_	_
language	_	_
features	_	_
,	_	_
dependence	_	_
is	_	_
non-transitive	_	_
.	_	_

#84
Examples	_	_
of	_	_
such	_	_
features	_	_
include	_	_
procedures	_	_
(	_	_
Horwitz	_	_
et	_	_
al.	_	_
,	_	_
1990	_	_
)	_	_
and	_	_
threads	_	_
(	_	_
Krinke	_	_
,	_	_
1998	_	_
)	_	_
.	_	_

#85
Thus	_	_
,	_	_
in	_	_
the	_	_
presence	_	_
of	_	_
these	_	_
features	_	_
,	_	_
strongly	_	_
connected	_	_
components	_	_
overstate	_	_
the	_	_
size	_	_
and	_	_
number	_	_
of	_	_
dependence	_	_
clusters	_	_
.	_	_

#86
Fortunately	_	_
,	_	_
context-sensitive	_	_
slicing	_	_
captures	_	_
the	_	_
necessary	_	_
context	_	_
information	_	_
(	_	_
Binkley	_	_
and	_	_
Harman	_	_
,	_	_
2005	_	_
,	_	_
2003	_	_
;	_	_
Horwitz	_	_
et	_	_
al.	_	_
,	_	_
1990	_	_
;	_	_
Krinke	_	_
,	_	_
2002	_	_
,	_	_
2003	_	_
)	_	_
.	_	_

#87
Two	_	_
kinds	_	_
of	_	_
SDG	_	_
slices	_	_
are	_	_
used	_	_
in	_	_
this	_	_
paper	_	_
:	_	_
backward	_	_
slices	_	_
and	_	_
forward	_	_
slices	_	_
(	_	_
Horwitz	_	_
et	_	_
al.	_	_
,	_	_
1990	_	_
;	_	_
Ottenstein	_	_
and	_	_
Ottenstein	_	_
,	_	_
1984	_	_
)	_	_
.	_	_

#88
The	_	_
backward	_	_
slice	_	_
taken	_	_
with	_	_
respect	_	_
to	_	_
vertex	_	_
v	_	_
,	_	_
denoted	_	_
BSlice	_	_
(	_	_
v	_	_
)	_	_
,	_	_
is	_	_
the	_	_
set	_	_
of	_	_
vertices	_	_
reaching	_	_
v	_	_
via	_	_
a	_	_
path	_	_
of	_	_
control	_	_
and	_	_
data	_	_
dependence	_	_
edges	_	_
where	_	_
this	_	_
path	_	_
respects	_	_
context	_	_
.	_	_

#89
The	_	_
forward	_	_
slice	_	_
,	_	_
taken	_	_
with	_	_
respect	_	_
to	_	_
vertex	_	_
v	_	_
,	_	_
denoted	_	_
FSlice	_	_
(	_	_
v	_	_
)	_	_
,	_	_
is	_	_
the	_	_
set	_	_
of	_	_
vertices	_	_
reachable	_	_
from	_	_
v	_	_
via	_	_
a	_	_
path	_	_
of	_	_
control	_	_
and	_	_
data	_	_
dependence	_	_
edges	_	_
where	_	_
this	_	_
path	_	_
respects	_	_
context	_	_
.	_	_

#90
The	_	_
program	_	_
P	_	_
shown	_	_
in	_	_
Fig	_	_
.	_	_
1	_	_
illustrates	_	_
the	_	_
non-transitivity	_	_
of	_	_
slice	_	_
inclusion	_	_
.	_	_

#91
The	_	_
program	_	_
has	_	_
six	_	_
assignment	_	_
statements	_	_
(	_	_
assigning	_	_
the	_	_
variables	_	_
a	_	_
,	_	_
b	_	_
,	_	_
c	_	_
,	_	_
d	_	_
,	_	_
e	_	_
and	_	_
f	_	_
)	_	_
whose	_	_
dependencies	_	_
are	_	_
shown	_	_
in	_	_
columns	_	_
1-6	_	_
as	_	_
backward	_	_
slice	_	_
inclusion	_	_
.	_	_

#92
Backward	_	_
slice	_	_
inclusion	_	_
contains	_	_
statements	_	_
that	_	_
affect	_	_
the	_	_
slicing	_	_
criterion	_	_
through	_	_
data	_	_
and	_	_
control	_	_
dependence	_	_
.	_	_

#93
The	_	_
dependence	_	_
relationship	_	_
between	_	_
these	_	_
statements	_	_
is	_	_
also	_	_
extracted	_	_
and	_	_
shown	_	_
in	_	_
Fig	_	_
.	_	_
2	_	_
using	_	_
a	_	_
directed	_	_
graph	_	_
where	_	_
the	_	_
nodes	_	_
of	_	_
the	_	_
graph	_	_
represent	_	_
the	_	_
assignment	_	_
statements	_	_
and	_	_
the	_	_
edges	_	_
represent	_	_
the	_	_
backward	_	_
slice	_	_
inclusion	_	_
relationship	_	_
from	_	_
Fig	_	_
.	_	_
1	_	_
.	_	_

#94
The	_	_
table	_	_
on	_	_
the	_	_
right	_	_
in	_	_
Fig	_	_
.	_	_
2	_	_
also	_	_
gives	_	_
the	_	_
forward	_	_
slice	_	_
inclusions	_	_
for	_	_
the	_	_
statements	_	_
.	_	_

#95
All	_	_
other	_	_
statements	_	_
in	_	_
P	_	_
,	_	_
which	_	_
do	_	_
not	_	_
define	_	_
a	_	_
variable	_	_
,	_	_
are	_	_
ignored	_	_
.	_	_

#96
In	_	_
the	_	_
diagram	_	_
,	_	_
x	_	_
depends	_	_
on	_	_
y	_	_
(	_	_
y	_	_
∈	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
)	_	_
is	_	_
represented	_	_
by	_	_
y	_	_
→	_	_
x.	_	_
The	_	_
diagram	_	_
shows	_	_
two	_	_
instances	_	_
of	_	_
dependence	_	_
intransitivity	_	_
in	_	_
P.	_	_
Although	_	_
b	_	_
depends	_	_
on	_	_
nodes	_	_
a	_	_
,	_	_
c	_	_
,	_	_
and	_	_
d	_	_
,	_	_
node	_	_
f	_	_
,	_	_
which	_	_
depends	_	_
on	_	_
b	_	_
,	_	_
does	_	_
not	_	_
depend	_	_
on	_	_
a	_	_
,	_	_
c	_	_
,	_	_
or	_	_
d.	_	_
Similarly	_	_
,	_	_
d	_	_
depends	_	_
on	_	_
e	_	_
but	_	_
a	_	_
,	_	_
b	_	_
,	_	_
and	_	_
c	_	_
,	_	_
which	_	_
depend	_	_
on	_	_
d	_	_
do	_	_
not	_	_
depend	_	_
on	_	_
e.	_	_
Slice-based	_	_
clusters	_	_
A	_	_
slice-based	_	_
cluster	_	_
is	_	_
a	_	_
maximal	_	_
set	_	_
of	_	_
vertices	_	_
included	_	_
in	_	_
each	_	_
other	_	_
's	_	_
slice	_	_
.	_	_

#97
The	_	_
following	_	_
definition	_	_
essentially	_	_
instantiates	_	_
Definition	_	_
2.1	_	_
using	_	_
BSlice	_	_
.	_	_

#98
Because	_	_
x∈BSlice	_	_
(	_	_
y	_	_
)	_	_
⇔y∈FSlice	_	_
(	_	_
x	_	_
)	_	_
the	_	_
dual	_	_
of	_	_
this	_	_
definition	_	_
using	_	_
FSlice	_	_
is	_	_
equivalent	_	_
.	_	_

#99
Where	_	_
such	_	_
a	_	_
duality	_	_
does	_	_
not	_	_
hold	_	_
,	_	_
both	_	_
definitions	_	_
are	_	_
given	_	_
.	_	_

#100
When	_	_
it	_	_
is	_	_
important	_	_
to	_	_
differentiate	_	_
between	_	_
the	_	_
two	_	_
,	_	_
the	_	_
terms	_	_
backward	_	_
and	_	_
forward	_	_
will	_	_
be	_	_
added	_	_
to	_	_
the	_	_
definition	_	_
's	_	_
name	_	_
as	_	_
is	_	_
done	_	_
in	_	_
this	_	_
section	_	_
.	_	_

#101
Definition	_	_
2.2	_	_
Backward-slice	_	_
MDS	_	_
and	_	_
cluster	_	_
(	_	_
Harman	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
)	_	_
A	_	_
backward-slice	_	_
MDS	_	_
is	_	_
a	_	_
set	_	_
of	_	_
SDG	_	_
vertices	_	_
,	_	_
V	_	_
,	_	_
such	_	_
that	_	_
∀x	_	_
,	_	_
y∈V	_	_
:	_	_
x∈BSlice	_	_
(	_	_
y	_	_
)	_	_
.	_	_

#102
A	_	_
backward-slice	_	_
cluster	_	_
is	_	_
a	_	_
backward-slice	_	_
MDS	_	_
contained	_	_
within	_	_
no	_	_
other	_	_
backward-slice	_	_
MDS	_	_
.	_	_

#103
Note	_	_
that	_	_
as	_	_
x	_	_
and	_	_
y	_	_
are	_	_
interchangeable	_	_
,	_	_
this	_	_
is	_	_
equivalent	_	_
to	_	_
∀x	_	_
,	_	_
y∈V	_	_
:	_	_
x∈BSlice	_	_
(	_	_
y	_	_
)	_	_
∧y∈BSlice	_	_
(	_	_
x	_	_
)	_	_
.	_	_

#104
Thus	_	_
,	_	_
any	_	_
unordered	_	_
pair	_	_
(	_	_
x	_	_
,	_	_
y	_	_
)	_	_
with	_	_
x∈BSlice	_	_
(	_	_
y	_	_
)	_	_
∧y∈BSlice	_	_
(	_	_
x	_	_
)	_	_
creates	_	_
an	_	_
edge	_	_
(	_	_
x	_	_
,	_	_
y	_	_
)	_	_
in	_	_
an	_	_
undirected	_	_
graph	_	_
in	_	_
which	_	_
a	_	_
complete	_	_
subgraph	_	_
is	_	_
equivalent	_	_
to	_	_
a	_	_
backward-slice	_	_
MDS	_	_
and	_	_
a	_	_
backward-slice	_	_
cluster	_	_
is	_	_
equivalent	_	_
to	_	_
a	_	_
maximal	_	_
clique	_	_
.	_	_

#105
Therefore	_	_
,	_	_
the	_	_
clustering	_	_
problem	_	_
is	_	_
the	_	_
NP-Hard	_	_
maximal	_	_
cliques	_	_
problem	_	_
(	_	_
Bomze	_	_
et	_	_
al.	_	_
,	_	_
1999	_	_
)	_	_
making	_	_
Definition	_	_
2.2	_	_
prohibitively	_	_
expensive	_	_
to	_	_
implement	_	_
.	_	_

#106
In	_	_
the	_	_
example	_	_
shown	_	_
in	_	_
Fig	_	_
.	_	_
2	_	_
,	_	_
the	_	_
vertices	_	_
representing	_	_
the	_	_
assignments	_	_
to	_	_
a	_	_
,	_	_
b	_	_
,	_	_
c	_	_
and	_	_
d	_	_
are	_	_
all	_	_
in	_	_
each	_	_
others	_	_
backward	_	_
slices	_	_
and	_	_
hence	_	_
satisfy	_	_
the	_	_
definition	_	_
of	_	_
a	_	_
backward-slice	_	_
cluster	_	_
.	_	_

#107
These	_	_
vertices	_	_
also	_	_
satisfy	_	_
the	_	_
definition	_	_
of	_	_
a	_	_
forward-slice	_	_
cluster	_	_
as	_	_
they	_	_
are	_	_
also	_	_
in	_	_
each	_	_
others	_	_
forward	_	_
slices	_	_
.	_	_

#108
As	_	_
dependence	_	_
is	_	_
not	_	_
transitive	_	_
,	_	_
a	_	_
statement	_	_
can	deontic-options	_
be	_	_
in	_	_
multiple	_	_
slice-based	_	_
clusters	_	_
.	_	_

#109
For	_	_
example	_	_
,	_	_
in	_	_
Fig	_	_
.	_	_
2	_	_
the	_	_
statements	_	_
d	_	_
and	_	_
e	_	_
are	_	_
mutually	_	_
dependent	_	_
upon	_	_
each	_	_
other	_	_
and	_	_
thus	_	_
satisfy	_	_
the	_	_
definition	_	_
of	_	_
a	_	_
slice-based	_	_
cluster	_	_
.	_	_

#110
Statement	_	_
d	_	_
is	_	_
also	_	_
mutually	_	_
dependent	_	_
on	_	_
statements	_	_
a	_	_
,	_	_
b	_	_
,	_	_
c	_	_
,	_	_
thus	_	_
the	_	_
set	_	_
{	_	_
a	_	_
,	_	_
b	_	_
,	_	_
c	_	_
,	_	_
d	_	_
}	_	_
also	_	_
satisfies	_	_
the	_	_
definition	_	_
of	_	_
a	_	_
slice-based	_	_
cluster	_	_
.	_	_

#111
Same-slice	_	_
clusters	_	_
An	_	_
alternative	_	_
definition	_	_
uses	_	_
the	_	_
same-slice	_	_
relation	_	_
in	_	_
place	_	_
of	_	_
slice	_	_
inclusion	_	_
(	_	_
Binkley	_	_
and	_	_
Harman	_	_
,	_	_
2005	_	_
)	_	_
.	_	_

#112
This	_	_
relation	_	_
replaces	_	_
the	_	_
need	_	_
to	_	_
check	_	_
if	_	_
two	_	_
vertices	_	_
are	_	_
in	_	_
each	_	_
others	_	_
slice	_	_
with	_	_
checking	_	_
if	_	_
two	_	_
vertices	_	_
have	_	_
the	_	_
same	_	_
slice	_	_
.	_	_

#113
The	_	_
result	_	_
is	_	_
captured	_	_
in	_	_
the	_	_
following	_	_
definitions	_	_
for	_	_
same-slice	_	_
cluster	_	_
.	_	_

#114
The	_	_
first	_	_
uses	_	_
backward	_	_
slices	_	_
and	_	_
the	_	_
second	_	_
forward	_	_
slices	_	_
.	_	_

#115
Definition	_	_
2.3	_	_
Same-slice	_	_
MDS	_	_
and	_	_
cluster	_	_
(	_	_
Harman	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
)	_	_
A	_	_
same-backward-slice	_	_
MDS	_	_
is	_	_
a	_	_
set	_	_
of	_	_
SDG	_	_
vertices	_	_
,	_	_
V	_	_
,	_	_
such	_	_
that	_	_
∀x	_	_
,	_	_
y∈V	_	_
:	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
=BSlice	_	_
(	_	_
y	_	_
)	_	_
.	_	_

#116
A	_	_
same-backward-slice	_	_
cluster	_	_
is	_	_
a	_	_
same-backward-slice	_	_
MDS	_	_
contained	_	_
within	_	_
no	_	_
other	_	_
same-backward-slice	_	_
MDS	_	_
.	_	_

#117
A	_	_
same-forward-slice	_	_
MDS	_	_
is	_	_
a	_	_
set	_	_
of	_	_
SDG	_	_
vertices	_	_
,	_	_
V	_	_
,	_	_
such	_	_
that	_	_
∀x	_	_
,	_	_
y∈V	_	_
:	_	_
FSlice	_	_
(	_	_
x	_	_
)	_	_
=FSlice	_	_
(	_	_
y	_	_
)	_	_
.	_	_

#118
A	_	_
same-forward-slice	_	_
cluster	_	_
is	_	_
a	_	_
same-forward-slice	_	_
MDS	_	_
contained	_	_
within	_	_
no	_	_
other	_	_
same-forward-slice	_	_
MDS	_	_
.	_	_

#119
Because	_	_
x∈BSlice	_	_
(	_	_
x	_	_
)	_	_
and	_	_
x∈FSlice	_	_
(	_	_
x	_	_
)	_	_
,	_	_
two	_	_
vertices	_	_
that	_	_
have	_	_
the	_	_
same	_	_
slice	_	_
will	_	_
always	_	_
be	_	_
in	_	_
each	_	_
other	_	_
's	_	_
slice	_	_
.	_	_

#120
If	_	_
slice	_	_
inclusion	_	_
were	_	_
transitive	_	_
,	_	_
a	_	_
backward-slice	_	_
MDS	_	_
(	_	_
Definition	_	_
2.2	_	_
)	_	_
would	_	_
be	_	_
identical	_	_
to	_	_
a	_	_
same-backward-slice	_	_
MDS	_	_
(	_	_
Definition	_	_
2.3	_	_
)	_	_
.	_	_

#121
However	_	_
,	_	_
as	_	_
illustrated	_	_
by	_	_
the	_	_
examples	_	_
in	_	_
Fig	_	_
.	_	_
1	_	_
,	_	_
slice	_	_
inclusion	_	_
is	_	_
not	_	_
transitive	_	_
;	_	_
thus	_	_
,	_	_
the	_	_
relation	_	_
is	_	_
one	_	_
of	_	_
containment	_	_
where	_	_
every	_	_
same-backward-slice	_	_
MDS	_	_
is	_	_
also	_	_
a	_	_
backward-slice	_	_
MDS	_	_
but	_	_
not	_	_
necessarily	_	_
a	_	_
maximal	_	_
one	_	_
.	_	_

#122
For	_	_
example	_	_
,	_	_
in	_	_
Fig	_	_
.	_	_
2	_	_
the	_	_
set	_	_
of	_	_
vertices	_	_
{	_	_
a	_	_
,	_	_
b	_	_
,	_	_
c	_	_
}	_	_
form	_	_
a	_	_
same-backward-slice	_	_
cluster	_	_
because	_	_
each	_	_
vertex	_	_
of	_	_
the	_	_
set	_	_
yields	_	_
the	_	_
same	_	_
backward	_	_
slice	_	_
.	_	_

#123
Whereas	_	_
the	_	_
set	_	_
of	_	_
vertices	_	_
{	_	_
a	_	_
,	_	_
c	_	_
}	_	_
form	_	_
a	_	_
same-forward-slice	_	_
cluster	_	_
as	_	_
they	_	_
have	_	_
the	_	_
same	_	_
forward	_	_
slice	_	_
.	_	_

#124
Although	_	_
vertex	_	_
d	_	_
is	_	_
mutually	_	_
dependent	_	_
with	_	_
all	_	_
vertices	_	_
of	_	_
either	_	_
set	_	_
,	_	_
it	_	_
does	_	_
not	_	_
form	_	_
the	_	_
same-slice	_	_
cluster	_	_
with	_	_
either	_	_
set	_	_
because	_	_
it	_	_
has	_	_
an	_	_
additional	_	_
dependence	_	_
relationship	_	_
with	_	_
vertex	_	_
e.	_	_
Although	_	_
the	_	_
introduction	_	_
of	_	_
same-slice	_	_
clusters	_	_
was	_	_
motivated	_	_
by	_	_
the	_	_
need	_	_
for	_	_
efficiency	_	_
,	_	_
the	_	_
definition	_	_
inadvertently	_	_
introduced	_	_
an	_	_
external	_	_
requirement	_	_
on	_	_
the	_	_
cluster	_	_
.	_	_

#125
Comparing	_	_
the	_	_
definitions	_	_
for	_	_
slice-based	_	_
clusters	_	_
(	_	_
Definition	_	_
2.2	_	_
)	_	_
and	_	_
same-slice	_	_
clusters	_	_
(	_	_
Definition	_	_
2.3	_	_
)	_	_
,	_	_
a	_	_
slice-based	_	_
cluster	_	_
includes	_	_
only	_	_
the	_	_
internal	_	_
requirement	_	_
that	_	_
the	_	_
vertices	_	_
of	_	_
a	_	_
cluster	_	_
depend	_	_
upon	_	_
one	_	_
another	_	_
.	_	_

#126
However	_	_
,	_	_
a	_	_
same-backward-slice	_	_
cluster	_	_
(	_	_
inadvertently	_	_
)	_	_
adds	_	_
to	_	_
this	_	_
internal	_	_
requirement	_	_
the	_	_
external	_	_
requirement	_	_
that	_	_
all	_	_
vertices	_	_
in	_	_
the	_	_
cluster	_	_
are	_	_
affected	_	_
by	_	_
the	_	_
same	_	_
vertices	_	_
external	_	_
to	_	_
the	_	_
cluster	_	_
.	_	_

#127
Symmetrically	_	_
,	_	_
a	_	_
same-forward-slice	_	_
cluster	_	_
adds	_	_
the	_	_
external	_	_
requirement	_	_
that	_	_
all	_	_
vertices	_	_
in	_	_
the	_	_
cluster	_	_
affect	_	_
the	_	_
same	_	_
vertices	_	_
external	_	_
to	_	_
the	_	_
cluster	_	_
.	_	_

#128
Coherent	_	_
dependence	_	_
clusters	_	_
This	_	_
subsection	_	_
first	_	_
formalizes	_	_
the	_	_
notion	_	_
of	_	_
coherent	_	_
dependence	_	_
clusters	_	_
and	_	_
then	_	_
presents	_	_
a	_	_
slice-based	_	_
instantiation	_	_
of	_	_
the	_	_
definition	_	_
.	_	_

#129
Coherent	_	_
clusters	_	_
are	_	_
dependence	_	_
clusters	_	_
that	_	_
include	_	_
not	_	_
only	_	_
an	_	_
internal	_	_
dependence	_	_
requirement	_	_
(	_	_
each	_	_
statement	_	_
of	_	_
a	_	_
cluster	_	_
depends	_	_
on	_	_
all	_	_
the	_	_
other	_	_
statements	_	_
of	_	_
the	_	_
cluster	_	_
)	_	_
but	_	_
also	_	_
an	_	_
external	_	_
dependence	_	_
requirement	_	_
.	_	_

#130
The	_	_
external	_	_
dependence	_	_
requirement	_	_
includes	_	_
both	_	_
that	_	_
each	_	_
statement	_	_
of	_	_
a	_	_
cluster	_	_
depends	_	_
on	_	_
the	_	_
same	_	_
statements	_	_
external	_	_
to	_	_
the	_	_
cluster	_	_
and	_	_
also	_	_
that	_	_
it	_	_
influences	_	_
the	_	_
same	_	_
set	_	_
of	_	_
statements	_	_
external	_	_
to	_	_
the	_	_
cluster	_	_
.	_	_

#131
In	_	_
other	_	_
words	_	_
,	_	_
a	_	_
coherent	_	_
cluster	_	_
is	_	_
a	_	_
set	_	_
of	_	_
statements	_	_
that	_	_
are	_	_
mutually	_	_
dependent	_	_
and	_	_
share	_	_
identical	_	_
extra-cluster	_	_
dependence	_	_
.	_	_

#132
Coherent	_	_
clusters	_	_
are	_	_
defined	_	_
in	_	_
terms	_	_
of	_	_
the	_	_
coherent	_	_
MDS	_	_
:	_	_
Definition	_	_
2.4	_	_
Coherent	_	_
MDS	_	_
and	_	_
cluster	_	_
(	_	_
Islam	_	_
et	_	_
al.	_	_
,	_	_
2010b	_	_
)	_	_
A	_	_
coherent	_	_
MDS	_	_
is	_	_
a	_	_
MDS	_	_
V	_	_
,	_	_
such	_	_
that	_	_
∀x	_	_
,	_	_
y∈V	_	_
:	_	_
x	_	_
depends	_	_
on	_	_
a	_	_
implies	_	_
y	_	_
depends	_	_
on	_	_
a	_	_
and	_	_
a	_	_
depends	_	_
on	_	_
x	_	_
implies	_	_
a	_	_
depends	_	_
on	_	_
y.	_	_
A	_	_
coherent	_	_
cluster	_	_
is	_	_
a	_	_
coherent	_	_
MDS	_	_
contained	_	_
within	_	_
no	_	_
other	_	_
coherent	_	_
MDS	_	_
.	_	_

#133
The	_	_
slice-based	_	_
instantiation	_	_
of	_	_
coherent	_	_
cluster	_	_
employs	_	_
both	_	_
backward	_	_
and	_	_
forward	_	_
slices	_	_
.	_	_

#134
The	_	_
combination	_	_
has	_	_
the	_	_
advantage	_	_
that	_	_
the	_	_
entire	_	_
cluster	_	_
is	_	_
both	_	_
affected	_	_
by	_	_
the	_	_
same	_	_
set	_	_
of	_	_
vertices	_	_
(	_	_
as	_	_
in	_	_
the	_	_
case	_	_
of	_	_
same-backward-slice	_	_
clusters	_	_
)	_	_
and	_	_
also	_	_
affects	_	_
the	_	_
same	_	_
set	_	_
of	_	_
vertices	_	_
(	_	_
as	_	_
in	_	_
the	_	_
case	_	_
of	_	_
same-forward-slice	_	_
clusters	_	_
)	_	_
.	_	_

#135
In	_	_
the	_	_
slice-based	_	_
instantiation	_	_
,	_	_
a	_	_
set	_	_
of	_	_
vertices	_	_
V	_	_
forms	_	_
a	_	_
coherent	_	_
MDS	_	_
if	_	_
∀x	_	_
,	_	_
y∈V	_	_
:	_	_
x∈BSlice	_	_
(	_	_
y	_	_
)	_	_
the	_	_
internal	_	_
requirement	_	_
of	_	_
an	_	_
MDS∧a∈BSlice	_	_
(	_	_
x	_	_
)	_	_
⇒a∈BSlice	_	_
(	_	_
y	_	_
)	_	_
x	_	_
and	_	_
y	_	_
depend	_	_
on	_	_
same	_	_
external	_	_
a∧a∈FSlice	_	_
(	_	_
x	_	_
)	_	_
⇒a∈FSlice	_	_
(	_	_
y	_	_
)	_	_
x	_	_
and	_	_
y	_	_
impact	_	_
on	_	_
same	_	_
external	_	_
a	_	_
Because	_	_
x	_	_
and	_	_
y	_	_
are	_	_
interchangeable	_	_
∀x	_	_
,	_	_
y∈V	_	_
:	_	_
x∈BSlice	_	_
(	_	_
y	_	_
)	_	_
∧	_	_
a∈BSlice	_	_
(	_	_
x	_	_
)	_	_
⇒	_	_
a∈BSlice	_	_
(	_	_
y	_	_
)	_	_
∧	_	_
a∈FSlice	_	_
(	_	_
x	_	_
)	_	_
⇒	_	_
a∈FSlice	_	_
(	_	_
y	_	_
)	_	_
∧	_	_
y∈BSlice	_	_
(	_	_
x	_	_
)	_	_
∧	_	_
a∈BSlice	_	_
(	_	_
y	_	_
)	_	_
⇒	_	_
a∈BSlice	_	_
(	_	_
x	_	_
)	_	_
∧	_	_
a∈FSlice	_	_
(	_	_
y	_	_
)	_	_
⇒	_	_
a∈FSlice	_	_
(	_	_
x	_	_
)	_	_
This	_	_
is	_	_
equivalent	_	_
to	_	_
∀x	_	_
,	_	_
y∈V	_	_
:	_	_
x∈BSlice	_	_
(	_	_
y	_	_
)	_	_
∧y∈BSlice	_	_
(	_	_
x	_	_
)	_	_
∧	_	_
(	_	_
a∈BSlice	_	_
(	_	_
x	_	_
)	_	_
⇔a∈BSlice	_	_
(	_	_
y	_	_
)	_	_
)	_	_
∧	_	_
(	_	_
a∈FSlice	_	_
(	_	_
x	_	_
)	_	_
⇔a∈FSlice	_	_
(	_	_
y	_	_
)	_	_
)	_	_
which	_	_
simplifies	_	_
to	_	_
∀x	_	_
,	_	_
y∈V	_	_
:	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
=BSlice	_	_
(	_	_
y	_	_
)	_	_
∧FSlice	_	_
(	_	_
x	_	_
)	_	_
=FSlice	_	_
(	_	_
y	_	_
)	_	_
and	_	_
can	capability-feasibility	_
be	_	_
used	_	_
to	_	_
define	_	_
coherent-slice	_	_
MDS	_	_
and	_	_
clusters	_	_
:	_	_
Definition	_	_
2.5	_	_
Coherent-slice	_	_
MDS	_	_
and	_	_
cluster	_	_
(	_	_
Islam	_	_
et	_	_
al.	_	_
,	_	_
2010b	_	_
)	_	_
A	_	_
coherent-slice	_	_
MDS	_	_
is	_	_
a	_	_
set	_	_
of	_	_
SDG	_	_
vertices	_	_
,	_	_
V	_	_
,	_	_
such	_	_
that	_	_
∀x	_	_
,	_	_
y∈V	_	_
:	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
=BSlice	_	_
(	_	_
y	_	_
)	_	_
∧FSlice	_	_
(	_	_
x	_	_
)	_	_
=FSlice	_	_
(	_	_
y	_	_
)	_	_
A	_	_
coherent-slice	_	_
cluster	_	_
is	_	_
a	_	_
coherent-slice	_	_
MDS	_	_
contained	_	_
within	_	_
no	_	_
other	_	_
coherent-slice	_	_
MDS	_	_
.	_	_

#136
At	_	_
first	_	_
glance	_	_
the	_	_
use	_	_
of	_	_
both	_	_
backward	_	_
and	_	_
forward	_	_
slices	_	_
might	speculation	_
seem	_	_
redundant	_	_
because	_	_
x∈BSlice	_	_
(	_	_
y	_	_
)	_	_
⇔y∈FSlice	_	_
(	_	_
x	_	_
)	_	_
.	_	_

#137
This	_	_
is	_	_
true	_	_
up	_	_
to	_	_
a	_	_
point	_	_
:	_	_
for	_	_
the	_	_
internal	_	_
requirement	_	_
of	_	_
a	_	_
coherent-slice	_	_
cluster	_	_
,	_	_
the	_	_
use	_	_
of	_	_
either	_	_
BSlice	_	_
or	_	_
FSlice	_	_
would	_	_
suffice	_	_
.	_	_

#138
However	_	_
,	_	_
the	_	_
two	_	_
are	_	_
not	_	_
redundant	_	_
when	_	_
it	_	_
comes	_	_
to	_	_
the	_	_
external	_	_
requirements	_	_
of	_	_
a	_	_
coherent-slice	_	_
cluster	_	_
.	_	_

#139
With	_	_
a	_	_
mutually-dependent	_	_
cluster	_	_
(	_	_
Definition	_	_
2.1	_	_
)	_	_
,	_	_
it	_	_
is	_	_
possible	_	_
for	_	_
two	_	_
vertices	_	_
within	_	_
the	_	_
cluster	_	_
to	_	_
influence	_	_
or	_	_
be	_	_
affected	_	_
by	_	_
different	_	_
vertices	_	_
external	_	_
to	_	_
the	_	_
cluster	_	_
.	_	_

#140
Neither	_	_
is	_	_
allowed	_	_
with	_	_
a	_	_
coherent-slice	_	_
cluster	_	_
.	_	_

#141
To	_	_
ensure	_	_
that	_	_
both	_	_
external	_	_
effects	_	_
are	_	_
captured	_	_
,	_	_
both	_	_
backward	_	_
and	_	_
forward	_	_
slices	_	_
are	_	_
required	_	_
for	_	_
coherent-slice	_	_
clusters	_	_
.	_	_

#142
In	_	_
Fig	_	_
.	_	_
2	_	_
the	_	_
set	_	_
of	_	_
vertices	_	_
{	_	_
a	_	_
,	_	_
c	_	_
}	_	_
form	_	_
a	_	_
coherent	_	_
cluster	_	_
as	_	_
both	_	_
these	_	_
vertices	_	_
have	_	_
exactly	_	_
the	_	_
same	_	_
backward	_	_
and	_	_
forward	_	_
slices	_	_
.	_	_

#143
That	_	_
is	_	_
,	_	_
they	_	_
share	_	_
identical	_	_
intra-	_	_
and	_	_
extra-cluster	_	_
dependencies	_	_
.	_	_

#144
Coherent	_	_
clusters	_	_
are	_	_
therefore	_	_
a	_	_
stricter	_	_
from	_	_
of	_	_
same-slice	_	_
clusters	_	_
,	_	_
all	_	_
coherent	_	_
clusters	_	_
are	_	_
also	_	_
same-slice	_	_
MDS	_	_
but	_	_
not	_	_
necessarily	_	_
maximal	_	_
.	_	_

#145
It	_	_
is	_	_
worth	_	_
noting	_	_
that	_	_
same-slice	_	_
clusters	_	_
partially	_	_
share	_	_
extra-cluster	_	_
dependency	_	_
.	_	_

#146
For	_	_
example	_	_
,	_	_
each	_	_
of	_	_
the	_	_
vertices	_	_
in	_	_
the	_	_
same-backward-slice	_	_
cluster	_	_
{	_	_
a	_	_
,	_	_
b	_	_
,	_	_
c	_	_
}	_	_
is	_	_
dependent	_	_
on	_	_
the	_	_
same	_	_
set	_	_
of	_	_
external	_	_
statements	_	_
,	_	_
but	_	_
do	_	_
not	_	_
influence	_	_
the	_	_
same	_	_
set	_	_
of	_	_
external	_	_
statements	_	_
.	_	_

#147
Coherent	_	_
slice-clusters	_	_
have	_	_
an	_	_
important	_	_
property	_	_
:	_	_
If	_	_
a	_	_
slice	_	_
contains	_	_
a	_	_
vertex	_	_
of	_	_
a	_	_
coherent	_	_
slice-cluster	_	_
V	_	_
,	_	_
it	_	_
will	_	_
contain	_	_
all	_	_
vertices	_	_
of	_	_
the	_	_
cluster	_	_
:	_	_
(	_	_
1	_	_
)	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
∩V≠∅	_	_
⇒	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
∩V=VThis	_	_
holds	_	_
because	_	_
:	_	_
∀y	_	_
,	_	_
y′∈V	_	_
:	_	_
y∈BSlice	_	_
(	_	_
x	_	_
)	_	_
⇒	_	_
x∈FSlice	_	_
(	_	_
y	_	_
)	_	_
⇒x∈FSlice	_	_
(	_	_
y′	_	_
)	_	_
⇒	_	_
y′∈BSlice	_	_
(	_	_
x	_	_
)	_	_
The	_	_
same	_	_
argument	_	_
clearly	_	_
holds	_	_
for	_	_
forward	_	_
slices	_	_
.	_	_

#148
However	_	_
,	_	_
the	_	_
same	_	_
is	_	_
not	_	_
true	_	_
for	_	_
non-coherent	_	_
clusters	_	_
.	_	_

#149
For	_	_
example	_	_
,	_	_
in	_	_
the	_	_
case	_	_
of	_	_
a	_	_
same-backward-slice	_	_
cluster	_	_
,	_	_
a	_	_
vertex	_	_
contained	_	_
within	_	_
the	_	_
forward	_	_
slice	_	_
of	_	_
any	_	_
vertex	_	_
of	_	_
the	_	_
cluster	_	_
is	_	_
not	_	_
guaranteed	_	_
to	_	_
be	_	_
in	_	_
the	_	_
forward	_	_
slice	_	_
of	_	_
other	_	_
vertices	_	_
of	_	_
the	_	_
same	_	_
cluster	_	_
.	_	_

#150
Hash	_	_
based	_	_
coherent	_	_
slice	_	_
clusters	_	_
The	_	_
computation	_	_
of	_	_
coherent-slice	_	_
clusters	_	_
(	_	_
Definition	_	_
2.5	_	_
)	_	_
grows	_	_
prohibitively	_	_
expensive	_	_
even	_	_
for	_	_
mid-sized	_	_
programs	_	_
where	_	_
tens	_	_
of	_	_
gigabytes	_	_
of	_	_
memory	_	_
are	_	_
required	_	_
to	_	_
store	_	_
the	_	_
set	_	_
of	_	_
all	_	_
possible	_	_
backward	_	_
and	_	_
forward	_	_
slices	_	_
.	_	_

#151
The	_	_
computation	_	_
is	_	_
cubic	_	_
in	_	_
time	_	_
and	_	_
quadratic	_	_
in	_	_
space	_	_
.	_	_

#152
An	_	_
approximation	_	_
is	_	_
employed	_	_
to	_	_
reduce	_	_
the	_	_
computation	_	_
time	_	_
and	_	_
memory	_	_
requirement	_	_
.	_	_

#153
This	_	_
approximation	_	_
replaces	_	_
comparison	_	_
of	_	_
slices	_	_
with	_	_
comparison	_	_
of	_	_
hash	_	_
values	_	_
,	_	_
where	_	_
hash	_	_
values	_	_
are	_	_
used	_	_
to	_	_
summarize	_	_
slice	_	_
content	_	_
.	_	_

#154
The	_	_
result	_	_
is	_	_
the	_	_
following	_	_
approximation	_	_
to	_	_
coherent-slice	_	_
clusters	_	_
in	_	_
which	_	_
H	_	_
denotes	_	_
a	_	_
hash	_	_
function	_	_
.	_	_

#155
Definition	_	_
2.6	_	_
Hash-based	_	_
coherent-slice	_	_
MDS	_	_
and	_	_
cluster	_	_
(	_	_
Islam	_	_
et	_	_
al.	_	_
,	_	_
2010b	_	_
)	_	_
A	_	_
hash-based	_	_
coherent-slice	_	_
MDS	_	_
is	_	_
a	_	_
set	_	_
of	_	_
SDG	_	_
vertices	_	_
,	_	_
V	_	_
,	_	_
such	_	_
that	_	_
∀x	_	_
,	_	_
y∈V	_	_
:	_	_
H	_	_
(	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
)	_	_
=H	_	_
(	_	_
BSlice	_	_
(	_	_
y	_	_
)	_	_
)	_	_
∧H	_	_
(	_	_
FSlice	_	_
(	_	_
x	_	_
)	_	_
)	_	_
=H	_	_
(	_	_
FSlice	_	_
(	_	_
y	_	_
)	_	_
)	_	_
A	_	_
hash-based	_	_
coherent-slice	_	_
cluster	_	_
is	_	_
a	_	_
hash-based	_	_
coherent-slice	_	_
MDS	_	_
contained	_	_
within	_	_
no	_	_
other	_	_
hash-based	_	_
coherent-slice	_	_
MDS	_	_
.	_	_

#156
A	_	_
description	_	_
of	_	_
the	_	_
hash	_	_
function	_	_
H	_	_
along	_	_
with	_	_
the	_	_
evaluation	_	_
of	_	_
its	_	_
precision	_	_
is	_	_
presented	_	_
in	_	_
Section	_	_
3.3	_	_
.	_	_

#157
From	_	_
here	_	_
on	_	_
,	_	_
the	_	_
paper	_	_
considers	_	_
only	_	_
hash-based	_	_
coherent-slice	_	_
clusters	_	_
unless	_	_
explicitly	_	_
stated	_	_
otherwise	_	_
.	_	_

#158
Thus	_	_
,	_	_
for	_	_
ease	_	_
of	_	_
reading	_	_
,	_	_
a	_	_
hash-based	_	_
coherent-slice	_	_
cluster	_	_
is	_	_
referred	_	_
to	_	_
simply	_	_
as	_	_
a	_	_
coherent	_	_
cluster	_	_
.	_	_

#159
Graph	_	_
based	_	_
cluster	_	_
visualization	_	_
This	_	_
section	_	_
describes	_	_
two	_	_
graph-based	_	_
visualizations	_	_
for	_	_
dependence	_	_
clusters	_	_
.	_	_

#160
The	_	_
first	_	_
visualization	_	_
,	_	_
the	_	_
Monotone	_	_
Slice-size	_	_
Graph	_	_
(	_	_
MSG	_	_
)	_	_
(	_	_
Binkley	_	_
and	_	_
Harman	_	_
,	_	_
2005	_	_
)	_	_
,	_	_
plots	_	_
a	_	_
landscape	_	_
of	_	_
monotonically	_	_
increasing	_	_
slice	_	_
sizes	_	_
where	_	_
the	_	_
y-axis	_	_
shows	_	_
the	_	_
size	_	_
of	_	_
each	_	_
slice	_	_
,	_	_
as	_	_
a	_	_
percentage	_	_
of	_	_
the	_	_
entire	_	_
program	_	_
,	_	_
and	_	_
the	_	_
x-axis	_	_
shows	_	_
each	_	_
slice	_	_
,	_	_
in	_	_
monotonically	_	_
increasing	_	_
order	_	_
of	_	_
slice	_	_
size	_	_
.	_	_

#161
In	_	_
an	_	_
MSG	_	_
,	_	_
a	_	_
dependence	_	_
cluster	_	_
appears	_	_
as	_	_
a	_	_
sheer-drop	_	_
cliff	_	_
face	_	_
followed	_	_
by	_	_
a	_	_
plateau	_	_
.	_	_

#162
The	_	_
visualization	_	_
assists	_	_
with	_	_
the	_	_
inherently	_	_
subjective	_	_
task	_	_
of	_	_
deciding	_	_
whether	_	_
a	_	_
cluster	_	_
is	_	_
large	_	_
(	_	_
how	_	_
long	_	_
is	_	_
the	_	_
plateau	_	_
at	_	_
the	_	_
top	_	_
of	_	_
the	_	_
cliff	_	_
face	_	_
relative	_	_
to	_	_
the	_	_
surrounding	_	_
landscape	_	_
?	_	_
)	_	_

#163
and	_	_
whether	_	_
it	_	_
denotes	_	_
a	_	_
discontinuity	_	_
in	_	_
the	_	_
dependence	_	_
profile	_	_
(	_	_
how	_	_
steep	_	_
is	_	_
the	_	_
cliff	_	_
face	_	_
relative	_	_
to	_	_
the	_	_
surrounding	_	_
landscape	_	_
?	_	_
)	_	_
.	_	_

#164
An	_	_
MSG	_	_
drawn	_	_
using	_	_
backward	_	_
slice	_	_
sizes	_	_
is	_	_
referred	_	_
to	_	_
as	_	_
a	_	_
backward-slice	_	_
MSG	_	_
(	_	_
B-MSG	_	_
)	_	_
,	_	_
and	_	_
an	_	_
MSG	_	_
drawn	_	_
using	_	_
forward	_	_
slice	_	_
sizes	_	_
is	_	_
referred	_	_
to	_	_
as	_	_
a	_	_
forward-slice	_	_
MSG	_	_
(	_	_
F-MSG	_	_
)	_	_
.	_	_

#165
As	_	_
an	_	_
example	_	_
,	_	_
the	_	_
open	_	_
source	_	_
calculator	_	_
bc	_	_
contains	_	_
9438	_	_
lines	_	_
of	_	_
code	_	_
represented	_	_
by	_	_
7538	_	_
SDG	_	_
vertices	_	_
.	_	_

#166
The	_	_
B-MSG	_	_
for	_	_
bc	_	_
,	_	_
shown	_	_
in	_	_
Fig	_	_
.	_	_
3a	_	_
,	_	_
contains	_	_
a	_	_
large	_	_
plateau	_	_
that	_	_
spans	_	_
almost	_	_
70	_	_
%	_	_
of	_	_
the	_	_
MSG	_	_
.	_	_

#167
Under	_	_
the	_	_
assumption	_	_
that	_	_
same	_	_
slice	_	_
size	_	_
implies	_	_
the	_	_
same	_	_
slice	_	_
,	_	_
this	_	_
indicates	_	_
a	_	_
large	_	_
same-slice	_	_
cluster	_	_
.	_	_

#168
However	_	_
,	_	_
"	_	_
zooming	_	_
"	_	_
in	_	_
reveals	_	_
that	_	_
the	_	_
cluster	_	_
is	_	_
actually	_	_
composed	_	_
of	_	_
several	_	_
smaller	_	_
clusters	_	_
made	_	_
from	_	_
slices	_	_
of	_	_
very	_	_
similar	_	_
size	_	_
.	_	_

#169
The	_	_
tolerance	_	_
implicit	_	_
in	_	_
the	_	_
visual	_	_
resolution	_	_
used	_	_
to	_	_
plot	_	_
the	_	_
MSG	_	_
obscures	_	_
this	_	_
detail	_	_
.	_	_

#170
The	_	_
second	_	_
visualization	_	_
,	_	_
the	_	_
Slice/Cluster	_	_
Size	_	_
Graph	_	_
(	_	_
SCG	_	_
)	_	_
(	_	_
Islam	_	_
et	_	_
al.	_	_
,	_	_
2010b	_	_
)	_	_
,	_	_
alleviates	_	_
this	_	_
issue	_	_
by	_	_
combining	_	_
both	_	_
slice	_	_
and	_	_
cluster	_	_
sizes	_	_
.	_	_

#171
It	_	_
plots	_	_
three	_	_
landscapes	_	_
,	_	_
one	_	_
of	_	_
increasing	_	_
slice	_	_
sizes	_	_
,	_	_
one	_	_
of	_	_
the	_	_
corresponding	_	_
same-slice	_	_
cluster	_	_
sizes	_	_
,	_	_
and	_	_
the	_	_
third	_	_
of	_	_
the	_	_
corresponding	_	_
coherent	_	_
cluster	_	_
sizes	_	_
.	_	_

#172
In	_	_
the	_	_
SCG	_	_
,	_	_
vertices	_	_
are	_	_
ordered	_	_
along	_	_
the	_	_
x-axis	_	_
using	_	_
three	_	_
values	_	_
,	_	_
primarily	_	_
according	_	_
to	_	_
their	_	_
slice	_	_
size	_	_
,	_	_
secondarily	_	_
according	_	_
to	_	_
their	_	_
same-slice	_	_
cluster	_	_
size	_	_
,	_	_
and	_	_
finally	_	_
according	_	_
to	_	_
the	_	_
coherent	_	_
cluster	_	_
size	_	_
.	_	_

#173
Three	_	_
values	_	_
are	_	_
plotted	_	_
on	_	_
the	_	_
y-axis	_	_
:	_	_
slice	_	_
sizes	_	_
form	_	_
the	_	_
first	_	_
landscape	_	_
,	_	_
and	_	_
cluster	_	_
sizes	_	_
form	_	_
the	_	_
second	_	_
and	_	_
third	_	_
.	_	_

#174
Thus	_	_
,	_	_
SCGs	_	_
not	_	_
only	_	_
show	_	_
the	_	_
sizes	_	_
of	_	_
the	_	_
slices	_	_
and	_	_
the	_	_
clusters	_	_
,	_	_
they	_	_
also	_	_
show	_	_
the	_	_
relation	_	_
between	_	_
them	_	_
and	_	_
thus	_	_
bring	_	_
to	_	_
light	_	_
interesting	_	_
links	_	_
.	_	_

#175
Two	_	_
variants	_	_
of	_	_
the	_	_
SCG	_	_
are	_	_
considered	_	_
:	_	_
the	_	_
backward-slice	_	_
SCG	_	_
(	_	_
B-SCG	_	_
)	_	_
is	_	_
built	_	_
from	_	_
the	_	_
sizes	_	_
of	_	_
backward	_	_
slices	_	_
,	_	_
same-backward-slice	_	_
clusters	_	_
,	_	_
and	_	_
coherent	_	_
clusters	_	_
,	_	_
while	_	_
the	_	_
forward-slice	_	_
SCG	_	_
(	_	_
F-SCG	_	_
)	_	_
is	_	_
built	_	_
from	_	_
the	_	_
sizes	_	_
of	_	_
forward	_	_
slices	_	_
,	_	_
same-forward-slice	_	_
clusters	_	_
,	_	_
and	_	_
coherent	_	_
clusters	_	_
.	_	_

#176
Note	_	_
that	_	_
both	_	_
backward	_	_
and	_	_
forward	_	_
SCGs	_	_
use	_	_
the	_	_
same	_	_
coherent	_	_
cluster	_	_
sizes	_	_
.	_	_

#177
The	_	_
B-SCG	_	_
and	_	_
F-SCG	_	_
for	_	_
the	_	_
program	_	_
bc	_	_
are	_	_
shown	_	_
in	_	_
Fig	_	_
.	_	_
4	_	_
.	_	_

#178
In	_	_
both	_	_
graphs	_	_
the	_	_
slice	_	_
size	_	_
landscape	_	_
is	_	_
plotted	_	_
using	_	_
a	_	_
solid	_	_
blackline	_	_
,	_	_
the	_	_
same-slice	_	_
cluster	_	_
size	_	_
landscape	_	_
using	_	_
a	_	_
gray	_	_
line	_	_
,	_	_
and	_	_
the	_	_
coherent	_	_
cluster	_	_
size	_	_
landscape	_	_
using	_	_
a	_	_
(	_	_
red	_	_
)	_	_
broken	_	_
line	_	_
.	_	_

#179
The	_	_
B-SCG	_	_
(	_	_
Fig	_	_
.	_	_
4a	_	_
)	_	_
shows	_	_
that	_	_
bc	_	_
contains	_	_
two	_	_
large	_	_
same-backward-slice	_	_
clusters	_	_
consisting	_	_
of	_	_
around	_	_
55	_	_
%	_	_
and	_	_
15	_	_
%	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#180
Surprisingly	_	_
,	_	_
the	_	_
larger	_	_
same-backward-slice	_	_
cluster	_	_
is	_	_
composed	_	_
of	_	_
smaller	_	_
slices	_	_
than	_	_
the	_	_
smaller	_	_
same-backward-slice	_	_
cluster	_	_
;	_	_
thus	_	_
,	_	_
the	_	_
smaller	_	_
cluster	_	_
has	_	_
a	_	_
bigger	_	_
impact	_	_
(	_	_
slice	_	_
size	_	_
)	_	_
than	_	_
the	_	_
larger	_	_
cluster	_	_
.	_	_

#181
In	_	_
addition	_	_
,	_	_
the	_	_
presence	_	_
of	_	_
three	_	_
coherent	_	_
clusters	_	_
spanning	_	_
approximately	_	_
15	_	_
%	_	_
,	_	_
20	_	_
%	_	_
and	_	_
30	_	_
%	_	_
of	_	_
the	_	_
program	_	_
's	_	_
statements	_	_
can	rhetorical	_
also	_	_
be	_	_
seen	_	_
.	_	_

#182
Fig	_	_
.	_	_
3c	_	_
shows	_	_
two	_	_
box	_	_
plots	_	_
depicting	_	_
the	_	_
distribution	_	_
of	_	_
(	_	_
backward	_	_
and	_	_
forward	_	_
)	_	_
slice	_	_
sizes	_	_
for	_	_
bc	_	_
.	_	_

#183
The	_	_
average	_	_
size	_	_
of	_	_
the	_	_
slices	_	_
is	_	_
also	_	_
displayed	_	_
in	_	_
the	_	_
box	_	_
plot	_	_
using	_	_
a	_	_
solid	_	_
square	_	_
box	_	_
.	_	_

#184
Comparing	_	_
the	_	_
box	_	_
plot	_	_
information	_	_
to	_	_
the	_	_
information	_	_
provided	_	_
by	_	_
the	_	_
MSGs	_	_
,	_	_
we	_	_
can	rhetorical	_
see	_	_
that	_	_
all	_	_
the	_	_
information	_	_
available	_	_
from	_	_
the	_	_
box	_	_
plots	_	_
can	feasibility	_
be	_	_
derived	_	_
from	_	_
the	_	_
MSGs	_	_
itself	_	_
(	_	_
except	_	_
for	_	_
the	_	_
average	_	_
)	_	_
.	_	_

#185
However	_	_
,	_	_
MSGs	_	_
show	_	_
a	_	_
landscape	_	_
(	_	_
slice	_	_
profile	_	_
)	_	_
which	_	_
can	feasibility	negation
not	_	_
be	_	_
obtained	_	_
from	_	_
the	_	_
box	_	_
plots	_	_
.	_	_

#186
Similarly	_	_
,	_	_
the	_	_
box	_	_
plots	_	_
in	_	_
Fig	_	_
.	_	_
4c	_	_
show	_	_
the	_	_
size	_	_
distributions	_	_
of	_	_
the	_	_
various	_	_
clusters	_	_
(	_	_
i.e	_	_
.	_	_
a	_	_
vertex	_	_
is	_	_
in	_	_
a	_	_
cluster	_	_
of	_	_
size	_	_
x	_	_
)	_	_
in	_	_
addition	_	_
to	_	_
the	_	_
slice	_	_
size	_	_
distributions	_	_
.	_	_

#187
Although	_	_
the	_	_
information	_	_
from	_	_
these	_	_
box	_	_
plots	_	_
can	feasibility	negation
not	_	_
be	_	_
derived	_	_
from	_	_
the	_	_
SCGs	_	_
shown	_	_
in	_	_
Fig	_	_
.	_	_
4a	_	_
and	_	_
b	_	_
directly	_	_
,	_	_
the	_	_
profiles	_	_
(	_	_
landscapes	_	_
)	_	_
give	_	_
a	_	_
better	_	_
intuition	_	_
about	_	_
the	_	_
clusters	_	_
,	_	_
the	_	_
number	_	_
of	_	_
major	_	_
clusters	_	_
and	_	_
their	_	_
sizes	_	_
.	_	_

#188
For	_	_
our	_	_
empirical	_	_
study	_	_
we	_	_
use	_	_
the	_	_
size	_	_
of	_	_
individual	_	_
clusters	_	_
and	_	_
the	_	_
cluster	_	_
profile	_	_
to	_	_
find	_	_
mappings	_	_
between	_	_
the	_	_
clusters	_	_
and	_	_
program	_	_
components	_	_
.	_	_

#189
Therefore	_	_
,	_	_
we	_	_
drop	_	_
box	_	_
plots	_	_
in	_	_
favor	_	_
of	_	_
SCGs	_	_
to	_	_
show	_	_
the	_	_
cluster	_	_
profile	_	_
and	_	_
provide	_	_
additional	_	_
statistics	_	_
in	_	_
tabular	_	_
format	_	_
where	_	_
required	_	_
.	_	_

#190
Empirical	_	_
evaluation	_	_
This	_	_
section	_	_
presents	_	_
the	_	_
empirical	_	_
evaluation	_	_
into	_	_
the	_	_
existence	_	_
and	_	_
impact	_	_
of	_	_
coherent	_	_
dependence	_	_
clusters	_	_
.	_	_

#191
The	_	_
section	_	_
first	_	_
discusses	_	_
the	_	_
experimental	_	_
setup	_	_
and	_	_
the	_	_
subject	_	_
programs	_	_
included	_	_
in	_	_
the	_	_
study	_	_
.	_	_

#192
It	_	_
then	_	_
presents	_	_
two	_	_
validation	_	_
studies	_	_
,	_	_
the	_	_
first	_	_
considers	_	_
the	_	_
effect	_	_
of	_	_
pointer	_	_
analysis	_	_
precision	_	_
and	_	_
the	_	_
second	_	_
considers	_	_
the	_	_
validity	_	_
of	_	_
hashing	_	_
in	_	_
efficient	_	_
cluster	_	_
identification	_	_
.	_	_

#193
The	_	_
section	_	_
then	_	_
quantitatively	_	_
considers	_	_
the	_	_
existence	_	_
of	_	_
coherent	_	_
dependence	_	_
clusters	_	_
and	_	_
identifies	_	_
patterns	_	_
of	_	_
clustering	_	_
within	_	_
the	_	_
programs	_	_
.	_	_

#194
This	_	_
is	_	_
followed	_	_
by	_	_
a	_	_
series	_	_
of	_	_
four	_	_
case	_	_
studies	_	_
,	_	_
where	_	_
qualitative	_	_
analysis	_	_
,	_	_
aided	_	_
by	_	_
the	_	_
decluvi	_	_
cluster	_	_
visualization	_	_
tool	_	_
(	_	_
Islam	_	_
et	_	_
al.	_	_
,	_	_
2010a	_	_
)	_	_
,	_	_
highlight	_	_
how	_	_
knowledge	_	_
of	_	_
clusters	_	_
can	capability	_
aid	_	_
a	_	_
software	_	_
engineer	_	_
.	_	_

#195
The	_	_
section	_	_
then	_	_
presents	_	_
studies	_	_
on	_	_
inter-cluster	_	_
dependence	_	_
,	_	_
and	_	_
the	_	_
relationship	_	_
of	_	_
program	_	_
faults	_	_
and	_	_
system	_	_
evolution	_	_
to	_	_
coherent	_	_
clusters	_	_
.	_	_

#196
Finally	_	_
,	_	_
threats	_	_
to	_	_
validity	_	_
are	_	_
considered	_	_
.	_	_

#197
To	_	_
formalize	_	_
the	_	_
goals	_	_
of	_	_
this	_	_
section	_	_
,	_	_
the	_	_
empirical	_	_
evaluation	_	_
addresses	_	_
the	_	_
following	_	_
research	_	_
questions	_	_
:	_	_
RQ1	_	_
What	_	_
is	_	_
the	_	_
effect	_	_
of	_	_
pointer	_	_
analysis	_	_
precision	_	_
on	_	_
coherent	_	_
clusters	_	_
?	_	_

#198
RQ2	_	_
How	_	_
precise	_	_
is	_	_
hashing	_	_
as	_	_
a	_	_
proxy	_	_
for	_	_
comparing	_	_
slices	_	_
?	_	_

#199
RQ3	_	_
How	_	_
large	_	_
are	_	_
the	_	_
coherent	_	_
clusters	_	_
that	_	_
exist	_	_
in	_	_
production	_	_
source	_	_
code	_	_
and	_	_
which	_	_
patterns	_	_
of	_	_
clustering	_	_
can	feasibility	_
be	_	_
identified	_	_
?	_	_

#200
RQ4	_	_
Which	_	_
structures	_	_
within	_	_
a	_	_
program	_	_
can	capability	_
coherent	_	_
cluster	_	_
analysis	_	_
reveal	_	_
?	_	_

#201
RQ5	_	_
What	_	_
are	_	_
the	_	_
implications	_	_
of	_	_
inter-cluster	_	_
dependence	_	_
between	_	_
coherent	_	_
clusters	_	_
?	_	_

#202
RQ6	_	_
How	_	_
do	_	_
program	_	_
faults	_	_
relate	_	_
to	_	_
coherent	_	_
clusters	_	_
?	_	_

#203
RQ7	_	_
How	_	_
stable	_	_
are	_	_
coherent	_	_
clusters	_	_
during	_	_
system	_	_
evolution	_	_
?	_	_

#204
The	_	_
first	_	_
two	_	_
research	_	_
questions	_	_
provide	_	_
empirical	_	_
verification	_	_
for	_	_
the	_	_
results	_	_
subsequently	_	_
presented	_	_
.	_	_

#205
RQ1	_	_
establishes	_	_
the	_	_
impact	_	_
of	_	_
pointer	_	_
analysis	_	_
on	_	_
the	_	_
clustering	_	_
,	_	_
whereas	_	_
RQ2	_	_
establishes	_	_
that	_	_
the	_	_
hash	_	_
function	_	_
used	_	_
to	_	_
approximate	_	_
a	_	_
slice	_	_
is	_	_
sufficiently	_	_
precise	_	_
.	_	_

#206
If	_	_
the	_	_
static	_	_
slices	_	_
produced	_	_
by	_	_
the	_	_
slicer	_	_
are	_	_
overly	_	_
conservative	_	_
or	_	_
if	_	_
the	_	_
slice	_	_
approximation	_	_
is	_	_
not	_	_
sufficiently	_	_
precise	_	_
,	_	_
then	_	_
the	_	_
results	_	_
presented	_	_
will	_	_
not	_	_
be	_	_
reliable	_	_
.	_	_

#207
Fortunately	_	_
,	_	_
the	_	_
results	_	_
provide	_	_
confidence	_	_
that	_	_
the	_	_
slice	_	_
precision	_	_
and	_	_
hashing	_	_
accuracy	_	_
are	_	_
sufficient	_	_
.	_	_

#208
Whereas	_	_
RQ1	_	_
and	_	_
RQ2	_	_
focus	_	_
on	_	_
the	_	_
veracity	_	_
of	_	_
our	_	_
approach	_	_
,	_	_
RQ3	_	_
investigates	_	_
the	_	_
validity	_	_
of	_	_
the	_	_
study	_	_
;	_	_
if	_	_
large	_	_
coherent	_	_
clusters	_	_
are	_	_
not	_	_
prevalent	_	_
,	_	_
then	_	_
they	_	_
would	_	_
not	_	_
be	_	_
worthy	_	_
of	_	_
further	_	_
study	_	_
.	_	_

#209
We	_	_
place	_	_
very	_	_
specific	_	_
and	_	_
demanding	_	_
constraints	_	_
on	_	_
a	_	_
set	_	_
of	_	_
vertices	_	_
for	_	_
it	_	_
to	_	_
be	_	_
deemed	_	_
a	_	_
coherent	_	_
cluster	_	_
.	_	_

#210
If	_	_
such	_	_
clusters	_	_
are	_	_
not	_	_
common	_	_
then	_	_
their	_	_
study	_	_
would	_	_
be	_	_
merely	_	_
an	_	_
academic	_	_
exercise	_	_
.	_	_

#211
Conversely	_	_
,	_	_
if	_	_
the	_	_
clustering	_	_
is	_	_
similar	_	_
for	_	_
every	_	_
program	_	_
then	_	_
it	_	_
is	_	_
unlikely	_	_
that	_	_
cluster	_	_
identification	_	_
will	_	_
reveal	_	_
interesting	_	_
information	_	_
about	_	_
programs	_	_
.	_	_

#212
Our	_	_
findings	_	_
reveal	_	_
that	_	_
,	_	_
despite	_	_
the	_	_
tight	_	_
constraints	_	_
inherent	_	_
in	_	_
the	_	_
definition	_	_
of	_	_
a	_	_
coherent	_	_
dependence	_	_
cluster	_	_
,	_	_
they	_	_
are	_	_
,	_	_
indeed	_	_
,	_	_
very	_	_
common	_	_
.	_	_

#213
Also	_	_
,	_	_
the	_	_
cluster	_	_
profiles	_	_
for	_	_
programs	_	_
are	_	_
sufficiently	_	_
different	_	_
and	_	_
exhibit	_	_
interesting	_	_
patterns	_	_
.	_	_

#214
These	_	_
results	_	_
motivate	_	_
the	_	_
remaining	_	_
research	_	_
questions	_	_
.	_	_

#215
Having	_	_
demonstrated	_	_
that	_	_
our	_	_
technique	_	_
is	_	_
suitable	_	_
for	_	_
finding	_	_
coherent	_	_
clusters	_	_
and	_	_
that	_	_
such	_	_
clusters	_	_
are	_	_
sufficiently	_	_
widespread	_	_
to	_	_
be	_	_
worthy	_	_
of	_	_
study	_	_
,	_	_
we	_	_
investigate	_	_
specific	_	_
coherent	_	_
clusters	_	_
in	_	_
detail	_	_
.	_	_

#216
RQ4	_	_
studies	_	_
the	_	_
underlying	_	_
logical	_	_
structure	_	_
of	_	_
programs	_	_
revealed	_	_
by	_	_
these	_	_
clusters	_	_
.	_	_

#217
RQ5	_	_
looks	_	_
explicitly	_	_
at	_	_
inter-cluster	_	_
dependency	_	_
and	_	_
considers	_	_
areas	_	_
of	_	_
software	_	_
engineering	_	_
where	_	_
it	_	_
may	options	_
be	_	_
of	_	_
interest	_	_
.	_	_

#218
RQ6	_	_
presents	_	_
a	_	_
study	_	_
of	_	_
how	_	_
program	_	_
faults	_	_
relate	_	_
to	_	_
coherent	_	_
clusters	_	_
,	_	_
and	_	_
,	_	_
finally	_	_
,	_	_
RQ7	_	_
studies	_	_
the	_	_
effect	_	_
of	_	_
system	_	_
evolution	_	_
on	_	_
clustering	_	_
.	_	_

#219
Experimental	_	_
subjects	_	_
and	_	_
setup	_	_
The	_	_
slices	_	_
along	_	_
with	_	_
the	_	_
mapping	_	_
between	_	_
the	_	_
SDG	_	_
vertices	_	_
and	_	_
the	_	_
actual	_	_
source	_	_
code	_	_
are	_	_
extracted	_	_
from	_	_
the	_	_
mature	_	_
and	_	_
widely	_	_
used	_	_
slicing	_	_
tool	_	_
CodeSurfer	_	_
(	_	_
Anderson	_	_
and	_	_
Teitelbaum	_	_
,	_	_
2001	_	_
)	_	_
(	_	_
version	_	_
2.1	_	_
)	_	_
.	_	_

#220
The	_	_
cluster	_	_
visualizations	_	_
were	_	_
generated	_	_
by	_	_
decluvi	_	_
(	_	_
Islam	_	_
et	_	_
al.	_	_
,	_	_
2010a	_	_
)	_	_
using	_	_
data	_	_
extracted	_	_
from	_	_
CodeSurfer	_	_
.	_	_

#221
The	_	_
data	_	_
is	_	_
generated	_	_
from	_	_
slices	_	_
taken	_	_
with	_	_
respect	_	_
to	_	_
source-code	_	_
representing	_	_
SDG	_	_
vertices	_	_
.	_	_

#222
This	_	_
excludes	_	_
pseudo	_	_
vertices	_	_
introduced	_	_
into	_	_
the	_	_
SDG	_	_
,	_	_
e.g.	_	_
,	_	_
to	_	_
represent	_	_
global	_	_
variables	_	_
which	_	_
are	_	_
modeled	_	_
as	_	_
additional	_	_
pseudo	_	_
parameters	_	_
by	_	_
CodeSurfer	_	_
.	_	_

#223
Cluster	_	_
sizes	_	_
are	_	_
also	_	_
measured	_	_
in	_	_
terms	_	_
of	_	_
source-code	_	_
representing	_	_
SDG	_	_
vertices	_	_
,	_	_
which	_	_
is	_	_
more	_	_
consistent	_	_
than	_	_
using	_	_
lines	_	_
of	_	_
code	_	_
as	_	_
it	_	_
is	_	_
not	_	_
influenced	_	_
by	_	_
blank	_	_
lines	_	_
,	_	_
comments	_	_
,	_	_
statements	_	_
spanning	_	_
multiple	_	_
lines	_	_
,	_	_
multiple	_	_
statements	_	_
on	_	_
one	_	_
line	_	_
,	_	_
or	_	_
compound	_	_
statements	_	_
.	_	_

#224
The	_	_
decluvi	_	_
system	_	_
along	_	_
with	_	_
scheme	_	_
scripts	_	_
for	_	_
data	_	_
acquisition	_	_
and	_	_
pre-compiled	_	_
datasets	_	_
for	_	_
several	_	_
open-source	_	_
programs	_	_
can	feasibility	_
be	_	_
downloaded	_	_
from	_	_
http	_	_
:	_	_
//www.cs.ucl.ac.uk/staff/s.islam/decluvi.html	_	_
.	_	_

#225
The	_	_
study	_	_
considers	_	_
the	_	_
30	_	_
C	_	_
programs	_	_
shown	_	_
in	_	_
Table	_	_
1	_	_
,	_	_
which	_	_
provides	_	_
a	_	_
brief	_	_
description	_	_
of	_	_
each	_	_
program	_	_
alongside	_	_
seven	_	_
measures	_	_
:	_	_
number	_	_
of	_	_
files	_	_
containing	_	_
executable	_	_
C	_	_
code	_	_
,	_	_
LoC	_	_
-	_	_
lines	_	_
of	_	_
code	_	_
(	_	_
as	_	_
counted	_	_
by	_	_
the	_	_
Unix	_	_
utility	_	_
wc	_	_
)	_	_
,	_	_
SLoC	_	_
-	_	_
the	_	_
non-comment	_	_
non-blank	_	_
lines	_	_
of	_	_
code	_	_
(	_	_
as	_	_
counted	_	_
by	_	_
the	_	_
utility	_	_
sloccount	_	_
(	_	_
Wheeler	_	_
,	_	_
2004	_	_
)	_	_
)	_	_
,	_	_
ELoC	_	_
-	_	_
the	_	_
number	_	_
of	_	_
source	_	_
code	_	_
lines	_	_
that	_	_
CodeSurfer	_	_
considers	_	_
to	_	_
contain	_	_
executable	_	_
code	_	_
,	_	_
the	_	_
number	_	_
of	_	_
SDG	_	_
vertices	_	_
,	_	_
the	_	_
number	_	_
of	_	_
SDG	_	_
edges	_	_
,	_	_
the	_	_
number	_	_
of	_	_
slices	_	_
produced	_	_
,	_	_
and	_	_
finally	_	_
the	_	_
size	_	_
(	_	_
as	_	_
a	_	_
percentage	_	_
of	_	_
the	_	_
program	_	_
's	_	_
SDG	_	_
vertex	_	_
count	_	_
)	_	_
of	_	_
the	_	_
largest	_	_
coherent	_	_
cluster	_	_
.	_	_

#226
All	_	_
LoC	_	_
metrics	_	_
are	_	_
calculated	_	_
over	_	_
source	_	_
files	_	_
that	_	_
CodeSurfer	_	_
considers	_	_
to	_	_
contain	_	_
executable	_	_
code	_	_
and	_	_
,	_	_
for	_	_
example	_	_
,	_	_
do	_	_
not	_	_
include	_	_
header	_	_
files	_	_
.	_	_

#227
Columns	_	_
10	_	_
and	_	_
11	_	_
provide	_	_
the	_	_
runtimes	_	_
recorded	_	_
during	_	_
the	_	_
empirical	_	_
study	_	_
.	_	_

#228
The	_	_
runtimes	_	_
reported	_	_
are	_	_
wall	_	_
clock	_	_
times	_	_
captured	_	_
by	_	_
the	_	_
Unix	_	_
time	_	_
utility	_	_
while	_	_
running	_	_
the	_	_
experiments	_	_
on	_	_
a	_	_
64-bit	_	_
Linux	_	_
machine	_	_
(	_	_
CentOS	_	_
5	_	_
)	_	_
with	_	_
eight	_	_
Intel	_	_
(	_	_
R	_	_
)	_	_
Xeon	_	_
(	_	_
R	_	_
)	_	_
CPU	_	_
E5450	_	_
@	_	_
3.00GHz	_	_
processors	_	_
and	_	_
32GB	_	_
of	_	_
RAM	_	_
.	_	_

#229
It	_	_
should	deontic-rhetorical	_
be	_	_
noted	_	_
that	_	_
this	_	_
machine	_	_
acts	_	_
as	_	_
a	_	_
group	_	_
server	_	_
and	_	_
is	_	_
accessed	_	_
by	_	_
multiple	_	_
users	_	_
.	_	_

#230
There	_	_
were	_	_
other	_	_
CPU	_	_
intensive	_	_
processes	_	_
intermittently	_	_
running	_	_
on	_	_
the	_	_
machine	_	_
while	_	_
these	_	_
runtimes	_	_
were	_	_
collected	_	_
,	_	_
and	_	_
thus	_	_
the	_	_
runtimes	_	_
are	_	_
only	_	_
indicative	_	_
.	_	_

#231
Column	_	_
10	_	_
shows	_	_
the	_	_
time	_	_
needed	_	_
to	_	_
build	_	_
the	_	_
SDG	_	_
and	_	_
CodeSurfer	_	_
project	_	_
that	_	_
is	_	_
subsequently	_	_
used	_	_
for	_	_
slicing	_	_
.	_	_

#232
The	_	_
build	_	_
time	_	_
for	_	_
the	_	_
projects	_	_
were	_	_
quite	_	_
small	_	_
and	_	_
the	_	_
longest	_	_
build	_	_
time	_	_
(	_	_
2m33.456s	_	_
)	_	_
was	_	_
required	_	_
for	_	_
gcal	_	_
with	_	_
46,827	_	_
SLoC	_	_
.	_	_

#233
Column	_	_
11	_	_
shows	_	_
the	_	_
time	_	_
needed	_	_
for	_	_
the	_	_
clustering	_	_
algorithm	_	_
to	_	_
perform	_	_
the	_	_
clustering	_	_
and	_	_
create	_	_
all	_	_
the	_	_
data	_	_
dumps	_	_
for	_	_
decluvi	_	_
to	_	_
create	_	_
cluster	_	_
visualizations	_	_
.	_	_

#234
The	_	_
process	_	_
completes	_	_
in	_	_
minutes	_	_
for	_	_
small	_	_
programs	_	_
and	_	_
can	options	_
take	_	_
hours	_	_
and	_	_
longer	_	_
for	_	_
larger	_	_
programs	_	_
.	_	_

#235
It	_	_
should	deontic-rhetorical	_
be	_	_
noted	_	_
that	_	_
the	_	_
runtime	_	_
includes	_	_
both	_	_
the	_	_
slicing	_	_
phase	_	_
which	_	_
runs	_	_
in	_	_
O	_	_
(	_	_
ne	_	_
)	_	_
,	_	_
where	_	_
n	_	_
is	_	_
the	_	_
number	_	_
of	_	_
SDG	_	_
vertices	_	_
and	_	_
e	_	_
is	_	_
the	_	_
number	_	_
of	_	_
edges	_	_
,	_	_
and	_	_
the	_	_
hashing	_	_
and	_	_
clustering	_	_
algorithm	_	_
which	_	_
runs	_	_
in	_	_
O	_	_
(	_	_
n2	_	_
)	_	_
.	_	_

#236
Therefore	_	_
the	_	_
overall	_	_
complexity	_	_
is	_	_
O	_	_
(	_	_
ne	_	_
)	_	_
.	_	_

#237
The	_	_
long	_	_
runtime	_	_
is	_	_
mainly	_	_
due	_	_
to	_	_
the	_	_
current	_	_
research	_	_
prototype	_	_
(	_	_
which	_	_
performs	_	_
slicing	_	_
,	_	_
clustering	_	_
and	_	_
extraction	_	_
of	_	_
the	_	_
data	_	_
)	_	_
using	_	_
the	_	_
Scheme	_	_
interface	_	_
of	_	_
CodeSurfer	_	_
in	_	_
a	_	_
pipeline	_	_
architecture	_	_
.	_	_

#238
In	_	_
the	_	_
future	_	_
we	_	_
plan	_	_
to	_	_
upgrade	_	_
the	_	_
tooling	_	_
with	_	_
optimizations	_	_
for	_	_
fast	_	_
and	_	_
massive	_	_
slicing	_	_
(	_	_
Binkley	_	_
et	_	_
al.	_	_
,	_	_
2007	_	_
)	_	_
and	_	_
to	_	_
merge	_	_
the	_	_
clustering	_	_
phase	_	_
into	_	_
the	_	_
slicing	_	_
to	_	_
reduce	_	_
the	_	_
runtime	_	_
significantly	_	_
.	_	_

#239
Although	_	_
the	_	_
clustering	_	_
and	_	_
building	_	_
the	_	_
visualization	_	_
data	_	_
can	options	_
take	_	_
a	_	_
long	_	_
time	_	_
for	_	_
large	_	_
projects	_	_
,	_	_
it	_	_
is	_	_
still	_	_
useful	_	_
because	_	_
the	_	_
clustering	_	_
only	_	_
needs	_	_
to	_	_
be	_	_
done	_	_
once	_	_
(	_	_
for	_	_
example	_	_
during	_	_
a	_	_
nightly	_	_
build	_	_
)	_	_
and	_	_
can	capability-feasibility	_
then	_	_
be	_	_
visualised	_	_
and	_	_
reused	_	_
as	_	_
many	_	_
times	_	_
as	_	_
needed	_	_
.	_	_

#240
During	_	_
further	_	_
study	_	_
of	_	_
the	_	_
visualization	_	_
and	_	_
the	_	_
clustering	_	_
we	_	_
have	_	_
also	_	_
found	_	_
that	_	_
small	_	_
changes	_	_
to	_	_
the	_	_
system	_	_
does	_	_
not	_	_
show	_	_
a	_	_
change	_	_
in	_	_
the	_	_
clustering	_	_
,	_	_
therefore	_	_
once	_	_
the	_	_
clustering	_	_
is	_	_
created	_	_
it	_	_
still	_	_
remains	_	_
viable	_	_
through	_	_
small	_	_
code	_	_
changes	_	_
as	_	_
the	_	_
clustering	_	_
is	_	_
found	_	_
to	_	_
represent	_	_
the	_	_
core	_	_
program	_	_
architecture	_	_
(	_	_
Section	_	_
3.9	_	_
)	_	_
.	_	_

#241
Furthermore	_	_
,	_	_
the	_	_
number	_	_
of	_	_
SDG	_	_
vertices	_	_
and	_	_
edges	_	_
are	_	_
quite	_	_
large	_	_
,	_	_
in	_	_
fact	_	_
even	_	_
for	_	_
very	_	_
small	_	_
programs	_	_
the	_	_
number	_	_
of	_	_
SDG	_	_
vertices	_	_
is	_	_
in	_	_
the	_	_
thousands	_	_
with	_	_
edge	_	_
counts	_	_
in	_	_
the	_	_
tens	_	_
of	_	_
thousands	_	_
.	_	_

#242
Moreover	_	_
,	_	_
the	_	_
analysis	_	_
produces	_	_
an	_	_
is-in-the-slice-of	_	_
relation	_	_
and	_	_
graph	_	_
with	_	_
even	_	_
more	_	_
edges	_	_
.	_	_

#243
We	_	_
have	_	_
tried	_	_
several	_	_
clustering	_	_
and	_	_
visualization	_	_
tools	_	_
to	_	_
cluster	_	_
the	_	_
is-in-the-slice-of	_	_
graph	_	_
for	_	_
comparison	_	_
,	_	_
but	_	_
most	_	_
of	_	_
the	_	_
tools	_	_
(	_	_
such	_	_
as	_	_
Gephi	_	_
Bastian	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
)	_	_
failed	_	_
due	_	_
to	_	_
the	_	_
large	_	_
dataset	_	_
.	_	_

#244
Other	_	_
tools	_	_
such	_	_
as	_	_
CCVisu	_	_
(	_	_
Beyer	_	_
,	_	_
2008	_	_
)	_	_
which	_	_
were	_	_
able	_	_
to	_	_
handle	_	_
the	_	_
large	_	_
data	_	_
set	_	_
simply	_	_
produced	_	_
a	_	_
blob	_	_
as	_	_
a	_	_
visualization	_	_
which	_	_
was	_	_
not	_	_
at	_	_
all	_	_
useful	_	_
.	_	_

#245
The	_	_
underlying	_	_
problem	_	_
is	_	_
that	_	_
the	_	_
is-in-the-slice-of	_	_
graph	_	_
is	_	_
dense	_	_
and	_	_
no	_	_
traditional	_	_
clustering	_	_
can	capability	_
handle	_	_
such	_	_
dense	_	_
graphs	_	_
.	_	_

#246
Impact	_	_
of	_	_
pointer	_	_
analysis	_	_
precision	_	_
Recall	_	_
that	_	_
the	_	_
definition	_	_
of	_	_
a	_	_
coherent	_	_
dependence	_	_
cluster	_	_
is	_	_
based	_	_
on	_	_
an	_	_
underlying	_	_
depends-on	_	_
relation	_	_
,	_	_
which	_	_
is	_	_
approximated	_	_
using	_	_
program	_	_
slicing	_	_
.	_	_

#247
Pointer	_	_
analysis	_	_
plays	_	_
a	_	_
key	_	_
role	_	_
in	_	_
the	_	_
precision	_	_
of	_	_
slicing	_	_
and	_	_
the	_	_
interplay	_	_
between	_	_
pointer	_	_
analysis	_	_
and	_	_
downstream	_	_
dependence	_	_
analysis	_	_
precision	_	_
is	_	_
complex	_	_
(	_	_
Shapiro	_	_
and	_	_
Horwitz	_	_
,	_	_
1997	_	_
)	_	_
.	_	_

#248
To	_	_
understand	_	_
how	_	_
pointer	_	_
analysis	_	_
precision	_	_
impacts	_	_
the	_	_
clustering	_	_
of	_	_
the	_	_
programs	_	_
we	_	_
study	_	_
the	_	_
effect	_	_
in	_	_
this	_	_
section	_	_
.	_	_

#249
Usually	_	_
,	_	_
one	_	_
would	_	_
choose	_	_
the	_	_
pointer	_	_
analysis	_	_
with	_	_
the	_	_
highest	_	_
precision	_	_
but	_	_
there	_	_
may	options	_
be	_	_
situations	_	_
where	_	_
this	_	_
is	_	_
not	_	_
possible	_	_
and	_	_
one	_	_
has	_	_
to	_	_
revert	_	_
to	_	_
lower	_	_
precision	_	_
analysis	_	_
.	_	_

#250
This	_	_
section	_	_
presents	_	_
a	_	_
study	_	_
on	_	_
the	_	_
effect	_	_
of	_	_
various	_	_
levels	_	_
of	_	_
pointer	_	_
analysis	_	_
precision	_	_
on	_	_
the	_	_
size	_	_
of	_	_
slices	_	_
and	_	_
subsequently	_	_
on	_	_
coherent	_	_
clusters	_	_
.	_	_

#251
It	_	_
addresses	_	_
research	_	_
question	_	_
RQ1	_	_
:	_	_
What	_	_
is	_	_
the	_	_
effect	_	_
of	_	_
pointer	_	_
analysis	_	_
precision	_	_
on	_	_
coherent	_	_
clusters	_	_
?	_	_

#252
CodeSurfer	_	_
provides	_	_
three	_	_
levels	_	_
of	_	_
pointer	_	_
analysis	_	_
precision	_	_
(	_	_
Low	_	_
,	_	_
Medium	_	_
,	_	_
and	_	_
High	_	_
)	_	_
that	_	_
provide	_	_
increasingly	_	_
precise	_	_
points-to	_	_
information	_	_
at	_	_
the	_	_
expense	_	_
of	_	_
additional	_	_
memory	_	_
and	_	_
analysis	_	_
time	_	_
.	_	_

#253
The	_	_
Low	_	_
setting	_	_
uses	_	_
a	_	_
minimal	_	_
pointer	_	_
analysis	_	_
that	_	_
assumes	_	_
every	_	_
pointer	_	_
may	capability-deontic-options	_
point	_	_
to	_	_
every	_	_
object	_	_
that	_	_
has	_	_
its	_	_
address	_	_
taken	_	_
(	_	_
variable	_	_
or	_	_
function	_	_
)	_	_
.	_	_

#254
At	_	_
the	_	_
Medium	_	_
and	_	_
High	_	_
settings	_	_
,	_	_
CodeSurfer	_	_
performs	_	_
extensive	_	_
pointer	_	_
analysis	_	_
using	_	_
the	_	_
algorithm	_	_
proposed	_	_
by	_	_
Fahndrich	_	_
et	_	_
al	_	_
.	_	_
(	_	_
1998	_	_
)	_	_
,	_	_
which	_	_
implements	_	_
a	_	_
variant	_	_
of	_	_
Andersen	_	_
's	_	_
pointer	_	_
analysis	_	_
algorithm	_	_
(	_	_
Andersen	_	_
,	_	_
1994	_	_
)	_	_
(	_	_
this	_	_
includes	_	_
parameter	_	_
aliasing	_	_
)	_	_
.	_	_

#255
At	_	_
the	_	_
medium	_	_
setting	_	_
,	_	_
fields	_	_
of	_	_
a	_	_
structure	_	_
are	_	_
not	_	_
distinguished	_	_
while	_	_
the	_	_
High	_	_
level	_	_
distinguishes	_	_
structure	_	_
fields	_	_
.	_	_

#256
The	_	_
High	_	_
setting	_	_
should	deontic	_
produce	_	_
the	_	_
most	_	_
precise	_	_
slices	_	_
but	_	_
requires	_	_
more	_	_
memory	_	_
and	_	_
time	_	_
during	_	_
SDG	_	_
construction	_	_
,	_	_
which	_	_
puts	_	_
a	_	_
functional	_	_
limit	_	_
on	_	_
the	_	_
size	_	_
and	_	_
complexity	_	_
of	_	_
the	_	_
programs	_	_
that	_	_
can	capability	_
be	_	_
handled	_	_
by	_	_
CodeSurfer	_	_
.	_	_

#257
There	_	_
is	_	_
no	_	_
automatic	_	_
way	_	_
to	_	_
determine	_	_
whether	_	_
the	_	_
slices	_	_
are	_	_
correct	_	_
and	_	_
precise	_	_
.	_	_

#258
Weiser	_	_
(	_	_
1984	_	_
)	_	_
considers	_	_
smaller	_	_
slices	_	_
to	_	_
be	_	_
better	_	_
.	_	_

#259
Slice	_	_
size	_	_
is	_	_
often	_	_
used	_	_
to	_	_
measure	_	_
the	_	_
impact	_	_
of	_	_
the	_	_
analysis	_	_
'	_	_
precision	_	_
(	_	_
Shapiro	_	_
and	_	_
Horwitz	_	_
,	_	_
1997	_	_
)	_	_
,	_	_
similarly	_	_
we	_	_
also	_	_
use	_	_
slice	_	_
size	_	_
as	_	_
a	_	_
measure	_	_
of	_	_
precision	_	_
.	_	_

#260
The	_	_
study	_	_
compares	_	_
slice	_	_
and	_	_
cluster	_	_
size	_	_
for	_	_
CodeSurfer	_	_
's	_	_
three	_	_
precision	_	_
options	_	_
(	_	_
Low	_	_
,	_	_
Medium	_	_
,	_	_
High	_	_
)	_	_
to	_	_
study	_	_
the	_	_
impact	_	_
of	_	_
pointer	_	_
analysis	_	_
precision	_	_
.	_	_

#261
The	_	_
results	_	_
are	_	_
shown	_	_
in	_	_
Table	_	_
2	_	_
.	_	_

#262
Column	_	_
1	_	_
lists	_	_
the	_	_
programs	_	_
and	_	_
the	_	_
other	_	_
columns	_	_
present	_	_
the	_	_
average	_	_
slice	_	_
size	_	_
,	_	_
maximum	_	_
slice	_	_
size	_	_
,	_	_
average	_	_
cluster	_	_
size	_	_
,	_	_
and	_	_
maximum	_	_
cluster	_	_
size	_	_
,	_	_
respectively	_	_
,	_	_
for	_	_
each	_	_
of	_	_
the	_	_
three	_	_
precision	_	_
settings	_	_
.	_	_

#263
The	_	_
results	_	_
for	_	_
average	_	_
slice	_	_
size	_	_
deviation	_	_
and	_	_
largest	_	_
cluster	_	_
size	_	_
deviation	_	_
are	_	_
visualized	_	_
in	_	_
Figs	_	_
.	_	_
5	_	_
and	_	_
6	_	_
.	_	_

#264
The	_	_
graphs	_	_
use	_	_
the	_	_
High	_	_
setting	_	_
as	_	_
the	_	_
base	_	_
line	_	_
and	_	_
show	_	_
the	_	_
percentage	_	_
deviation	_	_
when	_	_
using	_	_
the	_	_
Low	_	_
and	_	_
Medium	_	_
settings	_	_
.	_	_

#265
Fig	_	_
.	_	_
5	_	_
shows	_	_
the	_	_
average	_	_
slice	_	_
size	_	_
deviation	_	_
when	_	_
using	_	_
the	_	_
lower	_	_
two	_	_
settings	_	_
compared	_	_
to	_	_
the	_	_
highest	_	_
.	_	_

#266
On	_	_
average	_	_
,	_	_
the	_	_
Low	_	_
setting	_	_
produces	_	_
slices	_	_
that	_	_
are	_	_
14	_	_
%	_	_
larger	_	_
than	_	_
the	_	_
High	_	_
setting	_	_
.	_	_

#267
Program	_	_
userv	_	_
has	_	_
the	_	_
largest	_	_
deviation	_	_
of	_	_
37	_	_
%	_	_
when	_	_
using	_	_
the	_	_
Low	_	_
setting	_	_
.	_	_

#268
For	_	_
example	_	_
,	_	_
in	_	_
userv	_	_
the	_	_
minimal	_	_
pointer	_	_
analysis	_	_
fails	_	_
to	_	_
recognize	_	_
that	_	_
the	_	_
function	_	_
pointer	_	_
oip	_	_
can	capability	negation
never	_	_
point	_	_
to	_	_
functions	_	_
sighandler_alrm	_	_
and	_	_
sighandler_child	_	_
and	_	_
includes	_	_
them	_	_
as	_	_
called	_	_
functions	_	_
at	_	_
call	_	_
sites	_	_
using	_	_
*oip	_	_
,	_	_
increasing	_	_
slice	_	_
size	_	_
significantly	_	_
.	_	_

#269
In	_	_
all	_	_
30	_	_
programs	_	_
,	_	_
the	_	_
Low	_	_
setting	_	_
yields	_	_
larger	_	_
slices	_	_
compared	_	_
to	_	_
the	_	_
High	_	_
setting	_	_
.	_	_

#270
The	_	_
Medium	_	_
setting	_	_
always	_	_
yields	_	_
smaller	_	_
slices	_	_
when	_	_
compared	_	_
to	_	_
the	_	_
Low	_	_
setting	_	_
.	_	_

#271
For	_	_
eight	_	_
programs	_	_
,	_	_
the	_	_
medium	_	_
setting	_	_
produces	_	_
the	_	_
same	_	_
average	_	_
slice	_	_
size	_	_
as	_	_
the	_	_
High	_	_
setting	_	_
.	_	_

#272
For	_	_
the	_	_
remaining	_	_
programs	_	_
the	_	_
Medium	_	_
setting	_	_
produces	_	_
slices	_	_
that	_	_
are	_	_
on	_	_
average	_	_
4	_	_
%	_	_
larger	_	_
than	_	_
when	_	_
using	_	_
the	_	_
High	_	_
setting	_	_
.	_	_

#273
The	_	_
difference	_	_
in	_	_
slice	_	_
size	_	_
occurs	_	_
because	_	_
the	_	_
Medium	_	_
setting	_	_
does	_	_
not	_	_
differentiate	_	_
between	_	_
structure	_	_
fields	_	_
,	_	_
which	_	_
the	_	_
High	_	_
setting	_	_
does	_	_
.	_	_

#274
The	_	_
largest	_	_
deviation	_	_
is	_	_
seen	_	_
in	_	_
findutils	_	_
at	_	_
29	_	_
%	_	_
.	_	_

#275
With	_	_
the	_	_
medium	_	_
setting	_	_
,	_	_
the	_	_
structure	_	_
fields	_	_
(	_	_
options	_	_
,	_	_
regex_map	_	_
,	_	_
stat_buf	_	_
and	_	_
state	_	_
)	_	_
of	_	_
findutils	_	_
are	_	_
lumped	_	_
together	_	_
as	_	_
if	_	_
each	_	_
structure	_	_
were	_	_
a	_	_
scalar	_	_
variable	_	_
,	_	_
resulting	_	_
in	_	_
larger	_	_
,	_	_
less	_	_
precise	_	_
,	_	_
slices	_	_
.	_	_

#276
Fig	_	_
.	_	_
6	_	_
visualizes	_	_
the	_	_
deviation	_	_
of	_	_
the	_	_
largest	_	_
coherent	_	_
cluster	_	_
size	_	_
when	_	_
using	_	_
the	_	_
lower	_	_
two	_	_
settings	_	_
compared	_	_
to	_	_
the	_	_
highest	_	_
.	_	_

#277
The	_	_
graph	_	_
shows	_	_
that	_	_
the	_	_
size	_	_
of	_	_
the	_	_
largest	_	_
coherent	_	_
clusters	_	_
found	_	_
when	_	_
using	_	_
the	_	_
lower	_	_
settings	_	_
is	_	_
larger	_	_
in	_	_
most	_	_
of	_	_
the	_	_
programs	_	_
.	_	_

#278
On	_	_
average	_	_
there	_	_
is	_	_
a	_	_
22	_	_
%	_	_
increase	_	_
in	_	_
the	_	_
size	_	_
of	_	_
the	_	_
largest	_	_
coherent	_	_
cluster	_	_
when	_	_
using	_	_
the	_	_
Low	_	_
setting	_	_
and	_	_
a	_	_
10	_	_
%	_	_
increase	_	_
when	_	_
using	_	_
the	_	_
Medium	_	_
setting	_	_
.	_	_

#279
In	_	_
a2ps	_	_
and	_	_
cflow	_	_
the	_	_
size	_	_
of	_	_
the	_	_
largest	_	_
cluster	_	_
increases	_	_
over	_	_
100	_	_
%	_	_
when	_	_
using	_	_
the	_	_
Medium	_	_
setting	_	_
and	_	_
over	_	_
150	_	_
%	_	_
when	_	_
using	_	_
the	_	_
Low	_	_
setting	_	_
.	_	_

#280
The	_	_
increase	_	_
in	_	_
slice	_	_
size	_	_
is	_	_
expected	_	_
to	_	_
result	_	_
in	_	_
larger	_	_
clusters	_	_
due	_	_
to	_	_
the	_	_
loss	_	_
of	_	_
precision	_	_
.	_	_

#281
The	_	_
B-SCGs	_	_
for	_	_
a2ps	_	_
for	_	_
the	_	_
three	_	_
settings	_	_
is	_	_
shown	_	_
in	_	_
Fig	_	_
.	_	_
7a	_	_
.	_	_

#282
In	_	_
the	_	_
graphs	_	_
it	_	_
is	_	_
seen	_	_
that	_	_
the	_	_
slice	_	_
sizes	_	_
get	_	_
smaller	_	_
and	_	_
have	_	_
increased	_	_
steps	_	_
in	_	_
the	_	_
(	_	_
black	_	_
)	_	_
landscape	_	_
indicating	_	_
that	_	_
the	_	_
slices	_	_
become	_	_
more	_	_
precise	_	_
.	_	_

#283
The	_	_
red	_	_
landscape	_	_
shows	_	_
that	_	_
there	_	_
is	_	_
a	_	_
large	_	_
coherent	_	_
cluster	_	_
detected	_	_
when	_	_
using	_	_
the	_	_
Low	_	_
setting	_	_
running	_	_
from	_	_
approx	_	_
.	_	_

#284
60-80	_	_
%	_	_
on	_	_
the	_	_
x-axis	_	_
.	_	_

#285
This	_	_
cluster	_	_
drops	_	_
in	_	_
size	_	_
when	_	_
using	_	_
the	_	_
Medium	_	_
setting	_	_
.	_	_

#286
At	_	_
the	_	_
High	_	_
setting	_	_
this	_	_
coherent	_	_
cluster	_	_
breaks	_	_
up	_	_
into	_	_
multiple	_	_
smaller	_	_
clusters	_	_
.	_	_

#287
In	_	_
this	_	_
case	_	_
,	_	_
a	_	_
drop	_	_
in	_	_
the	_	_
cluster	_	_
size	_	_
also	_	_
leads	_	_
to	_	_
breaking	_	_
of	_	_
the	_	_
cluster	_	_
in	_	_
to	_	_
multiple	_	_
smaller	_	_
clusters	_	_
.	_	_

#288
In	_	_
the	_	_
SCGs	_	_
for	_	_
cflow	_	_
(	_	_
Fig	_	_
.	_	_
7b	_	_
)	_	_
a	_	_
similar	_	_
drop	_	_
in	_	_
the	_	_
slice	_	_
size	_	_
and	_	_
cluster	_	_
size	_	_
is	_	_
observed	_	_
.	_	_

#289
However	_	_
,	_	_
unlike	_	_
a2ps	_	_
the	_	_
large	_	_
coherent	_	_
cluster	_	_
does	_	_
not	_	_
break	_	_
into	_	_
smaller	_	_
clusters	_	_
but	_	_
only	_	_
drops	_	_
in	_	_
size	_	_
.	_	_

#290
The	_	_
largest	_	_
cluster	_	_
when	_	_
using	_	_
the	_	_
Low	_	_
setting	_	_
runs	_	_
from	_	_
60	_	_
%	_	_
to	_	_
85	_	_
%	_	_
on	_	_
the	_	_
x-axis	_	_
.	_	_

#291
This	_	_
cluster	_	_
reduces	_	_
in	_	_
size	_	_
and	_	_
shifts	_	_
position	_	_
running	_	_
30	_	_
%	_	_
to	_	_
45	_	_
%	_	_
x-axis	_	_
when	_	_
using	_	_
the	_	_
Medium	_	_
setting	_	_
.	_	_

#292
The	_	_
cluster	_	_
further	_	_
drops	_	_
in	_	_
size	_	_
down	_	_
to	_	_
5	_	_
%	_	_
running	_	_
25-30	_	_
%	_	_
on	_	_
the	_	_
x-axis	_	_
when	_	_
using	_	_
the	_	_
High	_	_
setting	_	_
.	_	_

#293
In	_	_
this	_	_
case	_	_
the	_	_
largest	_	_
cluster	_	_
has	_	_
a	_	_
significant	_	_
drop	_	_
in	_	_
size	_	_
but	_	_
does	_	_
not	_	_
break	_	_
into	_	_
multiple	_	_
smaller	_	_
clusters	_	_
.	_	_

#294
Surprisingly	_	_
,	_	_
Fig	_	_
.	_	_
6	_	_
also	_	_
shows	_	_
seven	_	_
programs	_	_
where	_	_
the	_	_
largest	_	_
coherent	_	_
cluster	_	_
size	_	_
actually	_	_
increases	_	_
when	_	_
using	_	_
the	_	_
highest	_	_
pointer	_	_
analysis	_	_
setting	_	_
on	_	_
CodeSurfer	_	_
.	_	_

#295
Fig	_	_
.	_	_
7c	_	_
shows	_	_
the	_	_
B-SCGs	_	_
for	_	_
acm	_	_
which	_	_
falls	_	_
in	_	_
this	_	_
category	_	_
.	_	_

#296
This	_	_
counter-intuitive	_	_
result	_	_
is	_	_
seen	_	_
only	_	_
when	_	_
the	_	_
more	_	_
precise	_	_
analysis	_	_
determines	_	_
that	_	_
certain	_	_
functions	_	_
can	capability	negation
not	_	_
be	_	_
called	_	_
and	_	_
thus	_	_
excludes	_	_
them	_	_
from	_	_
the	_	_
slice	_	_
.	_	_

#297
Although	_	_
in	_	_
all	_	_
such	_	_
instances	_	_
slices	_	_
get	_	_
smaller	_	_
,	_	_
the	_	_
clusters	_	_
may	capability-options	_
grow	_	_
if	_	_
the	_	_
smaller	_	_
slices	_	_
match	_	_
other	_	_
slices	_	_
already	_	_
forming	_	_
a	_	_
cluster	_	_
.	_	_

#298
For	_	_
example	_	_
,	_	_
consider	_	_
replacing	_	_
function	_	_
f6	_	_
in	_	_
Fig	_	_
.	_	_
1	_	_
with	_	_
the	_	_
code	_	_
shown	_	_
in	_	_
Fig	_	_
.	_	_
8	_	_
,	_	_
where	_	_
f	_	_
depends	_	_
on	_	_
a	_	_
function	_	_
call	_	_
to	_	_
a	_	_
function	_	_
referenced	_	_
through	_	_
the	_	_
function	_	_
pointer	_	_
p.	_	_
Assume	_	_
that	_	_
the	_	_
highest	_	_
precision	_	_
pointer	_	_
analysis	_	_
determines	_	_
that	_	_
p	_	_
does	_	_
not	_	_
point	_	_
to	_	_
f2	_	_
and	_	_
therefore	_	_
there	_	_
is	_	_
no	_	_
call	_	_
to	_	_
f2	_	_
or	_	_
any	_	_
other	_	_
function	_	_
from	_	_
f6	_	_
.	_	_

#299
The	_	_
higher	_	_
precision	_	_
analysis	_	_
would	_	_
therefore	_	_
determine	_	_
that	_	_
the	_	_
forward	_	_
slices	_	_
and	_	_
backward	_	_
slices	_	_
of	_	_
a	_	_
,	_	_
b	_	_
and	_	_
c	_	_
are	_	_
equal	_	_
,	_	_
hence	_	_
grouping	_	_
these	_	_
three	_	_
vertices	_	_
in	_	_
a	_	_
coherent	_	_
cluster	_	_
.	_	_

#300
Whereas	_	_
the	_	_
lower	_	_
precision	_	_
is	_	_
unable	_	_
to	_	_
determine	_	_
that	_	_
p	_	_
can	capability	negation
not	_	_
point	_	_
to	_	_
f2	_	_
,	_	_
the	_	_
backward	_	_
slice	_	_
on	_	_
f	_	_
will	_	_
conservatively	_	_
include	_	_
b.	_	_
This	_	_
will	_	_
lead	_	_
the	_	_
higher	_	_
precision	_	_
analysis	_	_
to	_	_
determine	_	_
that	_	_
the	_	_
set	_	_
of	_	_
vertices	_	_
{	_	_
a	_	_
,	_	_
b	_	_
,	_	_
c	_	_
}	_	_
is	_	_
one	_	_
coherent	_	_
cluster	_	_
whereas	_	_
the	_	_
lower	_	_
precision	_	_
analysis	_	_
include	_	_
only	_	_
the	_	_
set	_	_
of	_	_
vertices	_	_
{	_	_
a	_	_
,	_	_
c	_	_
}	_	_
in	_	_
the	_	_
same	_	_
coherent	_	_
cluster	_	_
.	_	_

#301
Although	_	_
we	_	_
do	_	_
not	_	_
explicitly	_	_
report	_	_
the	_	_
project	_	_
build	_	_
times	_	_
on	_	_
CodeSurfer	_	_
and	_	_
the	_	_
clustering	_	_
runtimes	_	_
for	_	_
the	_	_
lower	_	_
settings	_	_
,	_	_
it	_	_
has	_	_
been	_	_
our	_	_
experience	_	_
that	_	_
in	_	_
the	_	_
majority	_	_
of	_	_
the	_	_
cases	_	_
the	_	_
build	_	_
times	_	_
for	_	_
the	_	_
lower	_	_
settings	_	_
were	_	_
smaller	_	_
.	_	_

#302
However	_	_
,	_	_
as	_	_
lower	_	_
pointer	_	_
analysis	_	_
settings	_	_
yield	_	_
large	_	_
points-to	_	_
sets	_	_
and	_	_
subsequently	_	_
larger	_	_
slices	_	_
,	_	_
the	_	_
clustering	_	_
runtimes	_	_
were	_	_
higher	_	_
than	_	_
when	_	_
using	_	_
the	_	_
highest	_	_
setting	_	_
.	_	_

#303
Moreover	_	_
,	_	_
in	_	_
some	_	_
cases	_	_
with	_	_
the	_	_
lower	_	_
settings	_	_
there	_	_
was	_	_
an	_	_
explosive	_	_
growth	_	_
in	_	_
summary	_	_
edge	_	_
generation	_	_
which	_	_
resulted	_	_
in	_	_
exceptionally	_	_
high	_	_
project	_	_
build	_	_
times	_	_
and	_	_
clustering	_	_
runtimes	_	_
.	_	_

#304
As	_	_
an	_	_
answer	_	_
to	_	_
RQ1	_	_
,	_	_
we	_	_
find	_	_
that	_	_
in	_	_
the	_	_
majority	_	_
of	_	_
the	_	_
cases	_	_
the	_	_
Medium	_	_
and	_	_
Low	_	_
settings	_	_
result	_	_
in	_	_
larger	_	_
coherent	_	_
clusters	_	_
when	_	_
compared	_	_
to	_	_
the	_	_
High	_	_
setting	_	_
.	_	_

#305
For	_	_
the	_	_
remaining	_	_
cases	_	_
we	_	_
have	_	_
identified	_	_
valid	_	_
scenarios	_	_
where	_	_
more	_	_
precise	_	_
pointer	_	_
analysis	_	_
can	capability-options	_
result	_	_
in	_	_
larger	_	_
coherent	_	_
clusters	_	_
.	_	_

#306
The	_	_
results	_	_
also	_	_
confirm	_	_
that	_	_
a	_	_
more	_	_
precise	_	_
pointer	_	_
analysis	_	_
leads	_	_
to	_	_
more	_	_
precise	_	_
(	_	_
smaller	_	_
)	_	_
slices	_	_
.	_	_

#307
Because	_	_
it	_	_
gives	_	_
the	_	_
most	_	_
precise	_	_
slices	_	_
and	_	_
most	_	_
accurate	_	_
clusters	_	_
,	_	_
the	_	_
remainder	_	_
of	_	_
the	_	_
paper	_	_
uses	_	_
the	_	_
highest	_	_
CodeSurfer	_	_
pointer	_	_
analysis	_	_
setting	_	_
.	_	_

#308
Validity	_	_
of	_	_
the	_	_
hash	_	_
function	_	_
This	_	_
section	_	_
addresses	_	_
research	_	_
question	_	_
RQ2	_	_
:	_	_
How	_	_
precise	_	_
is	_	_
hashing	_	_
as	_	_
a	_	_
proxy	_	_
for	_	_
comparing	_	_
slices	_	_
?	_	_

#309
The	_	_
section	_	_
first	_	_
gives	_	_
a	_	_
brief	_	_
description	_	_
of	_	_
the	_	_
hash	_	_
function	_	_
and	_	_
then	_	_
validates	_	_
the	_	_
use	_	_
of	_	_
comparing	_	_
slice	_	_
hash	_	_
values	_	_
in	_	_
lieu	_	_
of	_	_
comparing	_	_
actual	_	_
slice	_	_
content	_	_
.	_	_

#310
The	_	_
use	_	_
of	_	_
hash	_	_
values	_	_
to	_	_
represent	_	_
slices	_	_
reduces	_	_
both	_	_
the	_	_
memory	_	_
requirement	_	_
and	_	_
runtime	_	_
,	_	_
as	_	_
it	_	_
is	_	_
no	_	_
longer	_	_
necessary	_	_
to	_	_
store	_	_
or	_	_
compare	_	_
entire	_	_
slices	_	_
.	_	_

#311
The	_	_
hash	_	_
function	_	_
,	_	_
denoted	_	_
H	_	_
in	_	_
Definition	_	_
2.6	_	_
,	_	_
uses	_	_
XOR	_	_
operations	_	_
iteratively	_	_
on	_	_
the	_	_
unique	_	_
vertex	_	_
IDs	_	_
(	_	_
of	_	_
the	_	_
SDG	_	_
)	_	_
which	_	_
are	_	_
included	_	_
in	_	_
a	_	_
slice	_	_
to	_	_
generate	_	_
a	_	_
hash	_	_
for	_	_
the	_	_
entire	_	_
slice	_	_
.	_	_

#312
We	_	_
chose	_	_
XOR	_	_
as	_	_
the	_	_
hash	_	_
operator	_	_
because	_	_
we	_	_
do	_	_
not	_	_
have	_	_
duplicate	_	_
vertices	_	_
in	_	_
a	_	_
slice	_	_
and	_	_
the	_	_
order	_	_
of	_	_
the	_	_
vertices	_	_
in	_	_
the	_	_
slice	_	_
does	_	_
not	_	_
matter	_	_
.	_	_

#313
A	_	_
slice	_	_
S	_	_
is	_	_
a	_	_
set	_	_
of	_	_
SDG	_	_
vertices	_	_
{	_	_
v1	_	_
,	_	_
…	_	_
,	_	_
vn	_	_
}	_	_
(	_	_
n≥1	_	_
)	_	_
and	_	_
id	_	_
(	_	_
vi	_	_
)	_	_
represents	_	_
the	_	_
unique	_	_
vertex	_	_
ID	_	_
assigned	_	_
by	_	_
CodeSurfer	_	_
to	_	_
vertex	_	_
vi	_	_
,	_	_
where	_	_
1≤i≤n	_	_
.	_	_

#314
The	_	_
hash	_	_
function	_	_
H	_	_
for	_	_
S	_	_
is	_	_
defined	_	_
as	_	_
HS	_	_
,	_	_
where	_	_
(	_	_
2	_	_
)	_	_
HS=⊕i=1nid	_	_
(	_	_
vi	_	_
)	_	_
The	_	_
remainder	_	_
of	_	_
this	_	_
section	_	_
presents	_	_
a	_	_
validation	_	_
study	_	_
of	_	_
the	_	_
hash	_	_
function	_	_
.	_	_

#315
The	_	_
validation	_	_
is	_	_
needed	_	_
to	_	_
confirm	_	_
that	_	_
the	_	_
hash	_	_
values	_	_
provide	_	_
a	_	_
sufficiently	_	_
accurate	_	_
summary	_	_
of	_	_
slices	_	_
to	_	_
support	_	_
the	_	_
correct	_	_
partitioning	_	_
of	_	_
SDG	_	_
vertices	_	_
into	_	_
coherent	_	_
clusters	_	_
.	_	_

#316
Ideally	_	_
,	_	_
the	_	_
hash	_	_
function	_	_
would	_	_
produce	_	_
a	_	_
unique	_	_
hash	_	_
value	_	_
for	_	_
each	_	_
distinct	_	_
slice	_	_
.	_	_

#317
The	_	_
validation	_	_
study	_	_
aims	_	_
to	_	_
find	_	_
the	_	_
number	_	_
of	_	_
unique	_	_
slices	_	_
for	_	_
which	_	_
the	_	_
hash	_	_
function	_	_
successfully	_	_
produces	_	_
an	_	_
unique	_	_
hash	_	_
value	_	_
.	_	_

#318
For	_	_
the	_	_
validation	_	_
study	_	_
we	_	_
chose	_	_
16	_	_
programs	_	_
from	_	_
the	_	_
set	_	_
of	_	_
30	_	_
subject	_	_
programs	_	_
.	_	_

#319
The	_	_
largest	_	_
programs	_	_
were	_	_
not	_	_
included	_	_
in	_	_
the	_	_
validation	_	_
study	_	_
to	_	_
make	_	_
the	_	_
study	_	_
time-manageable	_	_
.	_	_

#320
Results	_	_
are	_	_
based	_	_
on	_	_
both	_	_
the	_	_
backward	_	_
and	_	_
forward	_	_
slices	_	_
for	_	_
every	_	_
vertex	_	_
of	_	_
these	_	_
16	_	_
programs	_	_
.	_	_

#321
To	_	_
present	_	_
the	_	_
notion	_	_
of	_	_
precision	_	_
we	_	_
introduce	_	_
the	_	_
following	_	_
formalization	_	_
.	_	_

#322
Let	_	_
V	_	_
be	_	_
the	_	_
set	_	_
of	_	_
all	_	_
source-code	_	_
representing	_	_
SDG	_	_
vertices	_	_
for	_	_
a	_	_
given	_	_
program	_	_
P	_	_
and	_	_
US	_	_
denote	_	_
the	_	_
number	_	_
of	_	_
unique	_	_
slices	_	_
:	_	_
US=|	_	_
{	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
:	_	_
x∈V	_	_
}	_	_
|+|	_	_
{	_	_
FSlice	_	_
(	_	_
x	_	_
)	_	_
:	_	_
x∈V	_	_
}	_	_
|	_	_
.	_	_

#323
Note	_	_
that	_	_
if	_	_
all	_	_
vertices	_	_
have	_	_
the	_	_
same	_	_
backward	_	_
slice	_	_
then	_	_
{	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
:	_	_
x∈V	_	_
}	_	_
is	_	_
a	_	_
singleton	_	_
set	_	_
.	_	_

#324
Finally	_	_
,	_	_
let	_	_
UH	_	_
be	_	_
the	_	_
number	_	_
of	_	_
unique	_	_
hash-values	_	_
,	_	_
UH=|	_	_
{	_	_
H	_	_
(	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
)	_	_
:	_	_
x∈V	_	_
}	_	_
|+|	_	_
{	_	_
H	_	_
(	_	_
FSlice	_	_
(	_	_
x	_	_
)	_	_
)	_	_
:	_	_
x∈V	_	_
}	_	_
|	_	_
.	_	_

#325
The	_	_
accuracy	_	_
of	_	_
hash	_	_
function	_	_
H	_	_
is	_	_
given	_	_
as	_	_
Hashed	_	_
Slice	_	_
Precision	_	_
,	_	_
HSP=UH/US	_	_
.	_	_

#326
A	_	_
precision	_	_
of	_	_
1.00	_	_
(	_	_
US=UH	_	_
)	_	_
means	_	_
the	_	_
hash	_	_
function	_	_
is	_	_
100	_	_
%	_	_
accurate	_	_
(	_	_
i.e.	_	_
,	_	_
it	_	_
produces	_	_
a	_	_
unique	_	_
hash	_	_
value	_	_
for	_	_
every	_	_
distinct	_	_
slice	_	_
)	_	_
whereas	_	_
a	_	_
precision	_	_
of	_	_
1/US	_	_
means	_	_
that	_	_
the	_	_
hash	_	_
function	_	_
produces	_	_
the	_	_
same	_	_
hash	_	_
value	_	_
for	_	_
every	_	_
slice	_	_
leaving	_	_
UH=1	_	_
.	_	_

#327
Table	_	_
3	_	_
summarizes	_	_
the	_	_
results	_	_
.	_	_

#328
The	_	_
first	_	_
column	_	_
lists	_	_
the	_	_
programs	_	_
.	_	_

#329
The	_	_
second	_	_
and	_	_
the	_	_
third	_	_
columns	_	_
report	_	_
the	_	_
values	_	_
of	_	_
US	_	_
and	_	_
UH	_	_
respectively	_	_
.	_	_

#330
The	_	_
fourth	_	_
column	_	_
reports	_	_
HSP	_	_
,	_	_
the	_	_
precision	_	_
attained	_	_
using	_	_
hash	_	_
values	_	_
to	_	_
compare	_	_
slices	_	_
.	_	_

#331
Considering	_	_
all	_	_
78,587	_	_
unique	_	_
slices	_	_
the	_	_
hash	_	_
function	_	_
produced	_	_
unique	_	_
hash	_	_
values	_	_
for	_	_
74,575	_	_
of	_	_
them	_	_
,	_	_
resulting	_	_
in	_	_
an	_	_
average	_	_
precision	_	_
of	_	_
94.97	_	_
%	_	_
.	_	_

#332
In	_	_
other	_	_
words	_	_
,	_	_
the	_	_
hash	_	_
function	_	_
fails	_	_
to	_	_
produce	_	_
unique	_	_
hash	_	_
values	_	_
for	_	_
just	_	_
over	_	_
5	_	_
%	_	_
of	_	_
the	_	_
slices	_	_
.	_	_

#333
Considering	_	_
the	_	_
precision	_	_
of	_	_
individual	_	_
programs	_	_
,	_	_
five	_	_
of	_	_
the	_	_
programs	_	_
have	_	_
a	_	_
precision	_	_
greater	_	_
than	_	_
97	_	_
%	_	_
,	_	_
while	_	_
the	_	_
lowest	_	_
precision	_	_
,	_	_
for	_	_
findutils	_	_
,	_	_
is	_	_
92.37	_	_
%	_	_
.	_	_

#334
This	_	_
is	_	_
,	_	_
however	_	_
,	_	_
a	_	_
significant	_	_
improvement	_	_
over	_	_
previous	_	_
use	_	_
of	_	_
slice	_	_
size	_	_
as	_	_
the	_	_
hash	_	_
value	_	_
,	_	_
which	_	_
is	_	_
only	_	_
78.3	_	_
%	_	_
accurate	_	_
in	_	_
the	_	_
strict	_	_
case	_	_
of	_	_
zero	_	_
tolerance	_	_
for	_	_
variation	_	_
in	_	_
slice	_	_
contents	_	_
(	_	_
Binkley	_	_
and	_	_
Harman	_	_
,	_	_
2005	_	_
)	_	_
.	_	_

#335
Coherent	_	_
cluster	_	_
identification	_	_
uses	_	_
two	_	_
hash	_	_
values	_	_
for	_	_
each	_	_
vertex	_	_
(	_	_
one	_	_
for	_	_
the	_	_
backward	_	_
slice	_	_
and	_	_
other	_	_
for	_	_
the	_	_
forward	_	_
slice	_	_
)	_	_
and	_	_
the	_	_
slice	_	_
sizes	_	_
.	_	_

#336
Slice	_	_
size	_	_
matching	_	_
filters	_	_
out	_	_
some	_	_
instances	_	_
where	_	_
the	_	_
hash	_	_
values	_	_
happen	_	_
to	_	_
be	_	_
the	_	_
same	_	_
by	_	_
coincidence	_	_
but	_	_
the	_	_
slices	_	_
are	_	_
different	_	_
.	_	_

#337
The	_	_
likelihood	_	_
of	_	_
both	_	_
hash	_	_
values	_	_
matching	_	_
those	_	_
from	_	_
another	_	_
vertex	_	_
with	_	_
different	_	_
slices	_	_
is	_	_
less	_	_
than	_	_
that	_	_
of	_	_
a	_	_
single	_	_
hash	_	_
matching	_	_
.	_	_

#338
Extending	_	_
US	_	_
and	_	_
UH	_	_
to	_	_
clusters	_	_
,	_	_
columns	_	_
5	_	_
and	_	_
6	_	_
(	_	_
Table	_	_
3	_	_
)	_	_
report	_	_
CC	_	_
,	_	_
the	_	_
number	_	_
of	_	_
coherent	_	_
clusters	_	_
in	_	_
a	_	_
program	_	_
and	_	_
HCC	_	_
,	_	_
the	_	_
number	_	_
of	_	_
coherent	_	_
clusters	_	_
found	_	_
using	_	_
hashing	_	_
.	_	_

#339
The	_	_
final	_	_
column	_	_
shows	_	_
the	_	_
precision	_	_
attained	_	_
using	_	_
hashing	_	_
to	_	_
identify	_	_
clusters	_	_
,	_	_
HCP=HCC/CC	_	_
.	_	_

#340
The	_	_
results	_	_
show	_	_
that	_	_
of	_	_
the	_	_
40,169	_	_
coherent	_	_
clusters	_	_
,	_	_
40,083	_	_
are	_	_
uniquely	_	_
identified	_	_
using	_	_
hashing	_	_
,	_	_
which	_	_
yields	_	_
a	_	_
precision	_	_
of	_	_
99.72	_	_
%	_	_
.	_	_

#341
Five	_	_
of	_	_
the	_	_
programs	_	_
show	_	_
total	_	_
agreement	_	_
,	_	_
furthermore	_	_
for	_	_
every	_	_
program	_	_
HCP	_	_
is	_	_
over	_	_
99	_	_
%	_	_
,	_	_
except	_	_
for	_	_
userv	_	_
,	_	_
which	_	_
has	_	_
the	_	_
lowest	_	_
precision	_	_
of	_	_
97.76	_	_
%	_	_
.	_	_

#342
This	_	_
can	feasibility	_
be	_	_
attributed	_	_
to	_	_
the	_	_
large	_	_
percentage	_	_
(	_	_
96	_	_
%	_	_
)	_	_
of	_	_
single	_	_
vertex	_	_
clusters	_	_
in	_	_
userv	_	_
.	_	_

#343
The	_	_
hash	_	_
values	_	_
for	_	_
slices	_	_
taken	_	_
with	_	_
respect	_	_
to	_	_
these	_	_
single-vertex	_	_
clusters	_	_
have	_	_
a	_	_
higher	_	_
potential	_	_
for	_	_
collision	_	_
leading	_	_
to	_	_
a	_	_
reduction	_	_
in	_	_
overall	_	_
precision	_	_
.	_	_

#344
In	_	_
summary	_	_
,	_	_
as	_	_
an	_	_
answer	_	_
to	_	_
RQ2	_	_
,	_	_
the	_	_
hash-based	_	_
approximation	_	_
is	_	_
found	_	_
to	_	_
be	_	_
sufficiently	_	_
accurate	_	_
at	_	_
94.97	_	_
%	_	_
for	_	_
slices	_	_
and	_	_
at	_	_
99.72	_	_
%	_	_
for	_	_
clusters	_	_
(	_	_
for	_	_
the	_	_
studied	_	_
programs	_	_
)	_	_
.	_	_

#345
Thus	_	_
,	_	_
comparing	_	_
hash	_	_
values	_	_
can	feasibility	_
replace	_	_
the	_	_
need	_	_
to	_	_
compare	_	_
actual	_	_
slices	_	_
.	_	_

#346
Do	_	_
large	_	_
coherent	_	_
clusters	_	_
occur	_	_
in	_	_
practice	_	_
?	_	_

#347
Having	_	_
demonstrated	_	_
that	_	_
hash	_	_
function	_	_
H	_	_
can	capability-feasibility	_
be	_	_
used	_	_
to	_	_
effectively	_	_
approximate	_	_
slice	_	_
contents	_	_
,	_	_
this	_	_
section	_	_
and	_	_
the	_	_
following	_	_
section	_	_
consider	_	_
the	_	_
validation	_	_
research	_	_
question	_	_
,	_	_
RQ3	_	_
:	_	_
How	_	_
large	_	_
are	_	_
coherent	_	_
clusters	_	_
that	_	_
exist	_	_
in	_	_
production	_	_
source	_	_
code	_	_
and	_	_
which	_	_
patterns	_	_
of	_	_
clustering	_	_
can	feasibility	_
be	_	_
identified	_	_
?	_	_

#348
The	_	_
question	_	_
is	_	_
first	_	_
answered	_	_
quantitatively	_	_
using	_	_
the	_	_
size	_	_
of	_	_
the	_	_
largest	_	_
coherent	_	_
cluster	_	_
in	_	_
each	_	_
program	_	_
and	_	_
then	_	_
through	_	_
visual	_	_
analysis	_	_
of	_	_
the	_	_
SCGs	_	_
.	_	_

#349
To	_	_
assess	_	_
if	_	_
a	_	_
program	_	_
includes	_	_
a	_	_
large	_	_
coherent	_	_
cluster	_	_
,	_	_
requires	_	_
making	_	_
a	_	_
judgement	_	_
concerning	_	_
what	_	_
threshold	_	_
constitutes	_	_
large	_	_
.	_	_

#350
Following	_	_
prior	_	_
empirical	_	_
work	_	_
(	_	_
Binkley	_	_
and	_	_
Harman	_	_
,	_	_
2005	_	_
;	_	_
Harman	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
;	_	_
Islam	_	_
et	_	_
al.	_	_
,	_	_
2010a	_	_
,	_	_
b	_	_
)	_	_
,	_	_
a	_	_
threshold	_	_
of	_	_
10	_	_
%	_	_
is	_	_
used	_	_
.	_	_

#351
In	_	_
other	_	_
words	_	_
,	_	_
a	_	_
program	_	_
is	_	_
said	_	_
to	_	_
contain	_	_
a	_	_
large	_	_
coherent	_	_
cluster	_	_
if	_	_
10	_	_
%	_	_
of	_	_
the	_	_
program	_	_
's	_	_
SDG	_	_
vertices	_	_
produce	_	_
the	_	_
same	_	_
backward	_	_
slice	_	_
as	_	_
well	_	_
as	_	_
the	_	_
same	_	_
forward	_	_
slice	_	_
.	_	_

#352
Fig	_	_
.	_	_
9	_	_
shows	_	_
the	_	_
size	_	_
of	_	_
the	_	_
largest	_	_
coherent	_	_
cluster	_	_
found	_	_
in	_	_
each	_	_
of	_	_
the	_	_
30	_	_
subject	_	_
programs	_	_
.	_	_

#353
The	_	_
programs	_	_
are	_	_
divided	_	_
into	_	_
3	_	_
groups	_	_
based	_	_
on	_	_
the	_	_
size	_	_
of	_	_
the	_	_
largest	_	_
cluster	_	_
present	_	_
in	_	_
the	_	_
program.Small	_	_
:	_	_
Small	_	_
consists	_	_
of	_	_
seven	_	_
programs	_	_
none	_	_
of	_	_
which	_	_
have	_	_
a	_	_
coherent	_	_
cluster	_	_
constituting	_	_
over	_	_
10	_	_
%	_	_
of	_	_
the	_	_
program	_	_
vertices	_	_
.	_	_

#354
These	_	_
programs	_	_
are	_	_
archimedes	_	_
,	_	_
time	_	_
,	_	_
wdiff	_	_
,	_	_
byacc	_	_
,	_	_
a2ps	_	_
,	_	_
cflow	_	_
and	_	_
userv	_	_
.	_	_

#355
Although	_	_
it	_	_
may	speculation	_
be	_	_
interesting	_	_
to	_	_
study	_	_
why	_	_
large	_	_
clusters	_	_
are	_	_
not	_	_
present	_	_
in	_	_
these	_	_
programs	_	_
,	_	_
this	_	_
paper	_	_
focuses	_	_
on	_	_
studying	_	_
the	_	_
existence	_	_
and	_	_
implications	_	_
of	_	_
large	_	_
coherent	_	_
clusters	_	_
.	_	_

#356
Large	_	_
:	_	_
This	_	_
group	_	_
consists	_	_
of	_	_
programs	_	_
that	_	_
have	_	_
at	_	_
least	_	_
one	_	_
cluster	_	_
with	_	_
size	_	_
10	_	_
%	_	_
or	_	_
larger	_	_
.	_	_

#357
As	_	_
there	_	_
are	_	_
programs	_	_
containing	_	_
much	_	_
larger	_	_
coherent	_	_
clusters	_	_
,	_	_
a	_	_
program	_	_
is	_	_
placed	_	_
in	_	_
this	_	_
group	_	_
if	_	_
it	_	_
has	_	_
a	_	_
large	_	_
cluster	_	_
between	_	_
the	_	_
size	_	_
10	_	_
%	_	_
and	_	_
50	_	_
%	_	_
.	_	_

#358
Over	_	_
two-thirds	_	_
of	_	_
the	_	_
programs	_	_
studied	_	_
fall	_	_
in	_	_
this	_	_
category	_	_
.	_	_

#359
The	_	_
program	_	_
at	_	_
the	_	_
bottom	_	_
of	_	_
this	_	_
group	_	_
(	_	_
acct	_	_
)	_	_
has	_	_
a	_	_
coherent	_	_
cluster	_	_
of	_	_
size	_	_
11	_	_
%	_	_
and	_	_
the	_	_
largest	_	_
program	_	_
in	_	_
this	_	_
group	_	_
(	_	_
copia	_	_
)	_	_
has	_	_
a	_	_
coherent	_	_
cluster	_	_
of	_	_
size	_	_
48	_	_
%	_	_
.	_	_

#360
We	_	_
present	_	_
both	_	_
these	_	_
programs	_	_
as	_	_
case	_	_
studies	_	_
and	_	_
discuss	_	_
their	_	_
clustering	_	_
in	_	_
detail	_	_
in	_	_
Sections	_	_
3.6.1	_	_
and	_	_
3.6.4	_	_
,	_	_
respectively	_	_
.	_	_

#361
The	_	_
program	_	_
bc	_	_
which	_	_
has	_	_
multiple	_	_
large	_	_
clusters	_	_
with	_	_
the	_	_
largest	_	_
of	_	_
size	_	_
32	_	_
%	_	_
falls	_	_
in	_	_
the	_	_
middle	_	_
of	_	_
this	_	_
group	_	_
and	_	_
is	_	_
also	_	_
presented	_	_
as	_	_
a	_	_
case	_	_
study	_	_
in	_	_
Section	_	_
3.6.3	_	_
.	_	_

#362
Huge	_	_
:	_	_
The	_	_
final	_	_
group	_	_
consists	_	_
of	_	_
programs	_	_
that	_	_
have	_	_
a	_	_
large	_	_
coherent	_	_
cluster	_	_
whose	_	_
size	_	_
is	_	_
over	_	_
50	_	_
%	_	_
.	_	_

#363
Out	_	_
of	_	_
the	_	_
30	_	_
programs	_	_
4	_	_
fall	_	_
in	_	_
this	_	_
group	_	_
.	_	_

#364
These	_	_
programs	_	_
are	_	_
indent	_	_
,	_	_
ed	_	_
,	_	_
barcode	_	_
and	_	_
gcal	_	_
.	_	_

#365
From	_	_
this	_	_
group	_	_
,	_	_
we	_	_
present	_	_
indent	_	_
as	_	_
a	_	_
case	_	_
study	_	_
in	_	_
Section	_	_
3.6.2	_	_
.	_	_

#366
In	_	_
summary	_	_
all	_	_
but	_	_
7	_	_
of	_	_
the	_	_
30	_	_
subject	_	_
programs	_	_
contain	_	_
a	_	_
large	_	_
coherent	_	_
cluster	_	_
.	_	_

#367
Therefore	_	_
,	_	_
over	_	_
75	_	_
%	_	_
of	_	_
the	_	_
subject	_	_
programs	_	_
contain	_	_
a	_	_
coherent	_	_
cluster	_	_
of	_	_
size	_	_
10	_	_
%	_	_
or	_	_
more	_	_
.	_	_

#368
Furthermore	_	_
,	_	_
half	_	_
the	_	_
programs	_	_
contain	_	_
a	_	_
coherent	_	_
cluster	_	_
of	_	_
at	_	_
least	_	_
20	_	_
%	_	_
in	_	_
size	_	_
.	_	_

#369
It	_	_
is	_	_
interesting	_	_
to	_	_
note	_	_
that	_	_
although	_	_
this	_	_
grouping	_	_
is	_	_
based	_	_
only	_	_
on	_	_
the	_	_
largest	_	_
cluster	_	_
,	_	_
many	_	_
of	_	_
the	_	_
programs	_	_
contain	_	_
multiple	_	_
large	_	_
coherent	_	_
clusters	_	_
.	_	_

#370
For	_	_
example	_	_
,	_	_
ed	_	_
,	_	_
ctags	_	_
,	_	_
nano	_	_
,	_	_
less	_	_
,	_	_
bc	_	_
,	_	_
findutils	_	_
,	_	_
flex	_	_
and	_	_
garpd	_	_
all	_	_
have	_	_
multiple	_	_
large	_	_
coherent	_	_
clusters	_	_
.	_	_

#371
It	_	_
is	_	_
also	_	_
interesting	_	_
to	_	_
note	_	_
that	_	_
there	_	_
is	_	_
no	_	_
correlation	_	_
between	_	_
a	_	_
program	_	_
's	_	_
size	_	_
(	_	_
measured	_	_
in	_	_
SLoC	_	_
)	_	_
and	_	_
the	_	_
size	_	_
of	_	_
its	_	_
largest	_	_
coherent	_	_
cluster	_	_
.	_	_

#372
For	_	_
example	_	_
,	_	_
in	_	_
Table	_	_
1	_	_
two	_	_
programs	_	_
of	_	_
very	_	_
different	_	_
sizes	_	_
,	_	_
cflow	_	_
and	_	_
userv	_	_
,	_	_
have	_	_
similar	_	_
largest-cluster	_	_
sizes	_	_
of	_	_
8	_	_
%	_	_
and	_	_
9	_	_
%	_	_
,	_	_
respectively	_	_
.	_	_

#373
Whereas	_	_
programs	_	_
acct	_	_
and	_	_
ed	_	_
,	_	_
of	_	_
similar	_	_
size	_	_
,	_	_
have	_	_
very	_	_
different	_	_
largest	_	_
coherent	_	_
clusters	_	_
of	_	_
sizes	_	_
11	_	_
%	_	_
and	_	_
55	_	_
%	_	_
.	_	_

#374
Therefore	_	_
as	_	_
an	_	_
answer	_	_
to	_	_
first	_	_
part	_	_
of	_	_
RQ3	_	_
,	_	_
the	_	_
study	_	_
finds	_	_
that	_	_
23	_	_
of	_	_
the	_	_
30	_	_
programs	_	_
studied	_	_
have	_	_
a	_	_
large	_	_
coherent	_	_
cluster	_	_
.	_	_

#375
Some	_	_
programs	_	_
also	_	_
have	_	_
a	_	_
huge	_	_
cluster	_	_
covering	_	_
over	_	_
50	_	_
%	_	_
of	_	_
the	_	_
program	_	_
vertices	_	_
.	_	_

#376
Furthermore	_	_
,	_	_
the	_	_
choice	_	_
of	_	_
10	_	_
%	_	_
as	_	_
a	_	_
threshold	_	_
for	_	_
classifying	_	_
a	_	_
cluster	_	_
as	_	_
large	_	_
is	_	_
a	_	_
relatively	_	_
conservative	_	_
choice	_	_
.	_	_

#377
Thus	_	_
,	_	_
the	_	_
results	_	_
presented	_	_
in	_	_
this	_	_
section	_	_
can	feasibility-rhetorical	_
be	_	_
thought	_	_
of	_	_
as	_	_
a	_	_
lower	_	_
bound	_	_
to	_	_
the	_	_
existence	_	_
question	_	_
.	_	_

#378
Patterns	_	_
of	_	_
clustering	_	_
This	_	_
section	_	_
presents	_	_
a	_	_
visual	_	_
study	_	_
of	_	_
SCGs	_	_
for	_	_
the	_	_
three	_	_
program	_	_
groups	_	_
and	_	_
addresses	_	_
the	_	_
second	_	_
part	_	_
of	_	_
RQ3	_	_
.	_	_

#379
Figs	_	_
.	_	_
10-12	_	_
show	_	_
graphs	_	_
for	_	_
the	_	_
three	_	_
categories	_	_
.	_	_

#380
The	_	_
graphs	_	_
in	_	_
the	_	_
figures	_	_
are	_	_
laid	_	_
out	_	_
in	_	_
ascending	_	_
order	_	_
based	_	_
on	_	_
the	_	_
largest	_	_
coherent	_	_
cluster	_	_
present	_	_
in	_	_
the	_	_
program	_	_
and	_	_
thus	_	_
follow	_	_
the	_	_
same	_	_
order	_	_
as	_	_
seen	_	_
in	_	_
Fig	_	_
.	_	_
9	_	_
.	_	_

#381
Fig	_	_
.	_	_
10	_	_
shows	_	_
SCGs	_	_
for	_	_
the	_	_
seven	_	_
programs	_	_
of	_	_
the	_	_
small	_	_
group	_	_
.	_	_

#382
In	_	_
the	_	_
SCGs	_	_
of	_	_
the	_	_
first	_	_
three	_	_
programs	_	_
(	_	_
archimedes	_	_
,	_	_
time	_	_
and	_	_
wdiff	_	_
)	_	_
only	_	_
a	_	_
small	_	_
coherent	_	_
cluster	_	_
is	_	_
visible	_	_
in	_	_
the	_	_
red	_	_
landscape	_	_
.	_	_

#383
In	_	_
the	_	_
remaining	_	_
four	_	_
programs	_	_
,	_	_
the	_	_
red	_	_
landscape	_	_
shows	_	_
the	_	_
presence	_	_
of	_	_
multiple	_	_
small	_	_
coherent	_	_
clusters	_	_
.	_	_

#384
It	_	_
is	_	_
very	_	_
likely	_	_
that	_	_
,	_	_
similar	_	_
to	_	_
the	_	_
results	_	_
of	_	_
the	_	_
case	_	_
studies	_	_
presented	_	_
later	_	_
,	_	_
these	_	_
clusters	_	_
also	_	_
depict	_	_
logical	_	_
constructs	_	_
within	_	_
each	_	_
program	_	_
.	_	_

#385
Fig	_	_
.	_	_
11	_	_
shows	_	_
SCGs	_	_
of	_	_
the	_	_
19	_	_
programs	_	_
that	_	_
have	_	_
at	_	_
least	_	_
one	_	_
large	_	_
,	_	_
but	_	_
not	_	_
huge	_	_
,	_	_
coherent	_	_
cluster	_	_
.	_	_

#386
That	_	_
is	_	_
,	_	_
each	_	_
program	_	_
has	_	_
at	_	_
least	_	_
one	_	_
coherent	_	_
cluster	_	_
covering	_	_
10-50	_	_
%	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#387
Most	_	_
of	_	_
the	_	_
programs	_	_
have	_	_
multiple	_	_
coherent	_	_
clusters	_	_
as	_	_
is	_	_
visible	_	_
on	_	_
the	_	_
red	_	_
landscape	_	_
.	_	_

#388
Some	_	_
of	_	_
these	_	_
have	_	_
only	_	_
one	_	_
large	_	_
cluster	_	_
satisfying	_	_
the	_	_
definition	_	_
of	_	_
large	_	_
,	_	_
such	_	_
as	_	_
acct	_	_
.	_	_

#389
The	_	_
clustering	_	_
of	_	_
acct	_	_
is	_	_
discussed	_	_
in	_	_
further	_	_
detail	_	_
in	_	_
Section	_	_
3.6.1	_	_
.	_	_

#390
Most	_	_
of	_	_
the	_	_
remaining	_	_
programs	_	_
are	_	_
seen	_	_
to	_	_
have	_	_
multiple	_	_
large	_	_
clusters	_	_
such	_	_
as	_	_
bc	_	_
,	_	_
which	_	_
is	_	_
also	_	_
discussed	_	_
in	_	_
further	_	_
detail	_	_
in	_	_
Section	_	_
3.6.3	_	_
.	_	_

#391
The	_	_
presence	_	_
of	_	_
multiple	_	_
large	_	_
coherent	_	_
cluster	_	_
hints	_	_
that	_	_
the	_	_
program	_	_
consists	_	_
of	_	_
multiple	_	_
functional	_	_
components	_	_
.	_	_

#392
In	_	_
three	_	_
of	_	_
the	_	_
programs	_	_
(	_	_
which	_	_
,	_	_
gnuedma	_	_
and	_	_
copia	_	_
)	_	_
the	_	_
landscape	_	_
is	_	_
completely	_	_
dominated	_	_
by	_	_
a	_	_
single	_	_
large	_	_
coherent	_	_
cluster	_	_
.	_	_

#393
In	_	_
which	_	_
and	_	_
gnuedma	_	_
this	_	_
cluster	_	_
covers	_	_
around	_	_
40	_	_
%	_	_
of	_	_
the	_	_
program	_	_
vertices	_	_
whereas	_	_
in	_	_
copia	_	_
the	_	_
cluster	_	_
covers	_	_
50	_	_
%	_	_
.	_	_

#394
The	_	_
presence	_	_
of	_	_
a	_	_
single	_	_
large	_	_
dominating	_	_
cluster	_	_
points	_	_
to	_	_
a	_	_
centralized	_	_
functionality	_	_
or	_	_
structure	_	_
being	_	_
present	_	_
in	_	_
the	_	_
program	_	_
.	_	_

#395
Copia	_	_
is	_	_
presented	_	_
as	_	_
a	_	_
case	_	_
study	_	_
in	_	_
Section	_	_
3.6.4	_	_
where	_	_
its	_	_
clustering	_	_
is	_	_
discussed	_	_
in	_	_
further	_	_
detail	_	_
.	_	_

#396
Finally	_	_
,	_	_
SCGs	_	_
for	_	_
the	_	_
four	_	_
programs	_	_
that	_	_
contain	_	_
huge	_	_
coherent	_	_
clusters	_	_
(	_	_
covering	_	_
over	_	_
50	_	_
%	_	_
)	_	_
are	_	_
found	_	_
in	_	_
Fig	_	_
.	_	_
12	_	_
.	_	_

#397
In	_	_
all	_	_
four	_	_
landscapes	_	_
there	_	_
is	_	_
a	_	_
very	_	_
large	_	_
dominating	_	_
cluster	_	_
with	_	_
other	_	_
smaller	_	_
clusters	_	_
also	_	_
being	_	_
visible	_	_
.	_	_

#398
This	_	_
pattern	_	_
supports	_	_
the	_	_
conjecture	_	_
that	_	_
the	_	_
program	_	_
has	_	_
one	_	_
central	_	_
structure	_	_
or	_	_
functionality	_	_
which	_	_
consists	_	_
of	_	_
most	_	_
of	_	_
the	_	_
program	_	_
elements	_	_
,	_	_
but	_	_
also	_	_
has	_	_
additional	_	_
logical	_	_
constructs	_	_
that	_	_
work	_	_
in	_	_
support	_	_
of	_	_
the	_	_
central	_	_
idea	_	_
.	_	_

#399
Indent	_	_
is	_	_
one	_	_
program	_	_
that	_	_
falls	_	_
in	_	_
this	_	_
category	_	_
and	_	_
is	_	_
discussed	_	_
in	_	_
further	_	_
detail	_	_
in	_	_
Section	_	_
3.6.2	_	_
.	_	_

#400
As	_	_
an	_	_
answer	_	_
to	_	_
second	_	_
part	_	_
of	_	_
RQ3	_	_
,	_	_
the	_	_
study	_	_
finds	_	_
that	_	_
most	_	_
programs	_	_
contain	_	_
multiple	_	_
coherent	_	_
clusters	_	_
.	_	_

#401
Furthermore	_	_
,	_	_
the	_	_
visual	_	_
study	_	_
reveals	_	_
that	_	_
a	_	_
third	_	_
of	_	_
the	_	_
programs	_	_
have	_	_
multiple	_	_
large	_	_
coherent	_	_
clusters	_	_
.	_	_

#402
Only	_	_
three	_	_
programs	_	_
copia	_	_
,	_	_
gnuedma	_	_
,	_	_
and	_	_
which	_	_
show	_	_
the	_	_
presence	_	_
of	_	_
only	_	_
a	_	_
single	_	_
(	_	_
overwhelming	_	_
)	_	_
cluster	_	_
covering	_	_
most	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#403
Having	_	_
shown	_	_
that	_	_
coherent	_	_
clusters	_	_
are	_	_
prevalent	_	_
in	_	_
programs	_	_
and	_	_
that	_	_
most	_	_
programs	_	_
have	_	_
multiple	_	_
significant	_	_
clusters	_	_
,	_	_
the	_	_
next	_	_
section	_	_
presents	_	_
a	_	_
series	_	_
of	_	_
four	_	_
case	_	_
studies	_	_
that	_	_
looks	_	_
at	_	_
how	_	_
program	_	_
structures	_	_
are	_	_
represented	_	_
by	_	_
these	_	_
clusters	_	_
.	_	_

#404
Coherent	_	_
cluster	_	_
and	_	_
program	_	_
decomposition	_	_
This	_	_
section	_	_
presents	_	_
four	_	_
case	_	_
studies	_	_
using	_	_
acct	_	_
,	_	_
indent	_	_
,	_	_
bc	_	_
and	_	_
copia	_	_
.	_	_

#405
The	_	_
case	_	_
studies	_	_
form	_	_
a	_	_
major	_	_
contribution	_	_
of	_	_
the	_	_
paper	_	_
and	_	_
collectively	_	_
address	_	_
research	_	_
question	_	_
RQ4	_	_
:	_	_
Which	_	_
structures	_	_
within	_	_
a	_	_
program	_	_
can	capability	_
coherent	_	_
cluster	_	_
analysis	_	_
reveal	_	_
?	_	_

#406
As	_	_
coherent	_	_
clusters	_	_
consist	_	_
of	_	_
program	_	_
vertices	_	_
that	_	_
are	_	_
mutually	_	_
inter-dependent	_	_
and	_	_
share	_	_
extra-cluster	_	_
properties	_	_
we	_	_
consider	_	_
such	_	_
vertices	_	_
of	_	_
the	_	_
cluster	_	_
to	_	_
be	_	_
tightly	_	_
coupled	_	_
.	_	_

#407
It	_	_
is	_	_
our	_	_
conjecture	_	_
that	_	_
these	_	_
clusters	_	_
likely	_	_
represent	_	_
logical	_	_
structures	_	_
representing	_	_
a	_	_
high-level	_	_
functional	_	_
decomposition	_	_
of	_	_
systems	_	_
.	_	_

#408
This	_	_
study	_	_
will	_	_
therefore	_	_
look	_	_
at	_	_
how	_	_
coherent	_	_
clusters	_	_
map	_	_
to	_	_
logical	_	_
structures	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#409
The	_	_
case	_	_
studies	_	_
have	_	_
been	_	_
chosen	_	_
to	_	_
represent	_	_
the	_	_
large	_	_
and	_	_
huge	_	_
groups	_	_
identified	_	_
in	_	_
the	_	_
previous	_	_
section	_	_
.	_	_

#410
Three	_	_
programs	_	_
are	_	_
taken	_	_
from	_	_
the	_	_
large	_	_
group	_	_
as	_	_
it	_	_
consists	_	_
of	_	_
the	_	_
majority	_	_
of	_	_
the	_	_
programs	_	_
and	_	_
one	_	_
from	_	_
the	_	_
huge	_	_
group	_	_
.	_	_

#411
Each	_	_
of	_	_
the	_	_
three	_	_
programs	_	_
from	_	_
the	_	_
large	_	_
group	_	_
were	_	_
chosen	_	_
because	_	_
it	_	_
exhibits	_	_
specific	_	_
patterns	_	_
.	_	_

#412
acct	_	_
has	_	_
multiple	_	_
coherent	_	_
clusters	_	_
visible	_	_
in	_	_
its	_	_
profile	_	_
and	_	_
has	_	_
the	_	_
smallest	_	_
large	_	_
cluster	_	_
in	_	_
the	_	_
group	_	_
,	_	_
bc	_	_
has	_	_
multiple	_	_
large	_	_
coherent	_	_
clusters	_	_
,	_	_
and	_	_
copia	_	_
has	_	_
only	_	_
a	_	_
single	_	_
large	_	_
coherent	_	_
cluster	_	_
dominating	_	_
the	_	_
entire	_	_
landscape	_	_
.	_	_

#413
Case	_	_
study	_	_
:	_	_
acct	_	_
The	_	_
first	_	_
of	_	_
the	_	_
series	_	_
of	_	_
case	_	_
studies	_	_
is	_	_
acct	_	_
,	_	_
an	_	_
open-source	_	_
program	_	_
used	_	_
for	_	_
monitoring	_	_
and	_	_
printing	_	_
statistics	_	_
about	_	_
users	_	_
and	_	_
processes	_	_
.	_	_

#414
The	_	_
program	_	_
acct	_	_
is	_	_
one	_	_
of	_	_
the	_	_
smaller	_	_
programs	_	_
with	_	_
2600	_	_
LoC	_	_
and	_	_
1558	_	_
SLoC	_	_
from	_	_
which	_	_
CodeSurfer	_	_
produced	_	_
2834	_	_
slices	_	_
.	_	_

#415
The	_	_
program	_	_
has	_	_
seven	_	_
C	_	_
files	_	_
,	_	_
two	_	_
of	_	_
which	_	_
,	_	_
getopt.c	_	_
and	_	_
getopt1.c	_	_
,	_	_
contain	_	_
only	_	_
conditionally	_	_
included	_	_
functions	_	_
.	_	_

#416
These	_	_
functions	_	_
provide	_	_
support	_	_
for	_	_
command-line	_	_
argument	_	_
processing	_	_
and	_	_
are	_	_
included	_	_
if	_	_
needed	_	_
library	_	_
code	_	_
is	_	_
missing	_	_
.	_	_

#417
Table	_	_
4	_	_
shows	_	_
the	_	_
statistics	_	_
for	_	_
the	_	_
five	_	_
largest	_	_
clusters	_	_
of	_	_
acct	_	_
.	_	_

#418
Column	_	_
1	_	_
gives	_	_
the	_	_
cluster	_	_
number	_	_
,	_	_
where	_	_
1	_	_
is	_	_
the	_	_
largest	_	_
and	_	_
5	_	_
is	_	_
the	_	_
5th	_	_
largest	_	_
cluster	_	_
measured	_	_
using	_	_
the	_	_
number	_	_
of	_	_
vertices	_	_
.	_	_

#419
Columns	_	_
2	_	_
and	_	_
3	_	_
show	_	_
the	_	_
size	_	_
of	_	_
the	_	_
cluster	_	_
as	_	_
a	_	_
percentage	_	_
of	_	_
the	_	_
program	_	_
's	_	_
vertices	_	_
and	_	_
actual	_	_
vertex	_	_
count	_	_
,	_	_
as	_	_
well	_	_
as	_	_
the	_	_
line	_	_
count	_	_
.	_	_

#420
Columns	_	_
4	_	_
and	_	_
5	_	_
show	_	_
the	_	_
number	_	_
of	_	_
files	_	_
and	_	_
functions	_	_
where	_	_
the	_	_
cluster	_	_
is	_	_
found	_	_
.	_	_

#421
The	_	_
cluster	_	_
sizes	_	_
range	_	_
from	_	_
11.4	_	_
%	_	_
to	_	_
2.4	_	_
%	_	_
.	_	_

#422
These	_	_
five	_	_
clusters	_	_
can	capability-feasibility	_
be	_	_
readily	_	_
identified	_	_
in	_	_
the	_	_
Heat-Map	_	_
visualization	_	_
(	_	_
not	_	_
shown	_	_
)	_	_
of	_	_
decluvi	_	_
.	_	_

#423
The	_	_
rest	_	_
of	_	_
the	_	_
clusters	_	_
are	_	_
very	_	_
small	_	_
(	_	_
less	_	_
than	_	_
2	_	_
%	_	_
or	_	_
30	_	_
vertices	_	_
)	_	_
in	_	_
size	_	_
and	_	_
are	_	_
thus	_	_
of	_	_
little	_	_
interest	_	_
.	_	_

#424
The	_	_
B-SCG	_	_
for	_	_
acct	_	_
(	_	_
row	_	_
one	_	_
of	_	_
Fig	_	_
.	_	_
11	_	_
)	_	_
shows	_	_
the	_	_
existence	_	_
of	_	_
these	_	_
five	_	_
coherent	_	_
clusters	_	_
along	_	_
with	_	_
other	_	_
same-slice	_	_
clusters	_	_
.	_	_

#425
Splitting	_	_
of	_	_
the	_	_
same-slice	_	_
cluster	_	_
is	_	_
evident	_	_
in	_	_
the	_	_
SCG	_	_
.	_	_

#426
Splitting	_	_
occurs	_	_
when	_	_
the	_	_
vertices	_	_
of	_	_
a	_	_
same-slice	_	_
cluster	_	_
become	_	_
part	_	_
of	_	_
different	_	_
coherent	_	_
clusters	_	_
.	_	_

#427
This	_	_
happens	_	_
when	_	_
vertices	_	_
have	_	_
either	_	_
the	_	_
same	_	_
backward	_	_
slice	_	_
or	_	_
the	_	_
same	_	_
forward	_	_
slice	_	_
but	_	_
not	_	_
both	_	_
.	_	_

#428
This	_	_
is	_	_
because	_	_
either	_	_
same-backward-slice	_	_
or	_	_
same-forward-slice	_	_
clusters	_	_
only	_	_
capture	_	_
one	_	_
of	_	_
the	_	_
two	_	_
external	_	_
properties	_	_
captured	_	_
by	_	_
coherent	_	_
clusters	_	_
(	_	_
Eq	_	_
.	_	_
(	_	_
1	_	_
)	_	_
)	_	_
.	_	_

#429
In	_	_
acct	_	_
's	_	_
B-SCG	_	_
the	_	_
vertices	_	_
of	_	_
the	_	_
largest	_	_
same-backward-slice	_	_
cluster	_	_
spanning	_	_
the	_	_
x-axis	_	_
from	_	_
60	_	_
%	_	_
to	_	_
75	_	_
%	_	_
are	_	_
not	_	_
part	_	_
of	_	_
the	_	_
same	_	_
coherent	_	_
cluster	_	_
.	_	_

#430
This	_	_
is	_	_
because	_	_
the	_	_
vertices	_	_
do	_	_
not	_	_
share	_	_
the	_	_
same	_	_
forward	_	_
slice	_	_
which	_	_
is	_	_
also	_	_
a	_	_
requirement	_	_
for	_	_
coherent	_	_
clusters	_	_
.	_	_

#431
This	_	_
phenomenon	_	_
is	_	_
common	_	_
in	_	_
the	_	_
programs	_	_
studied	_	_
and	_	_
is	_	_
found	_	_
in	_	_
both	_	_
same-backward-slice	_	_
and	_	_
same-forward-slice	_	_
clusters	_	_
.	_	_

#432
This	_	_
is	_	_
another	_	_
reason	_	_
why	_	_
coherent	_	_
clusters	_	_
are	_	_
often	_	_
smaller	_	_
in	_	_
size	_	_
then	_	_
same-slice	_	_
clusters	_	_
.	_	_

#433
Decluvi	_	_
visualization	_	_
(	_	_
not	_	_
shown	_	_
)	_	_
of	_	_
acct	_	_
reveals	_	_
that	_	_
the	_	_
largest	_	_
cluster	_	_
spans	_	_
four	_	_
files	_	_
(	_	_
file_rd.c	_	_
,	_	_
common.c	_	_
,	_	_
ac.c	_	_
,	_	_
and	_	_
utmp_rd.c	_	_
)	_	_
,	_	_
the	_	_
2nd	_	_
largest	_	_
cluster	_	_
spans	_	_
only	_	_
a	_	_
single	_	_
file	_	_
(	_	_
hashtab.c	_	_
)	_	_
,	_	_
the	_	_
3rd	_	_
largest	_	_
cluster	_	_
spans	_	_
three	_	_
files	_	_
(	_	_
file_rd.c	_	_
,	_	_
ac.c	_	_
,	_	_
and	_	_
hashtab.c	_	_
)	_	_
,	_	_
the	_	_
4th	_	_
largest	_	_
cluster	_	_
spans	_	_
two	_	_
files	_	_
(	_	_
ac.c	_	_
and	_	_
hashtab.c	_	_
)	_	_
,	_	_
while	_	_
the	_	_
5th	_	_
largest	_	_
cluster	_	_
includes	_	_
parts	_	_
of	_	_
ac.c	_	_
only	_	_
.	_	_

#434
The	_	_
largest	_	_
cluster	_	_
of	_	_
acct	_	_
is	_	_
spread	_	_
over	_	_
six	_	_
functions	_	_
,	_	_
log_in	_	_
,	_	_
log_out	_	_
,	_	_
file_open	_	_
,	_	_
file_reader_get_entry	_	_
,	_	_
bad_utmp_record	_	_
and	_	_
utmp_get_entry	_	_
.	_	_

#435
These	_	_
functions	_	_
are	_	_
responsible	_	_
for	_	_
putting	_	_
accounting	_	_
records	_	_
into	_	_
the	_	_
hash	_	_
table	_	_
used	_	_
by	_	_
the	_	_
program	_	_
,	_	_
accessing	_	_
user-defined	_	_
files	_	_
,	_	_
and	_	_
reading	_	_
entries	_	_
from	_	_
the	_	_
file	_	_
.	_	_

#436
Thus	_	_
,	_	_
the	_	_
purpose	_	_
of	_	_
the	_	_
code	_	_
in	_	_
this	_	_
cluster	_	_
is	_	_
to	_	_
track	_	_
user	_	_
login	_	_
and	_	_
logout	_	_
events	_	_
.	_	_

#437
The	_	_
second	_	_
largest	_	_
cluster	_	_
is	_	_
spread	_	_
over	_	_
two	_	_
functions	_	_
hashtab_create	_	_
and	_	_
hashtab_resize	_	_
.	_	_

#438
These	_	_
functions	_	_
are	_	_
responsible	_	_
for	_	_
creating	_	_
fresh	_	_
hash	_	_
tables	_	_
and	_	_
resizing	_	_
existing	_	_
hash	_	_
tables	_	_
when	_	_
the	_	_
number	_	_
of	_	_
entries	_	_
becomes	_	_
too	_	_
large	_	_
.	_	_

#439
The	_	_
purpose	_	_
of	_	_
the	_	_
code	_	_
in	_	_
this	_	_
cluster	_	_
is	_	_
the	_	_
memory	_	_
management	_	_
in	_	_
support	_	_
of	_	_
the	_	_
program	_	_
's	_	_
main	_	_
data	_	_
structure	_	_
.	_	_

#440
The	_	_
third	_	_
largest	_	_
cluster	_	_
is	_	_
spread	_	_
over	_	_
four	_	_
functions	_	_
:	_	_
hashtab_set_value	_	_
,	_	_
log_everyone_out	_	_
,	_	_
update_user_time	_	_
,	_	_
and	_	_
hashtab_create	_	_
.	_	_

#441
These	_	_
functions	_	_
are	_	_
responsible	_	_
for	_	_
setting	_	_
values	_	_
of	_	_
an	_	_
entry	_	_
,	_	_
updating	_	_
all	_	_
the	_	_
statistics	_	_
for	_	_
users	_	_
,	_	_
and	_	_
resetting	_	_
the	_	_
tables	_	_
.	_	_

#442
The	_	_
purpose	_	_
of	_	_
the	_	_
code	_	_
from	_	_
this	_	_
cluster	_	_
is	_	_
the	_	_
modification	_	_
of	_	_
the	_	_
user	_	_
accounting	_	_
data	_	_
.	_	_

#443
The	_	_
fourth	_	_
cluster	_	_
is	_	_
spread	_	_
over	_	_
three	_	_
functions	_	_
:	_	_
hashtab_delete	_	_
,	_	_
do_statistics	_	_
,	_	_
and	_	_
hashtab_find	_	_
.	_	_

#444
These	_	_
functions	_	_
are	_	_
responsible	_	_
for	_	_
removing	_	_
entries	_	_
from	_	_
the	_	_
hash	_	_
table	_	_
,	_	_
printing	_	_
out	_	_
statistics	_	_
for	_	_
users	_	_
and	_	_
finding	_	_
entries	_	_
in	_	_
the	_	_
hash	_	_
table	_	_
.	_	_

#445
The	_	_
purpose	_	_
of	_	_
the	_	_
code	_	_
from	_	_
this	_	_
cluster	_	_
is	_	_
maintaining	_	_
user	_	_
accounting	_	_
data	_	_
and	_	_
printing	_	_
results	_	_
.	_	_

#446
The	_	_
fifth	_	_
cluster	_	_
is	_	_
contained	_	_
within	_	_
the	_	_
function	_	_
main	_	_
.	_	_

#447
This	_	_
cluster	_	_
is	_	_
formed	_	_
due	_	_
to	_	_
the	_	_
use	_	_
of	_	_
a	_	_
while	_	_
loop	_	_
containing	_	_
various	_	_
cases	_	_
based	_	_
on	_	_
input	_	_
to	_	_
the	_	_
program	_	_
.	_	_

#448
Because	_	_
of	_	_
the	_	_
conservative	_	_
nature	_	_
of	_	_
static	_	_
analysis	_	_
,	_	_
all	_	_
the	_	_
code	_	_
within	_	_
the	_	_
loop	_	_
is	_	_
part	_	_
of	_	_
the	_	_
same	_	_
cluster	_	_
.	_	_

#449
Finally	_	_
,	_	_
it	_	_
is	_	_
interesting	_	_
to	_	_
note	_	_
that	_	_
functions	_	_
from	_	_
the	_	_
same	_	_
file	_	_
or	_	_
with	_	_
similar	_	_
names	_	_
do	_	_
not	_	_
necessarily	_	_
belong	_	_
to	_	_
the	_	_
same	_	_
cluster	_	_
.	_	_

#450
Intuitively	_	_
,	_	_
it	_	_
can	feasibility-rhetorical	_
be	_	_
presumed	_	_
that	_	_
functions	_	_
that	_	_
have	_	_
similar	_	_
names	_	_
or	_	_
prefixes	_	_
work	_	_
together	_	_
to	_	_
provide	_	_
some	_	_
common	_	_
functionality	_	_
.	_	_

#451
In	_	_
this	_	_
case	_	_
,	_	_
six	_	_
functions	_	_
that	_	_
have	_	_
the	_	_
same	_	_
common	_	_
prefix	_	_
"	_	_
hashtab	_	_
"	_	_
all	_	_
perform	_	_
operations	_	_
on	_	_
the	_	_
hash	_	_
table	_	_
.	_	_

#452
However	_	_
,	_	_
these	_	_
six	_	_
functions	_	_
are	_	_
not	_	_
part	_	_
of	_	_
the	_	_
same	_	_
cluster	_	_
.	_	_

#453
Instead	_	_
the	_	_
functions	_	_
that	_	_
work	_	_
together	_	_
to	_	_
provide	_	_
a	_	_
particular	_	_
functionality	_	_
are	_	_
found	_	_
in	_	_
the	_	_
same	_	_
cluster	_	_
.	_	_

#454
The	_	_
clusters	_	_
help	_	_
identify	_	_
functionality	_	_
which	_	_
is	_	_
not	_	_
obvious	_	_
from	_	_
the	_	_
name	_	_
of	_	_
program	_	_
artefacts	_	_
such	_	_
as	_	_
functions	_	_
and	_	_
files	_	_
.	_	_

#455
As	_	_
an	_	_
answer	_	_
to	_	_
RQ4	_	_
,	_	_
we	_	_
find	_	_
that	_	_
in	_	_
this	_	_
case	_	_
study	_	_
each	_	_
of	_	_
the	_	_
top	_	_
five	_	_
clusters	_	_
maps	_	_
to	_	_
specific	_	_
logical	_	_
functionality	_	_
.	_	_

#456
Case	_	_
study	_	_
:	_	_
indent	_	_
The	_	_
next	_	_
case	_	_
study	_	_
uses	_	_
indent	_	_
to	_	_
further	_	_
support	_	_
the	_	_
answer	_	_
found	_	_
for	_	_
RQ4	_	_
in	_	_
the	_	_
acct	_	_
case	_	_
study	_	_
.	_	_

#457
The	_	_
characteristics	_	_
of	_	_
indent	_	_
are	_	_
very	_	_
different	_	_
from	_	_
those	_	_
of	_	_
acct	_	_
as	_	_
indent	_	_
has	_	_
a	_	_
very	_	_
large	_	_
dominant	_	_
coherent	_	_
cluster	_	_
(	_	_
52	_	_
%	_	_
)	_	_
whereas	_	_
acct	_	_
has	_	_
multiple	_	_
smaller	_	_
clusters	_	_
with	_	_
the	_	_
largest	_	_
being	_	_
11	_	_
%	_	_
.	_	_

#458
We	_	_
include	_	_
indent	_	_
as	_	_
a	_	_
case	_	_
study	_	_
to	_	_
ensure	_	_
that	_	_
the	_	_
answer	_	_
for	_	_
RQ4	_	_
is	_	_
derived	_	_
from	_	_
programs	_	_
with	_	_
different	_	_
cluster	_	_
profiles	_	_
and	_	_
sizes	_	_
giving	_	_
confidence	_	_
as	_	_
to	_	_
the	_	_
generality	_	_
of	_	_
the	_	_
answer	_	_
.	_	_

#459
Indent	_	_
is	_	_
a	_	_
Unix	_	_
utility	_	_
used	_	_
to	_	_
format	_	_
C	_	_
source	_	_
code	_	_
.	_	_

#460
It	_	_
consists	_	_
of	_	_
6978	_	_
LoC	_	_
with	_	_
7543	_	_
vertices	_	_
in	_	_
the	_	_
SDG	_	_
produced	_	_
by	_	_
CodeSurfer	_	_
.	_	_

#461
Table	_	_
5	_	_
shows	_	_
statistics	_	_
of	_	_
the	_	_
five	_	_
largest	_	_
clusters	_	_
found	_	_
in	_	_
the	_	_
program	_	_
.	_	_

#462
Indent	_	_
has	_	_
one	_	_
extremely	_	_
large	_	_
coherent	_	_
cluster	_	_
that	_	_
spans	_	_
52.1	_	_
%	_	_
of	_	_
the	_	_
program	_	_
's	_	_
vertices	_	_
.	_	_

#463
The	_	_
cluster	_	_
is	_	_
formed	_	_
of	_	_
vertices	_	_
from	_	_
54	_	_
functions	_	_
spread	_	_
over	_	_
7	_	_
source	_	_
files	_	_
.	_	_

#464
This	_	_
cluster	_	_
captures	_	_
most	_	_
of	_	_
the	_	_
logical	_	_
functionalities	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#465
Out	_	_
of	_	_
the	_	_
54	_	_
functions	_	_
,	_	_
26	_	_
begin	_	_
with	_	_
the	_	_
common	_	_
prefix	_	_
of	_	_
"	_	_
handle_token	_	_
"	_	_
.	_	_

#466
These	_	_
26	_	_
functions	_	_
are	_	_
individually	_	_
responsible	_	_
for	_	_
handling	_	_
a	_	_
specific	_	_
token	_	_
during	_	_
the	_	_
formatting	_	_
process	_	_
.	_	_

#467
For	_	_
example	_	_
,	_	_
handle_token_colon	_	_
,	_	_
handle_token_comma	_	_
,	_	_
handle_token_comment	_	_
,	_	_
and	_	_
handle_token_lbrace	_	_
are	_	_
responsible	_	_
for	_	_
handling	_	_
the	_	_
colon	_	_
,	_	_
comma	_	_
,	_	_
comment	_	_
,	_	_
and	_	_
left	_	_
brace	_	_
tokens	_	_
,	_	_
respectively	_	_
.	_	_

#468
This	_	_
cluster	_	_
also	_	_
includes	_	_
multiple	_	_
handler	_	_
functions	_	_
that	_	_
check	_	_
the	_	_
size	_	_
of	_	_
the	_	_
code	_	_
and	_	_
labels	_	_
being	_	_
handled	_	_
,	_	_
such	_	_
as	_	_
check_code_size	_	_
and	_	_
check_lab_size	_	_
.	_	_

#469
Others	_	_
,	_	_
such	_	_
as	_	_
search_brace	_	_
,	_	_
sw_buffer	_	_
,	_	_
print_comment	_	_
,	_	_
and	_	_
reduce	_	_
,	_	_
help	_	_
with	_	_
tracking	_	_
braces	_	_
and	_	_
comments	_	_
in	_	_
code	_	_
.	_	_

#470
The	_	_
cluster	_	_
also	_	_
spans	_	_
the	_	_
main	_	_
loop	_	_
of	_	_
indent	_	_
(	_	_
indent_main_loop	_	_
)	_	_
that	_	_
repeatedly	_	_
calls	_	_
the	_	_
parser	_	_
function	_	_
parse	_	_
.	_	_

#471
Finally	_	_
,	_	_
the	_	_
cluster	_	_
consists	_	_
of	_	_
code	_	_
for	_	_
outputting	_	_
formatted	_	_
lines	_	_
such	_	_
as	_	_
the	_	_
functions	_	_
better_break	_	_
,	_	_
computer_code_target	_	_
,	_	_
dump_line	_	_
,	_	_
dump_line_code	_	_
,	_	_
dump_line_label	_	_
,	_	_
inhibit_indenting	_	_
,	_	_
is_comment_start	_	_
,	_	_
output_line_length	_	_
and	_	_
slip_horiz_space	_	_
,	_	_
and	_	_
ones	_	_
that	_	_
perform	_	_
flag	_	_
and	_	_
memory	_	_
management	_	_
(	_	_
clear_buf_break_list	_	_
,	_	_
fill_buffer	_	_
and	_	_
set_priority	_	_
)	_	_
.	_	_

#472
Cluster	_	_
1	_	_
therefore	_	_
consists	_	_
of	_	_
the	_	_
main	_	_
functionality	_	_
of	_	_
this	_	_
program	_	_
and	_	_
provides	_	_
support	_	_
for	_	_
parsing	_	_
,	_	_
handling	_	_
tokens	_	_
,	_	_
associated	_	_
memory	_	_
management	_	_
,	_	_
and	_	_
output	_	_
.	_	_

#473
The	_	_
parsing	_	_
,	_	_
handling	_	_
of	_	_
individual	_	_
tokens	_	_
and	_	_
associated	_	_
memory	_	_
management	_	_
are	_	_
highly	_	_
inter-twined	_	_
.	_	_

#474
For	_	_
example	_	_
,	_	_
the	_	_
handling	_	_
of	_	_
each	_	_
individual	_	_
token	_	_
is	_	_
dictated	_	_
by	_	_
operations	_	_
of	_	_
indent	_	_
and	_	_
closely	_	_
depends	_	_
on	_	_
the	_	_
parsing	_	_
.	_	_

#475
This	_	_
code	_	_
can	feasibility	negation
not	_	_
easily	_	_
be	_	_
decoupled	_	_
and	_	_
,	_	_
for	_	_
example	_	_
,	_	_
reused	_	_
.	_	_

#476
Similarly	_	_
the	_	_
memory	_	_
management	_	_
code	_	_
is	_	_
specific	_	_
to	_	_
the	_	_
data	_	_
structures	_	_
used	_	_
by	_	_
indent	_	_
resulting	_	_
in	_	_
these	_	_
many	_	_
logical	_	_
constructs	_	_
to	_	_
become	_	_
part	_	_
of	_	_
the	_	_
same	_	_
cluster	_	_
.	_	_

#477
The	_	_
second	_	_
largest	_	_
coherent	_	_
cluster	_	_
consists	_	_
of	_	_
7	_	_
functions	_	_
from	_	_
3	_	_
source	_	_
files	_	_
.	_	_

#478
These	_	_
functions	_	_
handle	_	_
the	_	_
arguments	_	_
and	_	_
parameters	_	_
passed	_	_
to	_	_
indent	_	_
.	_	_

#479
For	_	_
example	_	_
,	_	_
set_option	_	_
and	_	_
option_prefix	_	_
along	_	_
with	_	_
the	_	_
helper	_	_
function	_	_
eqin	_	_
to	_	_
check	_	_
and	_	_
verify	_	_
that	_	_
the	_	_
options	_	_
or	_	_
parameters	_	_
passed	_	_
to	_	_
indent	_	_
are	_	_
valid	_	_
.	_	_

#480
When	_	_
options	_	_
are	_	_
specified	_	_
without	_	_
the	_	_
required	_	_
arguments	_	_
,	_	_
the	_	_
function	_	_
arg_missing	_	_
produces	_	_
an	_	_
error	_	_
message	_	_
by	_	_
invoking	_	_
usage	_	_
followed	_	_
by	_	_
a	_	_
call	_	_
to	_	_
DieError	_	_
to	_	_
terminate	_	_
the	_	_
program	_	_
.	_	_

#481
Clusters	_	_
3-5	_	_
are	_	_
less	_	_
than	_	_
3	_	_
%	_	_
of	_	_
the	_	_
program	_	_
and	_	_
are	_	_
too	_	_
small	_	_
to	_	_
warrant	_	_
a	_	_
detailed	_	_
discussion	_	_
.	_	_

#482
Cluster	_	_
3	_	_
includes	_	_
6	_	_
functions	_	_
that	_	_
generate	_	_
numbered/un-numbered	_	_
backup	_	_
for	_	_
subject	_	_
files	_	_
.	_	_

#483
Cluster	_	_
4	_	_
has	_	_
functions	_	_
for	_	_
reading	_	_
and	_	_
ignoring	_	_
comments	_	_
.	_	_

#484
Cluster	_	_
5	_	_
consists	_	_
of	_	_
a	_	_
single	_	_
function	_	_
that	_	_
reinitializes	_	_
the	_	_
parser	_	_
and	_	_
associated	_	_
data	_	_
structures	_	_
.	_	_

#485
The	_	_
case	_	_
study	_	_
of	_	_
indent	_	_
further	_	_
illustrates	_	_
that	_	_
coherent	_	_
clusters	_	_
can	capability	_
capture	_	_
the	_	_
program	_	_
's	_	_
logical	_	_
structure	_	_
as	_	_
an	_	_
answer	_	_
to	_	_
research	_	_
question	_	_
RQ4	_	_
.	_	_

#486
However	_	_
,	_	_
in	_	_
cases	_	_
such	_	_
as	_	_
this	_	_
where	_	_
the	_	_
internal	_	_
functionality	_	_
is	_	_
tightly	_	_
knit	_	_
,	_	_
a	_	_
single	_	_
large	_	_
coherent	_	_
cluster	_	_
maps	_	_
to	_	_
the	_	_
program	_	_
's	_	_
core	_	_
functionality	_	_
.	_	_

#487
Case	_	_
study	_	_
:	_	_
bc	_	_
The	_	_
third	_	_
case	_	_
study	_	_
in	_	_
this	_	_
series	_	_
is	_	_
bc	_	_
,	_	_
an	_	_
open-source	_	_
calculator	_	_
,	_	_
which	_	_
consists	_	_
of	_	_
9438	_	_
LoC	_	_
and	_	_
5450	_	_
SLoC	_	_
.	_	_

#488
The	_	_
program	_	_
has	_	_
nine	_	_
C	_	_
files	_	_
from	_	_
which	_	_
CodeSurfer	_	_
produced	_	_
15,076	_	_
slices	_	_
(	_	_
backward	_	_
and	_	_
forward	_	_
)	_	_
.	_	_

#489
Analyzing	_	_
bc	_	_
's	_	_
SCG	_	_
(	_	_
row	_	_
3	_	_
,	_	_
Fig	_	_
.	_	_
11	_	_
)	_	_
,	_	_
two	_	_
interesting	_	_
observations	_	_
can	rhetorical	_
be	_	_
made	_	_
.	_	_

#490
First	_	_
,	_	_
bc	_	_
contains	_	_
two	_	_
large	_	_
same-backward-slice	_	_
clusters	_	_
visible	_	_
in	_	_
the	_	_
light	_	_
gray	_	_
landscapes	_	_
as	_	_
opposed	_	_
to	_	_
the	_	_
three	_	_
large	_	_
coherent	_	_
clusters	_	_
.	_	_

#491
Second	_	_
,	_	_
looking	_	_
at	_	_
the	_	_
B-SCG	_	_
,	_	_
it	_	_
can	rhetorical	_
be	_	_
seen	_	_
that	_	_
the	_	_
x-axis	_	_
range	_	_
spanned	_	_
by	_	_
the	_	_
largest	_	_
same-backward-slice	_	_
cluster	_	_
is	_	_
occupied	_	_
by	_	_
the	_	_
top	_	_
two	_	_
coherent	_	_
clusters	_	_
shown	_	_
in	_	_
the	_	_
dashed	_	_
red	_	_
(	_	_
dark	_	_
gray	_	_
)	_	_
landscape	_	_
.	_	_

#492
This	_	_
indicates	_	_
that	_	_
the	_	_
same-backward-slice	_	_
cluster	_	_
splits	_	_
into	_	_
the	_	_
two	_	_
coherent	_	_
clusters	_	_
.	_	_

#493
The	_	_
statistics	_	_
for	_	_
bc	_	_
's	_	_
top	_	_
five	_	_
clusters	_	_
are	_	_
given	_	_
in	_	_
Table	_	_
6	_	_
.	_	_

#494
Sizes	_	_
of	_	_
these	_	_
five	_	_
clusters	_	_
range	_	_
from	_	_
32.3	_	_
%	_	_
through	_	_
to	_	_
1.4	_	_
%	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#495
Clusters	_	_
six	_	_
onwards	_	_
are	_	_
less	_	_
than	_	_
1	_	_
%	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#496
The	_	_
Project	_	_
View	_	_
(	_	_
Fig	_	_
.	_	_
13	_	_
)	_	_
shows	_	_
their	_	_
distribution	_	_
over	_	_
the	_	_
source	_	_
files	_	_
.	_	_

#497
In	_	_
more	_	_
detail	_	_
,	_	_
Cluster	_	_
1	_	_
spans	_	_
all	_	_
of	_	_
bc	_	_
's	_	_
files	_	_
except	_	_
for	_	_
scan.c	_	_
and	_	_
bc.c	_	_
.	_	_

#498
This	_	_
cluster	_	_
encompasses	_	_
the	_	_
core	_	_
functionality	_	_
of	_	_
the	_	_
program	_	_
-	_	_
loading	_	_
and	_	_
handling	_	_
of	_	_
equations	_	_
,	_	_
converting	_	_
to	_	_
bc	_	_
's	_	_
own	_	_
number	_	_
format	_	_
,	_	_
performing	_	_
calculations	_	_
,	_	_
and	_	_
accumulating	_	_
results	_	_
.	_	_

#499
Cluster	_	_
2	_	_
spans	_	_
five	_	_
files	_	_
,	_	_
util.c	_	_
,	_	_
execute.c	_	_
,	_	_
main.c	_	_
,	_	_
scan.c	_	_
,	_	_
and	_	_
bc.c	_	_
.	_	_

#500
The	_	_
majority	_	_
of	_	_
the	_	_
cluster	_	_
is	_	_
distributed	_	_
over	_	_
the	_	_
latter	_	_
two	_	_
files	_	_
.	_	_

#501
Even	_	_
more	_	_
interestingly	_	_
,	_	_
the	_	_
source	_	_
code	_	_
of	_	_
these	_	_
two	_	_
files	_	_
(	_	_
scan.c	_	_
and	_	_
bc.c	_	_
)	_	_
map	_	_
only	_	_
to	_	_
Cluster	_	_
2	_	_
and	_	_
none	_	_
of	_	_
the	_	_
other	_	_
top	_	_
five	_	_
clusters	_	_
.	_	_

#502
This	_	_
indicates	_	_
a	_	_
clear	_	_
purpose	_	_
to	_	_
the	_	_
code	_	_
in	_	_
these	_	_
files	_	_
.	_	_

#503
These	_	_
two	_	_
files	_	_
are	_	_
solely	_	_
used	_	_
for	_	_
lexical	_	_
analysis	_	_
and	_	_
parsing	_	_
of	_	_
equations	_	_
.	_	_

#504
To	_	_
aid	_	_
in	_	_
this	_	_
task	_	_
,	_	_
some	_	_
utility	_	_
functions	_	_
from	_	_
util.c	_	_
are	_	_
employed	_	_
.	_	_

#505
Only	_	_
five	_	_
lines	_	_
of	_	_
code	_	_
in	_	_
execute.c	_	_
are	_	_
also	_	_
part	_	_
of	_	_
Cluster	_	_
2	_	_
and	_	_
are	_	_
used	_	_
for	_	_
flushing	_	_
output	_	_
and	_	_
clearing	_	_
interrupt	_	_
signals	_	_
.	_	_

#506
The	_	_
third	_	_
cluster	_	_
is	_	_
completely	_	_
contained	_	_
within	_	_
the	_	_
file	_	_
number.c	_	_
.	_	_

#507
It	_	_
encompasses	_	_
functions	_	_
such	_	_
as	_	_
_bc_do_sub	_	_
,	_	_
_bc_init_num	_	_
,	_	_
_bc_do_compare	_	_
,	_	_
_bc_do_add	_	_
,	_	_
_bc_simp_mul	_	_
,	_	_
_bc_shift_addsub	_	_
,	_	_
and	_	_
_bc_rm_leading_zeros	_	_
,	_	_
which	_	_
are	_	_
responsible	_	_
for	_	_
initializing	_	_
bc	_	_
's	_	_
number	_	_
formatter	_	_
,	_	_
performing	_	_
comparisons	_	_
,	_	_
modulo	_	_
and	_	_
other	_	_
arithmetic	_	_
operations	_	_
.	_	_

#508
Clusters	_	_
4	_	_
and	_	_
5	_	_
are	_	_
also	_	_
completely	_	_
contained	_	_
within	_	_
number.c	_	_
.	_	_

#509
These	_	_
clusters	_	_
encompass	_	_
functions	_	_
to	_	_
perform	_	_
bcd	_	_
operations	_	_
for	_	_
base	_	_
ten	_	_
numbers	_	_
and	_	_
arithmetic	_	_
division	_	_
,	_	_
respectively	_	_
.	_	_

#510
As	_	_
an	_	_
answer	_	_
to	_	_
RQ4	_	_
,	_	_
the	_	_
results	_	_
of	_	_
the	_	_
cluster	_	_
visualizations	_	_
for	_	_
bc	_	_
reveal	_	_
its	_	_
high-level	_	_
structure	_	_
.	_	_

#511
This	_	_
aids	_	_
an	_	_
engineer	_	_
in	_	_
understanding	_	_
how	_	_
the	_	_
artifacts	_	_
(	_	_
e.g.	_	_
,	_	_
functions	_	_
and	_	_
files	_	_
)	_	_
of	_	_
the	_	_
program	_	_
interact	_	_
,	_	_
thus	_	_
aiding	_	_
in	_	_
program	_	_
comprehension	_	_
.	_	_

#512
The	_	_
remainder	_	_
of	_	_
this	_	_
subsection	_	_
illustrates	_	_
a	_	_
side-effect	_	_
of	_	_
decluvi	_	_
's	_	_
multi-level	_	_
visualization	_	_
,	_	_
how	_	_
it	_	_
can	capability	_
help	_	_
find	_	_
potential	_	_
problems	_	_
with	_	_
the	_	_
structure	_	_
of	_	_
a	_	_
program	_	_
.	_	_

#513
Util.c	_	_
consists	_	_
of	_	_
small	_	_
utility	_	_
functions	_	_
called	_	_
from	_	_
various	_	_
parts	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#514
This	_	_
file	_	_
contains	_	_
code	_	_
from	_	_
Clusters	_	_
1	_	_
and	_	_
2	_	_
(	_	_
Fig	_	_
.	_	_
13	_	_
)	_	_
.	_	_

#515
Five	_	_
of	_	_
the	_	_
utility	_	_
functions	_	_
belong	_	_
with	_	_
Cluster	_	_
1	_	_
,	_	_
while	_	_
six	_	_
belong	_	_
with	_	_
Cluster	_	_
2	_	_
.	_	_

#516
Furthermore	_	_
,	_	_
Fig	_	_
.	_	_
14	_	_
shows	_	_
that	_	_
the	_	_
distribution	_	_
of	_	_
the	_	_
two	_	_
clusters	_	_
in	_	_
red	_	_
(	_	_
dark	_	_
gray	_	_
)	_	_
and	_	_
blue	_	_
(	_	_
medium	_	_
gray	_	_
)	_	_
within	_	_
the	_	_
file	_	_
are	_	_
well	_	_
separated	_	_
.	_	_

#517
Both	_	_
clusters	_	_
do	_	_
not	_	_
occur	_	_
together	_	_
inside	_	_
any	_	_
function	_	_
with	_	_
the	_	_
exception	_	_
of	_	_
init_gen	_	_
(	_	_
highlighted	_	_
by	_	_
the	_	_
rectangle	_	_
in	_	_
first	_	_
column	_	_
of	_	_
Fig	_	_
.	_	_
14	_	_
)	_	_
.	_	_

#518
The	_	_
other	_	_
functions	_	_
of	_	_
util.c	_	_
thus	_	_
belong	_	_
to	_	_
either	_	_
Cluster	_	_
1	_	_
or	_	_
Cluster	_	_
2	_	_
.	_	_

#519
Separating	_	_
these	_	_
utility	_	_
functions	_	_
into	_	_
two	_	_
separate	_	_
source	_	_
files	_	_
where	_	_
each	_	_
file	_	_
is	_	_
dedicated	_	_
to	_	_
functions	_	_
belonging	_	_
to	_	_
a	_	_
single	_	_
cluster	_	_
would	_	_
improve	_	_
the	_	_
code	_	_
's	_	_
logical	_	_
separation	_	_
and	_	_
file-level	_	_
cohesion	_	_
.	_	_

#520
This	_	_
would	_	_
make	_	_
the	_	_
code	_	_
easier	_	_
to	_	_
understand	_	_
and	_	_
maintain	_	_
at	_	_
the	_	_
expense	_	_
of	_	_
a	_	_
very	_	_
simple	_	_
refactoring	_	_
.	_	_

#521
In	_	_
general	_	_
,	_	_
this	_	_
example	_	_
illustrates	_	_
how	_	_
decluvi	_	_
visualization	_	_
can	capability	_
provide	_	_
an	_	_
indicator	_	_
of	_	_
potential	_	_
points	_	_
of	_	_
code	_	_
degradation	_	_
during	_	_
evolution	_	_
.	_	_

#522
Finally	_	_
,	_	_
the	_	_
Code	_	_
View	_	_
for	_	_
function	_	_
init_gen	_	_
shown	_	_
in	_	_
Fig	_	_
.	_	_
15	_	_
includes	_	_
Lines	_	_
244	_	_
,	_	_
251	_	_
,	_	_
254	_	_
,	_	_
and	_	_
255	_	_
in	_	_
red	_	_
(	_	_
dark	_	_
gray	_	_
)	_	_
from	_	_
Cluster	_	_
1	_	_
and	_	_
Lines	_	_
247	_	_
,	_	_
248	_	_
,	_	_
249	_	_
,	_	_
and	_	_
256	_	_
in	_	_
blue	_	_
(	_	_
medium	_	_
gray	_	_
)	_	_
from	_	_
Cluster	_	_
2	_	_
.	_	_

#523
Other	_	_
lines	_	_
,	_	_
shown	_	_
in	_	_
light	_	_
gray	_	_
,	_	_
belong	_	_
to	_	_
smaller	_	_
clusters	_	_
and	_	_
lines	_	_
containing	_	_
no	_	_
executable	_	_
code	_	_
.	_	_

#524
Ideally	_	_
,	_	_
clusters	_	_
should	deontic	_
capture	_	_
a	_	_
particular	_	_
functionality	_	_
;	_	_
thus	_	_
,	_	_
functions	_	_
should	deontic	negation
generally	_	_
not	_	_
contain	_	_
code	_	_
from	_	_
multiple	_	_
clusters	_	_
(	_	_
unless	_	_
perhaps	_	_
the	_	_
clusters	_	_
are	_	_
completely	_	_
contained	_	_
within	_	_
the	_	_
function	_	_
)	_	_
.	_	_

#525
Functions	_	_
with	_	_
code	_	_
from	_	_
multiple	_	_
clusters	_	_
reduce	_	_
code	_	_
separation	_	_
(	_	_
hindering	_	_
comprehension	_	_
)	_	_
and	_	_
increase	_	_
the	_	_
likelihood	_	_
of	_	_
ripple-effects	_	_
(	_	_
Black	_	_
,	_	_
2001	_	_
)	_	_
.	_	_

#526
Like	_	_
other	_	_
initialization	_	_
functions	_	_
,	_	_
bc'sinit_gen	_	_
is	_	_
an	_	_
exception	_	_
to	_	_
this	_	_
guideline	_	_
.	_	_

#527
This	_	_
case	_	_
study	_	_
not	_	_
only	_	_
provides	_	_
support	_	_
for	_	_
the	_	_
answer	_	_
to	_	_
research	_	_
question	_	_
RQ4	_	_
found	_	_
in	_	_
previous	_	_
case	_	_
studies	_	_
,	_	_
but	_	_
also	_	_
illustrates	_	_
that	_	_
the	_	_
visualization	_	_
is	_	_
able	_	_
to	_	_
reveal	_	_
structural	_	_
defects	_	_
in	_	_
programs	_	_
.	_	_

#528
Case	_	_
study	_	_
:	_	_
copia	_	_
The	_	_
final	_	_
case	_	_
study	_	_
in	_	_
this	_	_
series	_	_
is	_	_
copia	_	_
,	_	_
an	_	_
industrial	_	_
program	_	_
used	_	_
by	_	_
the	_	_
ESA	_	_
to	_	_
perform	_	_
signal	_	_
processing	_	_
.	_	_

#529
Copiais	_	_
the	_	_
smallest	_	_
program	_	_
considered	_	_
in	_	_
this	_	_
series	_	_
of	_	_
case	_	_
studies	_	_
with	_	_
1168	_	_
LoC	_	_
and	_	_
1111	_	_
SLoC	_	_
all	_	_
in	_	_
a	_	_
single	_	_
C	_	_
file	_	_
.	_	_

#530
Its	_	_
largest	_	_
coherent	_	_
cluster	_	_
covers	_	_
48	_	_
%	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#531
The	_	_
program	_	_
is	_	_
at	_	_
the	_	_
top	_	_
of	_	_
the	_	_
group	_	_
with	_	_
large	_	_
coherent	_	_
clusters	_	_
.	_	_

#532
CodeSurfer	_	_
extracts	_	_
6654	_	_
slices	_	_
(	_	_
backward	_	_
and	_	_
forward	_	_
)	_	_
.	_	_

#533
The	_	_
B-SCG	_	_
for	_	_
copia	_	_
is	_	_
shown	_	_
in	_	_
Fig	_	_
.	_	_
16a	_	_
.	_	_

#534
The	_	_
single	_	_
large	_	_
coherent	_	_
cluster	_	_
spanning	_	_
48	_	_
%	_	_
of	_	_
the	_	_
program	_	_
is	_	_
shown	_	_
by	_	_
the	_	_
dashed	_	_
red	_	_
(	_	_
dark	_	_
gray	_	_
)	_	_
line	_	_
(	_	_
running	_	_
approx	_	_
.	_	_

#535
from	_	_
2	_	_
%	_	_
to	_	_
50	_	_
%	_	_
on	_	_
the	_	_
x-axis	_	_
)	_	_
.	_	_

#536
The	_	_
plots	_	_
for	_	_
same-backward-slice	_	_
cluster	_	_
sizes	_	_
(	_	_
light	_	_
gray	_	_
line	_	_
)	_	_
and	_	_
the	_	_
coherent	_	_
cluster	_	_
sizes	_	_
(	_	_
dashed	_	_
line	_	_
)	_	_
are	_	_
identical	_	_
.	_	_

#537
This	_	_
is	_	_
because	_	_
the	_	_
size	_	_
of	_	_
the	_	_
coherent	_	_
clusters	_	_
are	_	_
restricted	_	_
by	_	_
the	_	_
size	_	_
of	_	_
the	_	_
same-backward-slice	_	_
clusters	_	_
.	_	_

#538
Although	_	_
the	_	_
plot	_	_
for	_	_
the	_	_
size	_	_
of	_	_
the	_	_
backward	_	_
slices	_	_
(	_	_
black	_	_
line	_	_
)	_	_
seems	_	_
to	_	_
be	_	_
the	_	_
same	_	_
from	_	_
the	_	_
10	_	_
%	_	_
mark	_	_
to	_	_
95	_	_
%	_	_
mark	_	_
on	_	_
the	_	_
x-axis	_	_
,	_	_
the	_	_
slices	_	_
are	_	_
not	_	_
exactly	_	_
the	_	_
same	_	_
.	_	_

#539
Only	_	_
vertices	_	_
plotted	_	_
from	_	_
2	_	_
%	_	_
through	_	_
to	_	_
50	_	_
%	_	_
have	_	_
exactly	_	_
same	_	_
backward	_	_
and	_	_
forward	_	_
slice	_	_
resulting	_	_
in	_	_
the	_	_
large	_	_
coherent	_	_
cluster	_	_
.	_	_

#540
Table	_	_
7	_	_
shows	_	_
statistics	_	_
for	_	_
the	_	_
top	_	_
five	_	_
coherent	_	_
clusters	_	_
found	_	_
in	_	_
copia	_	_
.	_	_

#541
Other	_	_
than	_	_
the	_	_
largest	_	_
cluster	_	_
which	_	_
covers	_	_
48	_	_
%	_	_
of	_	_
the	_	_
program	_	_
,	_	_
the	_	_
rest	_	_
of	_	_
the	_	_
clusters	_	_
are	_	_
extremely	_	_
small	_	_
.	_	_

#542
Clusters	_	_
2-5	_	_
include	_	_
no	_	_
more	_	_
than	_	_
0.1	_	_
%	_	_
of	_	_
the	_	_
program	_	_
(	_	_
four	_	_
vertices	_	_
)	_	_
rendering	_	_
them	_	_
too	_	_
small	_	_
to	_	_
be	_	_
of	_	_
interest	_	_
.	_	_

#543
This	_	_
suggests	_	_
a	_	_
program	_	_
with	_	_
a	_	_
single	_	_
functionality	_	_
or	_	_
structure	_	_
.	_	_

#544
During	_	_
analysis	_	_
of	_	_
copiausing	_	_
decluvi	_	_
,	_	_
the	_	_
File	_	_
View	_	_
(	_	_
Fig	_	_
.	_	_
17	_	_
)	_	_
reveals	_	_
an	_	_
intriguing	_	_
structure	_	_
.	_	_

#545
There	_	_
is	_	_
a	_	_
large	_	_
block	_	_
of	_	_
code	_	_
with	_	_
the	_	_
same	_	_
spatial	_	_
arrangement	_	_
(	_	_
bounded	_	_
by	_	_
the	_	_
dotted	_	_
black	_	_
rectangle	_	_
in	_	_
Fig	_	_
.	_	_
17	_	_
)	_	_
that	_	_
belongs	_	_
to	_	_
the	_	_
largest	_	_
cluster	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#546
It	_	_
is	_	_
unusual	_	_
for	_	_
so	_	_
many	_	_
consecutive	_	_
source	_	_
code	_	_
lines	_	_
to	_	_
have	_	_
nearly	_	_
identical	_	_
length	_	_
and	_	_
indentation	_	_
.	_	_

#547
Inspection	_	_
of	_	_
the	_	_
source	_	_
code	_	_
reveals	_	_
that	_	_
this	_	_
block	_	_
of	_	_
code	_	_
is	_	_
a	_	_
switch	_	_
statement	_	_
handling	_	_
234	_	_
cases	_	_
.	_	_

#548
Further	_	_
investigation	_	_
shows	_	_
that	_	_
copiahas	_	_
234	_	_
small	_	_
functions	_	_
that	_	_
eventually	_	_
call	_	_
one	_	_
large	_	_
function	_	_
,	_	_
seleziona	_	_
,	_	_
which	_	_
in	_	_
turn	_	_
calls	_	_
the	_	_
smaller	_	_
functions	_	_
effectively	_	_
implementing	_	_
a	_	_
finite	_	_
state	_	_
machine	_	_
.	_	_

#549
Each	_	_
of	_	_
the	_	_
smaller	_	_
functions	_	_
returns	_	_
a	_	_
value	_	_
that	_	_
is	_	_
the	_	_
next	_	_
state	_	_
for	_	_
the	_	_
machine	_	_
and	_	_
is	_	_
used	_	_
by	_	_
the	_	_
switch	_	_
statement	_	_
to	_	_
call	_	_
the	_	_
appropriate	_	_
next	_	_
function	_	_
.	_	_

#550
The	_	_
primary	_	_
reason	_	_
for	_	_
the	_	_
high	_	_
level	_	_
of	_	_
dependence	_	_
in	_	_
the	_	_
program	_	_
lies	_	_
with	_	_
the	_	_
statement	_	_
switch	_	_
(	_	_
next_state	_	_
)	_	_
,	_	_
which	_	_
controls	_	_
the	_	_
calls	_	_
to	_	_
the	_	_
smaller	_	_
functions	_	_
.	_	_

#551
This	_	_
causes	_	_
what	_	_
might	feasibility-speculation	_
be	_	_
termed	_	_
'conservative	_	_
dependence	_	_
analysis	_	_
collateral	_	_
damage	_	_
'	_	_
because	_	_
the	_	_
static	_	_
analysis	_	_
can	capability	negation
not	_	_
determine	_	_
that	_	_
when	_	_
function	_	_
f	_	_
(	_	_
)	_	_
returns	_	_
the	_	_
constant	_	_
value	_	_
5	_	_
this	_	_
leads	_	_
the	_	_
switch	_	_
statement	_	_
to	_	_
eventually	_	_
invoke	_	_
function	_	_
g	_	_
(	_	_
)	_	_
.	_	_

#552
Instead	_	_
,	_	_
the	_	_
analysis	_	_
makes	_	_
the	_	_
conservative	_	_
assumption	_	_
that	_	_
a	_	_
call	_	_
to	_	_
f	_	_
(	_	_
)	_	_
might	options	_
be	_	_
followed	_	_
by	_	_
a	_	_
call	_	_
to	_	_
any	_	_
of	_	_
the	_	_
functions	_	_
called	_	_
in	_	_
the	_	_
switch	_	_
statement	_	_
,	_	_
resulting	_	_
in	_	_
a	_	_
mutual	_	_
recursion	_	_
involving	_	_
most	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#553
Although	_	_
the	_	_
coherent	_	_
cluster	_	_
still	_	_
shows	_	_
the	_	_
structure	_	_
of	_	_
the	_	_
program	_	_
and	_	_
includes	_	_
all	_	_
these	_	_
stub	_	_
functions	_	_
that	_	_
work	_	_
together	_	_
,	_	_
this	_	_
is	_	_
a	_	_
clear	_	_
case	_	_
of	_	_
dependence	_	_
pollution	_	_
(	_	_
Binkley	_	_
and	_	_
Harman	_	_
,	_	_
2005	_	_
)	_	_
,	_	_
which	_	_
is	_	_
avoidable	_	_
.	_	_

#554
To	_	_
illustrate	_	_
this	_	_
,	_	_
the	_	_
code	_	_
was	_	_
re-factored	_	_
to	_	_
simulate	_	_
the	_	_
replacement	_	_
of	_	_
the	_	_
integer	_	_
next_state	_	_
with	_	_
direct	_	_
recursive	_	_
function	_	_
calls	_	_
.	_	_

#555
The	_	_
SCG	_	_
for	_	_
the	_	_
modified	_	_
version	_	_
of	_	_
copiais	_	_
shown	_	_
in	_	_
Fig	_	_
.	_	_
16b	_	_
where	_	_
the	_	_
large	_	_
cluster	_	_
has	_	_
clearly	_	_
disappeared	_	_
.	_	_

#556
As	_	_
a	_	_
result	_	_
of	_	_
this	_	_
reduction	_	_
,	_	_
the	_	_
potential	_	_
impact	_	_
of	_	_
changes	_	_
to	_	_
the	_	_
program	_	_
will	_	_
be	_	_
greatly	_	_
reduced	_	_
,	_	_
making	_	_
it	_	_
easier	_	_
to	_	_
understand	_	_
and	_	_
maintain	_	_
.	_	_

#557
This	_	_
is	_	_
even	_	_
further	_	_
amplified	_	_
for	_	_
automatic	_	_
static	_	_
analysis	_	_
tools	_	_
such	_	_
as	_	_
CodeSurfer	_	_
.	_	_

#558
Of	_	_
course	_	_
,	_	_
in	_	_
order	_	_
to	_	_
do	_	_
a	_	_
proper	_	_
re-factoring	_	_
,	_	_
the	_	_
programmer	_	_
will	_	_
have	_	_
to	_	_
consider	_	_
ways	_	_
in	_	_
which	_	_
the	_	_
program	_	_
can	feasibility	_
be	_	_
re-written	_	_
to	_	_
change	_	_
the	_	_
flow	_	_
of	_	_
control	_	_
.	_	_

#559
Whether	_	_
such	_	_
a	_	_
re-factoring	_	_
is	_	_
deemed	_	_
cost-effective	_	_
is	_	_
a	_	_
decision	_	_
that	_	_
can	feasibility	_
only	_	_
be	_	_
taken	_	_
by	_	_
the	_	_
engineers	_	_
and	_	_
managers	_	_
responsible	_	_
for	_	_
maintaining	_	_
the	_	_
program	_	_
in	_	_
question	_	_
.	_	_

#560
This	_	_
case	_	_
study	_	_
reiterates	_	_
the	_	_
answer	_	_
for	_	_
RQ4	_	_
by	_	_
showing	_	_
the	_	_
structure	_	_
and	_	_
dependency	_	_
within	_	_
the	_	_
program	_	_
.	_	_

#561
It	_	_
also	_	_
identifies	_	_
potential	_	_
refactoring	_	_
points	_	_
which	_	_
can	capability	_
improve	_	_
the	_	_
performance	_	_
of	_	_
static	_	_
analysis	_	_
tools	_	_
and	_	_
make	_	_
the	_	_
program	_	_
easier	_	_
to	_	_
understand	_	_
.	_	_

#562
Inter-cluster	_	_
dependence	_	_
This	_	_
section	_	_
addresses	_	_
research	_	_
question	_	_
RQ5	_	_
:	_	_
What	_	_
are	_	_
the	_	_
implications	_	_
of	_	_
inter-cluster	_	_
dependence	_	_
between	_	_
coherent	_	_
clusters	_	_
?	_	_

#563
The	_	_
question	_	_
attempts	_	_
to	_	_
reveal	_	_
whether	_	_
there	_	_
is	_	_
dependence	_	_
(	_	_
slice	_	_
inclusion	_	_
)	_	_
relationship	_	_
between	_	_
the	_	_
vertices	_	_
of	_	_
different	_	_
coherent	_	_
clusters	_	_
.	_	_

#564
A	_	_
slice	_	_
inclusion	_	_
relationship	_	_
between	_	_
two	_	_
clusters	_	_
X	_	_
and	_	_
Y	_	_
exist	_	_
,	_	_
if	_	_
∃x∈X	_	_
:	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
∩Y≠∅	_	_
.	_	_

#565
If	_	_
such	_	_
containment	_	_
occurs	_	_
,	_	_
it	_	_
must	inference	_
be	_	_
a	_	_
strict	_	_
containment	_	_
relationship	_	_
(	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
∩Y=Y	_	_
,	_	_
see	_	_
Eq	_	_
.	_	_
1	_	_
)	_	_
.	_	_

#566
Defining	_	_
this	_	_
relation	_	_
using	_	_
forward	_	_
slices	_	_
produces	_	_
the	_	_
inverse	_	_
relation	_	_
.	_	_

#567
In	_	_
the	_	_
series	_	_
of	_	_
case	_	_
studies	_	_
presented	_	_
earlier	_	_
we	_	_
have	_	_
seen	_	_
that	_	_
coherent	_	_
clusters	_	_
map	_	_
to	_	_
logical	_	_
components	_	_
of	_	_
a	_	_
system	_	_
and	_	_
can	feasibility	_
be	_	_
used	_	_
to	_	_
gain	_	_
an	_	_
understanding	_	_
of	_	_
the	_	_
architecture	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#568
If	_	_
such	_	_
dependencies	_	_
exist	_	_
that	_	_
allows	_	_
entire	_	_
clusters	_	_
to	_	_
depend	_	_
on	_	_
other	_	_
clusters	_	_
,	_	_
then	_	_
this	_	_
dependence	_	_
relationship	_	_
can	feasibility	_
be	_	_
used	_	_
to	_	_
group	_	_
clusters	_	_
to	_	_
form	_	_
a	_	_
hierarchical	_	_
decomposition	_	_
of	_	_
the	_	_
system	_	_
where	_	_
coherent	_	_
clusters	_	_
are	_	_
regarded	_	_
as	_	_
sub-systems	_	_
,	_	_
opening	_	_
up	_	_
the	_	_
potential	_	_
use	_	_
of	_	_
coherent	_	_
clusters	_	_
in	_	_
reverse	_	_
engineering	_	_
.	_	_

#569
Secondly	_	_
,	_	_
if	_	_
there	_	_
are	_	_
mutual	_	_
dependency	_	_
relations	_	_
between	_	_
clusters	_	_
then	_	_
such	_	_
mutual	_	_
dependency	_	_
relationships	_	_
can	feasibility	_
be	_	_
used	_	_
to	_	_
provide	_	_
a	_	_
better	_	_
estimate	_	_
of	_	_
slice-based	_	_
clusters	_	_
.	_	_

#570
All	_	_
vertices	_	_
of	_	_
a	_	_
coherent	_	_
cluster	_	_
share	_	_
the	_	_
same	_	_
external	_	_
and	_	_
internal	_	_
dependence	_	_
,	_	_
that	_	_
is	_	_
,	_	_
all	_	_
vertices	_	_
have	_	_
the	_	_
same	_	_
backward	_	_
slice	_	_
and	_	_
also	_	_
the	_	_
same	_	_
forward	_	_
slice	_	_
.	_	_

#571
Because	_	_
of	_	_
this	_	_
,	_	_
any	_	_
backward/forward	_	_
slice	_	_
that	_	_
includes	_	_
a	_	_
vertex	_	_
from	_	_
a	_	_
cluster	_	_
will	_	_
also	_	_
include	_	_
all	_	_
other	_	_
vertices	_	_
of	_	_
the	_	_
same	_	_
cluster	_	_
(	_	_
Eq	_	_
.	_	_
1	_	_
)	_	_
.	_	_

#572
The	_	_
study	_	_
exploits	_	_
this	_	_
unique	_	_
property	_	_
of	_	_
coherent	_	_
clusters	_	_
to	_	_
investigate	_	_
whether	_	_
or	_	_
not	_	_
a	_	_
backward	_	_
slice	_	_
taken	_	_
with	_	_
respect	_	_
to	_	_
a	_	_
vertex	_	_
of	_	_
a	_	_
coherent	_	_
cluster	_	_
includes	_	_
vertices	_	_
of	_	_
another	_	_
cluster	_	_
.	_	_

#573
Note	_	_
that	_	_
if	_	_
vertices	_	_
of	_	_
coherent	_	_
cluster	_	_
X	_	_
are	_	_
contained	_	_
in	_	_
the	_	_
slice	_	_
taken	_	_
with	_	_
respect	_	_
to	_	_
a	_	_
vertex	_	_
of	_	_
coherent	_	_
cluster	_	_
Y	_	_
,	_	_
then	_	_
all	_	_
vertices	_	_
of	_	_
X	_	_
are	_	_
contained	_	_
in	_	_
the	_	_
slice	_	_
taken	_	_
with	_	_
respect	_	_
to	_	_
each	_	_
vertex	_	_
of	_	_
Y	_	_
(	_	_
follows	_	_
from	_	_
Eq	_	_
.	_	_
1	_	_
)	_	_
.	_	_

#574
Fig	_	_
.	_	_
18	_	_
shows	_	_
Cluster	_	_
Dependence	_	_
Graphs	_	_
(	_	_
CDG	_	_
)	_	_
for	_	_
each	_	_
of	_	_
the	_	_
four	_	_
case	_	_
study	_	_
subjects	_	_
.	_	_

#575
Only	_	_
the	_	_
five	_	_
largest	_	_
clusters	_	_
of	_	_
the	_	_
case	_	_
study	_	_
subjects	_	_
are	_	_
considered	_	_
during	_	_
this	_	_
study	_	_
.	_	_

#576
The	_	_
graphs	_	_
depict	_	_
slice	_	_
containment	_	_
relationships	_	_
between	_	_
the	_	_
top	_	_
five	_	_
clusters	_	_
of	_	_
each	_	_
program	_	_
.	_	_

#577
In	_	_
these	_	_
graphs	_	_
,	_	_
the	_	_
top	_	_
five	_	_
clusters	_	_
are	_	_
represented	_	_
by	_	_
nodes	_	_
(	_	_
1	_	_
depicts	_	_
the	_	_
largest	_	_
coherent	_	_
cluster	_	_
,	_	_
while	_	_
5	_	_
is	_	_
the	_	_
5th	_	_
largest	_	_
cluster	_	_
)	_	_
and	_	_
the	_	_
directional	_	_
edges	_	_
denote	_	_
backward	_	_
slice22	_	_
A	_	_
definition	_	_
based	_	_
on	_	_
forward	_	_
slices	_	_
will	_	_
have	_	_
the	_	_
same	_	_
results	_	_
with	_	_
reversed	_	_
edges	_	_
.	_	_

#578
inclusion	_	_
relationships	_	_
:	_	_
A→B	_	_
depicts	_	_
that	_	_
vertices	_	_
of	_	_
cluster	_	_
B	_	_
depend	_	_
on	_	_
vertices	_	_
of	_	_
cluster	_	_
A	_	_
,	_	_
that	_	_
is	_	_
,	_	_
a	_	_
backward	_	_
slice	_	_
of	_	_
any	_	_
vertex	_	_
of	_	_
cluster	_	_
B	_	_
will	_	_
include	_	_
all	_	_
vertices	_	_
of	_	_
cluster	_	_
A	_	_
(	_	_
∀x∈B	_	_
:	_	_
BSlice	_	_
(	_	_
x	_	_
)	_	_
∩A=A	_	_
)	_	_
.	_	_

#579
Bi-directional	_	_
edges	_	_
show	_	_
mutual	_	_
dependencies	_	_
,	_	_
whereas	_	_
uni-directional	_	_
edges	_	_
show	_	_
dependency	_	_
in	_	_
one	_	_
direction	_	_
only	_	_
.	_	_

#580
In	_	_
the	_	_
graph	_	_
for	_	_
copia	_	_
(	_	_
Fig	_	_
.	_	_
18a	_	_
)	_	_
,	_	_
the	_	_
top	_	_
five	_	_
clusters	_	_
have	_	_
no	_	_
slice	_	_
inclusion	_	_
relationships	_	_
between	_	_
them	_	_
(	_	_
absence	_	_
of	_	_
edges	_	_
between	_	_
the	_	_
nodes	_	_
of	_	_
the	_	_
CDG	_	_
)	_	_
.	_	_

#581
Looking	_	_
at	_	_
Table	_	_
7	_	_
,	_	_
only	_	_
the	_	_
largest	_	_
cluster	_	_
of	_	_
copiais	_	_
truly	_	_
large	_	_
at	_	_
48	_	_
%	_	_
,	_	_
while	_	_
the	_	_
other	_	_
four	_	_
clusters	_	_
are	_	_
extremely	_	_
small	_	_
making	_	_
them	_	_
unlikely	_	_
candidates	_	_
for	_	_
inter-cluster	_	_
dependence	_	_
.	_	_

#582
For	_	_
acct	_	_
(	_	_
Fig	_	_
.	_	_
18b	_	_
)	_	_
there	_	_
is	_	_
a	_	_
dependence	_	_
between	_	_
all	_	_
of	_	_
the	_	_
top	_	_
five	_	_
clusters	_	_
.	_	_

#583
In	_	_
fact	_	_
,	_	_
there	_	_
is	_	_
mutual	_	_
dependence	_	_
between	_	_
clusters	_	_
1	_	_
,	_	_
2	_	_
,	_	_
3	_	_
and	_	_
4	_	_
,	_	_
while	_	_
cluster	_	_
5	_	_
depends	_	_
on	_	_
all	_	_
the	_	_
other	_	_
four	_	_
clusters	_	_
but	_	_
not	_	_
mutually	_	_
.	_	_

#584
Clusters	_	_
1	_	_
through	_	_
4	_	_
contain	_	_
logic	_	_
for	_	_
manipulating	_	_
,	_	_
accessing	_	_
,	_	_
and	_	_
maintaining	_	_
the	_	_
hash	_	_
tables	_	_
,	_	_
making	_	_
them	_	_
interdependent	_	_
.	_	_

#585
Cluster	_	_
5	_	_
on	_	_
the	_	_
other	_	_
hand	_	_
is	_	_
a	_	_
loop	_	_
structure	_	_
within	_	_
the	_	_
main	_	_
function	_	_
for	_	_
executing	_	_
different	_	_
cases	_	_
based	_	_
on	_	_
command	_	_
line	_	_
inputs	_	_
.	_	_

#586
Similarly	_	_
for	_	_
indent	_	_
(	_	_
Fig	_	_
.	_	_
18c	_	_
)	_	_
,	_	_
clusters	_	_
1	_	_
,	_	_
2	_	_
,	_	_
4	_	_
,	_	_
and	_	_
5	_	_
are	_	_
mutually	_	_
dependent	_	_
and	_	_
3	_	_
depends	_	_
on	_	_
all	_	_
the	_	_
other	_	_
top	_	_
five	_	_
clusters	_	_
but	_	_
not	_	_
mutually	_	_
.	_	_

#587
Finally	_	_
,	_	_
in	_	_
the	_	_
case	_	_
of	_	_
bc	_	_
(	_	_
Fig	_	_
.	_	_
18d	_	_
)	_	_
,	_	_
all	_	_
the	_	_
vertices	_	_
from	_	_
the	_	_
top	_	_
five	_	_
clusters	_	_
are	_	_
mutually	_	_
inter-dependent	_	_
.	_	_

#588
The	_	_
rest	_	_
of	_	_
this	_	_
section	_	_
uses	_	_
bcas	_	_
an	_	_
example	_	_
where	_	_
this	_	_
mutual	_	_
dependence	_	_
is	_	_
used	_	_
to	_	_
identify	_	_
larger	_	_
dependence	_	_
structures	_	_
by	_	_
grouping	_	_
of	_	_
the	_	_
inter-dependent	_	_
coherent	_	_
clusters	_	_
.	_	_

#589
At	_	_
first	_	_
glance	_	_
it	_	_
may	options	_
seem	_	_
that	_	_
the	_	_
grouping	_	_
of	_	_
the	_	_
coherent	_	_
clusters	_	_
is	_	_
simply	_	_
reversing	_	_
the	_	_
splitting	_	_
of	_	_
same-backward-slice	_	_
or	_	_
same-forward-slice	_	_
clusters	_	_
observed	_	_
earlier	_	_
in	_	_
Section	_	_
3.6.3	_	_
.	_	_

#590
However	_	_
,	_	_
examining	_	_
the	_	_
sizes	_	_
of	_	_
the	_	_
top	_	_
five	_	_
same-backward-slice	_	_
clusters	_	_
,	_	_
same-forward-slice	_	_
clusters	_	_
and	_	_
coherent	_	_
clusters	_	_
for	_	_
bcillustrates	_	_
that	_	_
it	_	_
is	_	_
not	_	_
the	_	_
case	_	_
.	_	_

#591
Table	_	_
8	_	_
shows	_	_
the	_	_
size	_	_
of	_	_
these	_	_
clusters	_	_
both	_	_
in	_	_
terms	_	_
of	_	_
number	_	_
of	_	_
vertices	_	_
and	_	_
as	_	_
a	_	_
percentage	_	_
of	_	_
the	_	_
program	_	_
.	_	_

#592
The	_	_
combined	_	_
size	_	_
of	_	_
the	_	_
group	_	_
of	_	_
top	_	_
five	_	_
inter-dependent	_	_
coherent	_	_
clusters	_	_
is	_	_
70.43	_	_
%	_	_
,	_	_
which	_	_
is	_	_
15.67	_	_
%	_	_
larger	_	_
than	_	_
the	_	_
largest	_	_
same-backward-slice	_	_
cluster	_	_
(	_	_
54.86	_	_
%	_	_
)	_	_
and	_	_
37.91	_	_
%	_	_
larger	_	_
than	_	_
the	_	_
same-forward-slice	_	_
cluster	_	_
(	_	_
32.35	_	_
%	_	_
)	_	_
.	_	_

#593
Therefore	_	_
,	_	_
the	_	_
set	_	_
of	_	_
all	_	_
(	_	_
mutually	_	_
dependent	_	_
)	_	_
vertices	_	_
from	_	_
the	_	_
top	_	_
five	_	_
coherent	_	_
clusters	_	_
when	_	_
taken	_	_
together	_	_
form	_	_
a	_	_
larger	_	_
dependence	_	_
structure	_	_
,	_	_
an	_	_
estimate	_	_
of	_	_
a	_	_
slice-based	_	_
cluster	_	_
.	_	_

#594
As	_	_
an	_	_
answer	_	_
to	_	_
RQ5	_	_
,	_	_
this	_	_
section	_	_
shows	_	_
that	_	_
there	_	_
are	_	_
dependence	_	_
relationships	_	_
between	_	_
coherent	_	_
clusters	_	_
and	_	_
in	_	_
some	_	_
cases	_	_
there	_	_
are	_	_
mutual	_	_
dependences	_	_
between	_	_
large	_	_
coherent	_	_
clusters	_	_
.	_	_

#595
It	_	_
also	_	_
shows	_	_
that	_	_
it	_	_
may	speculation	_
be	_	_
possible	_	_
to	_	_
leverage	_	_
this	_	_
inter-cluster	_	_
relationship	_	_
to	_	_
build	_	_
a	_	_
hierarchical	_	_
system	_	_
decomposition	_	_
.	_	_

#596
Furthermore	_	_
,	_	_
groups	_	_
of	_	_
inter-dependent	_	_
coherent	_	_
clusters	_	_
form	_	_
larger	_	_
dependence	_	_
structures	_	_
than	_	_
same-slice	_	_
clusters	_	_
and	_	_
provides	_	_
a	_	_
better	_	_
approximation	_	_
for	_	_
slice-based	_	_
clusters	_	_
.	_	_

#597
This	_	_
indicates	_	_
that	_	_
the	_	_
sizes	_	_
of	_	_
dependence	_	_
clusters	_	_
reported	_	_
by	_	_
previous	_	_
studies	_	_
(	_	_
Binkley	_	_
et	_	_
al.	_	_
,	_	_
2008	_	_
;	_	_
Binkley	_	_
and	_	_
Harman	_	_
,	_	_
2005	_	_
,	_	_
2009	_	_
;	_	_
Harman	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
;	_	_
Islam	_	_
et	_	_
al.	_	_
,	_	_
2010b	_	_
)	_	_
maybe	_	_
conservative	_	_
and	_	_
mutual	_	_
dependence	_	_
clusters	_	_
are	_	_
larger	_	_
and	_	_
more	_	_
prevalent	_	_
than	_	_
previously	_	_
reported	_	_
.	_	_

#598
Dependence	_	_
clusters	_	_
and	_	_
bug	_	_
fixes	_	_
Initial	_	_
work	_	_
on	_	_
dependence	_	_
clusters	_	_
advised	_	_
that	_	_
they	_	_
might	capability-speculation	_
cause	_	_
problems	_	_
in	_	_
software	_	_
maintenance	_	_
,	_	_
and	_	_
thus	_	_
even	_	_
be	_	_
considered	_	_
harmful	_	_
,	_	_
because	_	_
they	_	_
represent	_	_
an	_	_
intricate	_	_
interweaving	_	_
of	_	_
mutual	_	_
dependencies	_	_
between	_	_
program	_	_
elements	_	_
.	_	_

#599
Thus	_	_
a	_	_
large	_	_
dependence	_	_
cluster	_	_
might	feasibility	_
be	_	_
thought	_	_
of	_	_
as	_	_
a	_	_
bad	_	_
code	_	_
smell	_	_
(	_	_
Elssamadisy	_	_
and	_	_
Schalliol	_	_
,	_	_
2002	_	_
)	_	_
or	_	_
a	_	_
anti-pattern	_	_
(	_	_
Binkley	_	_
et	_	_
al.	_	_
,	_	_
2008	_	_
)	_	_
.	_	_

#600
Black	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2006	_	_
)	_	_
suggested	_	_
that	_	_
dependence	_	_
clusters	_	_
are	_	_
potentially	_	_
where	_	_
bugs	_	_
may	speculation	_
be	_	_
located	_	_
and	_	_
suggested	_	_
the	_	_
possibility	_	_
of	_	_
a	_	_
link	_	_
between	_	_
clusters	_	_
and	_	_
program	_	_
faults	_	_
.	_	_

#601
This	_	_
section	_	_
further	_	_
investigates	_	_
this	_	_
issue	_	_
using	_	_
a	_	_
study	_	_
that	_	_
explores	_	_
the	_	_
relationship	_	_
between	_	_
program	_	_
faults	_	_
and	_	_
dependence	_	_
clusters	_	_
.	_	_

#602
In	_	_
doing	_	_
so	_	_
,	_	_
it	_	_
addresses	_	_
research	_	_
question	_	_
RQ6	_	_
:	_	_
How	_	_
do	_	_
program	_	_
faults	_	_
relate	_	_
to	_	_
coherent	_	_
clusters	_	_
?	_	_

#603
Barcode	_	_
,	_	_
an	_	_
open	_	_
source	_	_
utility	_	_
tool	_	_
for	_	_
converting	_	_
text	_	_
strings	_	_
to	_	_
printed	_	_
bars	_	_
(	_	_
barcodes	_	_
)	_	_
is	_	_
used	_	_
in	_	_
this	_	_
study	_	_
.	_	_

#604
A	_	_
series	_	_
of	_	_
versions	_	_
of	_	_
the	_	_
system	_	_
are	_	_
available	_	_
for	_	_
download	_	_
from	_	_
GNU	_	_
repository.33	_	_
http	_	_
:	_	_
//gnu.mirror.iweb.com/gnu/barcode/	_	_
.	_	_

#605
There	_	_
are	_	_
nine	_	_
public	_	_
releases	_	_
for	_	_
barcode	_	_
,	_	_
details	_	_
of	_	_
which	_	_
are	_	_
shown	_	_
in	_	_
Table	_	_
9	_	_
.	_	_

#606
Column	_	_
1	_	_
shows	_	_
the	_	_
release	_	_
version	_	_
,	_	_
columns	_	_
3-6	_	_
show	_	_
various	_	_
metrics	_	_
about	_	_
the	_	_
size	_	_
of	_	_
the	_	_
system	_	_
in	_	_
terms	_	_
of	_	_
number	_	_
of	_	_
source	_	_
files	_	_
and	_	_
various	_	_
source	_	_
code	_	_
size	_	_
measures	_	_
.	_	_

#607
Columns	_	_
7-9	_	_
report	_	_
the	_	_
number	_	_
of	_	_
SDG	_	_
vertices	_	_
,	_	_
SDG	_	_
edges	_	_
and	_	_
the	_	_
number	_	_
of	_	_
slices	_	_
produced	_	_
for	_	_
each	_	_
release	_	_
.	_	_

#608
Finally	_	_
,	_	_
Column	_	_
10	_	_
reports	_	_
the	_	_
number	_	_
of	_	_
faults	_	_
that	_	_
were	_	_
fixed	_	_
since	_	_
the	_	_
previous	_	_
release	_	_
of	_	_
the	_	_
system	_	_
.	_	_

#609
In	_	_
Table	_	_
9	_	_
the	_	_
size	_	_
of	_	_
barcode	_	_
increases	_	_
from	_	_
1352	_	_
lines	_	_
of	_	_
code	_	_
in	_	_
version	_	_
0.90	_	_
to	_	_
3968	_	_
lines	_	_
of	_	_
code	_	_
in	_	_
version	_	_
0.98	_	_
.	_	_

#610
The	_	_
total	_	_
number	_	_
of	_	_
faults	_	_
that	_	_
were	_	_
fixed	_	_
during	_	_
this	_	_
time	_	_
was	_	_
39	_	_
.	_	_

#611
Fault	_	_
data	_	_
,	_	_
gathered	_	_
by	_	_
manually	_	_
analyzing	_	_
the	_	_
publicly	_	_
available	_	_
version	_	_
control	_	_
repository44	_	_
cvs.savannah.gnu.org	_	_
:	_	_
/sources/barcode	_	_
.	_	_

#612
for	_	_
the	_	_
system	_	_
,	_	_
showed	_	_
that	_	_
total	_	_
number	_	_
of	_	_
commits	_	_
for	_	_
barcode	_	_
during	_	_
these	_	_
releases	_	_
were	_	_
137	_	_
.	_	_

#613
Each	_	_
update	_	_
was	_	_
manually	_	_
checked	_	_
using	_	_
CVSAnaly	_	_
(	_	_
Robles	_	_
et	_	_
al.	_	_
,	_	_
2004	_	_
)	_	_
to	_	_
determine	_	_
whether	_	_
the	_	_
update	_	_
was	_	_
a	_	_
bug	_	_
fix	_	_
or	_	_
simply	_	_
an	_	_
enhancement	_	_
or	_	_
upgrade	_	_
to	_	_
the	_	_
system	_	_
.	_	_

#614
Those	_	_
commits	_	_
that	_	_
were	_	_
identified	_	_
as	_	_
bug	_	_
fixes	_	_
were	_	_
isolated	_	_
and	_	_
mapped	_	_
to	_	_
the	_	_
release	_	_
that	_	_
contained	_	_
the	_	_
update	_	_
.	_	_

#615
All	_	_
the	_	_
bug	_	_
fixes	_	_
made	_	_
during	_	_
a	_	_
certain	_	_
release	_	_
cycle	_	_
were	_	_
then	_	_
accumulated	_	_
to	_	_
give	_	_
the	_	_
total	_	_
number	_	_
of	_	_
bugs	_	_
fixed	_	_
during	_	_
a	_	_
particular	_	_
release	_	_
cycle	_	_
(	_	_
Column	_	_
10	_	_
of	_	_
Table	_	_
9	_	_
)	_	_
.	_	_

#616
The	_	_
reported	_	_
number	_	_
only	_	_
includes	_	_
bug	_	_
fixes	_	_
and	_	_
does	_	_
not	_	_
include	_	_
enhancement	_	_
or	_	_
addition	_	_
of	_	_
new	_	_
functionality	_	_
.	_	_

#617
Fig	_	_
.	_	_
19	_	_
shows	_	_
the	_	_
backward	_	_
slice	_	_
size	_	_
plots	_	_
for	_	_
all	_	_
versions	_	_
of	_	_
barcode	_	_
in	_	_
a	_	_
single	_	_
graph	_	_
.	_	_

#618
The	_	_
values	_	_
of	_	_
the	_	_
axises	_	_
in	_	_
Fig	_	_
.	_	_
19	_	_
are	_	_
shown	_	_
as	_	_
vertex	_	_
counts	_	_
rather	_	_
than	_	_
relative	_	_
values	_	_
(	_	_
percentages	_	_
)	_	_
.	_	_

#619
This	_	_
allows	_	_
the	_	_
growth	_	_
of	_	_
barcode	_	_
to	_	_
be	_	_
easily	_	_
visualized	_	_
.	_	_

#620
From	_	_
the	_	_
plots	_	_
it	_	_
is	_	_
seen	_	_
that	_	_
the	_	_
size	_	_
of	_	_
the	_	_
program	_	_
increases	_	_
progressively	_	_
with	_	_
each	_	_
new	_	_
release	_	_
.	_	_

#621
The	_	_
graphs	_	_
also	_	_
show	_	_
that	_	_
a	_	_
significant	_	_
number	_	_
of	_	_
vertices	_	_
in	_	_
each	_	_
revision	_	_
of	_	_
the	_	_
program	_	_
yields	_	_
identical	_	_
backward	_	_
slices	_	_
and	_	_
the	_	_
proportion	_	_
of	_	_
vertices	_	_
in	_	_
the	_	_
program	_	_
that	_	_
have	_	_
identical	_	_
backward	_	_
slices	_	_
stays	_	_
roughly	_	_
the	_	_
same	_	_
.	_	_

#622
Overall	_	_
,	_	_
the	_	_
profile	_	_
of	_	_
the	_	_
clusters	_	_
and	_	_
slices	_	_
remains	_	_
consistent	_	_
.	_	_

#623
The	_	_
graph	_	_
also	_	_
shows	_	_
that	_	_
the	_	_
plots	_	_
do	_	_
not	_	_
show	_	_
any	_	_
significant	_	_
change	_	_
in	_	_
their	_	_
overall	_	_
shape	_	_
or	_	_
structure	_	_
.	_	_

#624
Interestingly	_	_
,	_	_
the	_	_
plot	_	_
for	_	_
version	_	_
0.92	_	_
with	_	_
9	_	_
fault	_	_
fixes	_	_
is	_	_
not	_	_
different	_	_
in	_	_
shape	_	_
from	_	_
revision	_	_
0.94	_	_
where	_	_
only	_	_
a	_	_
single	_	_
fault	_	_
was	_	_
fixed	_	_
.	_	_

#625
As	_	_
coherent	_	_
clusters	_	_
are	_	_
composed	_	_
of	_	_
both	_	_
backward	_	_
and	_	_
forward	_	_
slices	_	_
,	_	_
the	_	_
stability	_	_
of	_	_
the	_	_
backward	_	_
slice	_	_
profile	_	_
itself	_	_
does	_	_
not	_	_
guarantee	_	_
the	_	_
stability	_	_
of	_	_
coherent	_	_
cluster	_	_
profile	_	_
.	_	_

#626
The	_	_
remainder	_	_
of	_	_
this	_	_
section	_	_
looks	_	_
at	_	_
how	_	_
the	_	_
clustering	_	_
profile	_	_
is	_	_
affected	_	_
by	_	_
bug	_	_
fixes	_	_
.	_	_

#627
Fig	_	_
.	_	_
20	_	_
shows	_	_
individual	_	_
SCGs	_	_
for	_	_
each	_	_
version	_	_
of	_	_
barcode	_	_
.	_	_

#628
As	_	_
coherent	_	_
clusters	_	_
are	_	_
dependent	_	_
on	_	_
both	_	_
backward	_	_
and	_	_
forward	_	_
slices	_	_
,	_	_
such	_	_
clusters	_	_
will	_	_
be	_	_
more	_	_
sensitive	_	_
to	_	_
changes	_	_
in	_	_
dependences	_	_
within	_	_
the	_	_
program	_	_
.	_	_

#629
The	_	_
SCGs	_	_
show	_	_
that	_	_
from	_	_
the	_	_
initial	_	_
version	_	_
barcode-0.90	_	_
there	_	_
were	_	_
two	_	_
coherent	_	_
clusters	_	_
in	_	_
the	_	_
system	_	_
.	_	_

#630
The	_	_
smaller	_	_
one	_	_
is	_	_
around	_	_
10	_	_
%	_	_
of	_	_
the	_	_
code	_	_
while	_	_
the	_	_
larger	_	_
is	_	_
around	_	_
40	_	_
%	_	_
of	_	_
the	_	_
code	_	_
.	_	_

#631
As	_	_
the	_	_
system	_	_
evolved	_	_
and	_	_
went	_	_
through	_	_
various	_	_
modifications	_	_
and	_	_
enhancements	_	_
,	_	_
the	_	_
number	_	_
of	_	_
clusters	_	_
and	_	_
the	_	_
profile	_	_
of	_	_
the	_	_
clusters	_	_
remained	_	_
consistent	_	_
other	_	_
than	_	_
its	_	_
scaled	_	_
growth	_	_
with	_	_
the	_	_
increase	_	_
in	_	_
program	_	_
size	_	_
.	_	_

#632
It	_	_
is	_	_
also	_	_
evident	_	_
that	_	_
during	_	_
evolution	_	_
of	_	_
the	_	_
system	_	_
,	_	_
the	_	_
enhancement	_	_
code	_	_
or	_	_
newly	_	_
added	_	_
code	_	_
formed	_	_
part	_	_
of	_	_
the	_	_
larger	_	_
cluster	_	_
.	_	_

#633
This	_	_
is	_	_
why	_	_
in	_	_
the	_	_
later	_	_
stages	_	_
of	_	_
the	_	_
evolution	_	_
we	_	_
see	_	_
an	_	_
increase	_	_
in	_	_
the	_	_
size	_	_
of	_	_
the	_	_
largest	_	_
cluster	_	_
,	_	_
but	_	_
not	_	_
the	_	_
smaller	_	_
one	_	_
.	_	_

#634
However	_	_
,	_	_
we	_	_
do	_	_
not	_	_
see	_	_
any	_	_
significant	_	_
changes	_	_
in	_	_
the	_	_
slice	_	_
and	_	_
cluster	_	_
profile	_	_
of	_	_
the	_	_
program	_	_
that	_	_
can	feasibility	_
be	_	_
attributed	_	_
to	_	_
bug	_	_
fixes	_	_
.	_	_

#635
For	_	_
example	_	_
,	_	_
the	_	_
single	_	_
bug	_	_
fixed	_	_
between	_	_
revisions	_	_
0.93	_	_
and	_	_
0.94	_	_
was	_	_
on	_	_
a	_	_
single	_	_
line	_	_
of	_	_
code	_	_
from	_	_
the	_	_
file	_	_
code128.c	_	_
.	_	_

#636
The	_	_
changes	_	_
to	_	_
the	_	_
line	_	_
is	_	_
shown	_	_
in	_	_
Fig	_	_
.	_	_
21	_	_
(	_	_
in	_	_
version	_	_
0.93	_	_
there	_	_
is	_	_
an	_	_
error	_	_
in	_	_
calculating	_	_
the	_	_
checksum	_	_
value	_	_
,	_	_
which	_	_
was	_	_
corrected	_	_
in	_	_
version	_	_
0.94	_	_
)	_	_
.	_	_

#637
As	_	_
illustrated	_	_
by	_	_
this	_	_
example	_	_
,	_	_
the	_	_
data	_	_
and	_	_
control	_	_
flow	_	_
of	_	_
the	_	_
program	_	_
and	_	_
thus	_	_
the	_	_
dependencies	_	_
between	_	_
program	_	_
points	_	_
are	_	_
not	_	_
affected	_	_
by	_	_
the	_	_
bug	_	_
fix	_	_
and	_	_
hence	_	_
no	_	_
change	_	_
is	_	_
observed	_	_
between	_	_
the	_	_
SCGs	_	_
of	_	_
the	_	_
two	_	_
releases	_	_
(	_	_
Fig	_	_
.	_	_
20	_	_
)	_	_
.	_	_

#638
If	_	_
dependence	_	_
clusters	_	_
correlated	_	_
to	_	_
faults	_	_
,	_	_
or	_	_
,	_	_
if	_	_
dependence	_	_
clusters	_	_
were	_	_
directly	_	_
related	_	_
to	_	_
the	_	_
number	_	_
of	_	_
faults	_	_
in	_	_
a	_	_
program	_	_
,	_	_
then	_	_
a	_	_
significant	_	_
difference	_	_
would	_	_
be	_	_
expected	_	_
in	_	_
the	_	_
shape	_	_
of	_	_
the	_	_
SCG	_	_
when	_	_
faults	_	_
were	_	_
rectified	_	_
.	_	_

#639
The	_	_
SCGs	_	_
for	_	_
program	_	_
barcode	_	_
(	_	_
Fig	_	_
.	_	_
20	_	_
)	_	_
show	_	_
no	_	_
change	_	_
in	_	_
their	_	_
profile	_	_
when	_	_
faults	_	_
within	_	_
the	_	_
program	_	_
are	_	_
fixed	_	_
.	_	_

#640
This	_	_
provides	_	_
evidence	_	_
that	_	_
faults	_	_
may	speculation	negation
not	_	_
be	_	_
dictated	_	_
by	_	_
the	_	_
presence	_	_
or	_	_
absence	_	_
of	_	_
dependence	_	_
clusters	_	_
.	_	_

#641
As	_	_
an	_	_
answer	_	_
to	_	_
RQ6	_	_
,	_	_
the	_	_
study	_	_
of	_	_
barcode	_	_
finds	_	_
no	_	_
correlation	_	_
between	_	_
the	_	_
existence	_	_
of	_	_
dependence	_	_
clusters	_	_
and	_	_
program	_	_
faults	_	_
and	_	_
their	_	_
fix	_	_
.	_	_

#642
We	_	_
have	_	_
to	_	_
be	_	_
careful	_	_
in	_	_
generalising	_	_
the	_	_
answer	_	_
to	_	_
this	_	_
question	_	_
because	_	_
of	_	_
the	_	_
small	_	_
dataset	_	_
considered	_	_
in	_	_
this	_	_
study	_	_
,	_	_
further	_	_
extended	_	_
research	_	_
is	_	_
needed	_	_
to	_	_
derive	_	_
a	_	_
more	_	_
generalised	_	_
answer	_	_
.	_	_

#643
Moreover	_	_
,	_	_
this	_	_
does	_	_
not	_	_
exclude	_	_
the	_	_
possibility	_	_
that	_	_
most	_	_
program	_	_
faults	_	_
occur	_	_
in	_	_
code	_	_
that	_	_
are	_	_
part	_	_
of	_	_
large	_	_
clusters	_	_
.	_	_

#644
In	_	_
future	_	_
we	_	_
plan	_	_
to	_	_
extend	_	_
this	_	_
experiment	_	_
in	_	_
a	_	_
qualitative	_	_
form	_	_
to	_	_
study	_	_
whether	_	_
program	_	_
faults	_	_
lie	_	_
within	_	_
large	_	_
or	_	_
small	_	_
clusters	_	_
,	_	_
or	_	_
outside	_	_
them	_	_
altogether	_	_
.	_	_

#645
Clusters	_	_
and	_	_
system	_	_
evolution	_	_
The	_	_
previous	_	_
section	_	_
showed	_	_
that	_	_
for	_	_
barcode	_	_
the	_	_
slice	_	_
and	_	_
cluster	_	_
profiles	_	_
remain	_	_
quite	_	_
stable	_	_
through	_	_
bug	_	_
fixes	_	_
during	_	_
system	_	_
evolution	_	_
and	_	_
its	_	_
growth	_	_
of	_	_
almost	_	_
2.5	_	_
times	_	_
over	_	_
a	_	_
period	_	_
of	_	_
3	_	_
years	_	_
.	_	_

#646
This	_	_
section	_	_
extends	_	_
that	_	_
study	_	_
by	_	_
looking	_	_
for	_	_
cluster	_	_
changes	_	_
during	_	_
system	_	_
evolution	_	_
.	_	_

#647
It	_	_
addresses	_	_
RQ7	_	_
:	_	_
How	_	_
stable	_	_
are	_	_
coherent	_	_
clusters	_	_
during	_	_
system	_	_
evolution	_	_
?	_	_

#648
using	_	_
longitudinal	_	_
analysis	_	_
of	_	_
the	_	_
case	_	_
studies	_	_
presented	_	_
earlier	_	_
.	_	_

#649
From	_	_
the	_	_
GNU	_	_
repository	_	_
we	_	_
were	_	_
able	_	_
to	_	_
retrieve	_	_
four	_	_
releases	_	_
for	_	_
bc	_	_
,	_	_
four	_	_
releases	_	_
for	_	_
acct	_	_
and	_	_
14	_	_
releases	_	_
for	_	_
indent	_	_
.	_	_

#650
As	_	_
copia	_	_
is	_	_
an	_	_
industrial	_	_
closed-source	_	_
program	_	_
,	_	_
we	_	_
were	_	_
unable	_	_
to	_	_
obtain	_	_
any	_	_
previous	_	_
versions	_	_
of	_	_
the	_	_
program	_	_
and	_	_
thus	_	_
the	_	_
program	_	_
is	_	_
excluded	_	_
from	_	_
this	_	_
study	_	_
.	_	_

#651
The	_	_
graphs	_	_
in	_	_
Fig	_	_
.	_	_
22	_	_
show	_	_
backward	_	_
slice	_	_
size	_	_
overlays	_	_
for	_	_
every	_	_
version	_	_
of	_	_
each	_	_
program	_	_
.	_	_

#652
Fig	_	_
.	_	_
22a	_	_
and	_	_
c	_	_
for	_	_
bc	_	_
and	_	_
indent	_	_
show	_	_
that	_	_
these	_	_
systems	_	_
grow	_	_
in	_	_
size	_	_
during	_	_
its	_	_
evolution	_	_
.	_	_

#653
The	_	_
growth	_	_
is	_	_
more	_	_
prominent	_	_
in	_	_
indent	_	_
(	_	_
Fig	_	_
.	_	_
22c	_	_
)	_	_
where	_	_
the	_	_
program	_	_
grows	_	_
from	_	_
around	_	_
4800	_	_
vertices	_	_
in	_	_
its	_	_
initial	_	_
version	_	_
to	_	_
around	_	_
7000	_	_
vertices	_	_
in	_	_
the	_	_
final	_	_
version	_	_
.	_	_

#654
The	_	_
growth	_	_
for	_	_
bc	_	_
is	_	_
smaller	_	_
,	_	_
it	_	_
grows	_	_
from	_	_
around	_	_
6000	_	_
vertices	_	_
to	_	_
7000	_	_
vertices	_	_
.	_	_

#655
This	_	_
is	_	_
partly	_	_
because	_	_
the	_	_
versions	_	_
considered	_	_
for	_	_
bc	_	_
are	_	_
all	_	_
minor	_	_
revisions	_	_
.	_	_

#656
For	_	_
both	_	_
bc	_	_
and	_	_
indent	_	_
the	_	_
slice-size	_	_
graphs	_	_
show	_	_
very	_	_
little	_	_
change	_	_
in	_	_
their	_	_
profile	_	_
.	_	_

#657
The	_	_
graphs	_	_
mainly	_	_
show	_	_
a	_	_
scale	_	_
up	_	_
that	_	_
parallels	_	_
the	_	_
growth	_	_
of	_	_
the	_	_
system	_	_
.	_	_

#658
For	_	_
acct	_	_
(	_	_
Fig	_	_
.	_	_
22b	_	_
)	_	_
the	_	_
plots	_	_
do	_	_
not	_	_
simply	_	_
show	_	_
a	_	_
scale	_	_
up	_	_
but	_	_
show	_	_
a	_	_
significant	_	_
difference	_	_
.	_	_

#659
In	_	_
the	_	_
4	_	_
plots	_	_
,	_	_
the	_	_
revisions	_	_
that	_	_
belong	_	_
to	_	_
the	_	_
same	_	_
major	_	_
release	_	_
are	_	_
seen	_	_
to	_	_
be	_	_
similar	_	_
and	_	_
show	_	_
a	_	_
scaling	_	_
,	_	_
whereas	_	_
those	_	_
from	_	_
different	_	_
major	_	_
releases	_	_
show	_	_
very	_	_
different	_	_
landscapes	_	_
.	_	_

#660
The	_	_
remainder	_	_
of	_	_
this	_	_
section	_	_
gives	_	_
detail	_	_
of	_	_
these	_	_
clustering	_	_
profile	_	_
changes	_	_
.	_	_

#661
Fig	_	_
.	_	_
23	_	_
shows	_	_
the	_	_
BSCGs	_	_
for	_	_
the	_	_
four	_	_
versions	_	_
of	_	_
bc	_	_
.	_	_

#662
Initially	_	_
,	_	_
the	_	_
backward	_	_
slice	_	_
size	_	_
plots	_	_
(	_	_
solid	_	_
black	_	_
lines	_	_
)	_	_
show	_	_
very	_	_
little	_	_
difference	_	_
.	_	_

#663
However	_	_
,	_	_
upon	_	_
closer	_	_
inspection	_	_
of	_	_
the	_	_
last	_	_
three	_	_
versions	_	_
we	_	_
see	_	_
that	_	_
the	_	_
backward	_	_
slice	_	_
size	_	_
plot	_	_
changes	_	_
slightly	_	_
at	_	_
around	_	_
the	_	_
80	_	_
%	_	_
mark	_	_
on	_	_
the	_	_
x-axis	_	_
.	_	_

#664
This	_	_
is	_	_
highlighted	_	_
by	_	_
the	_	_
fact	_	_
that	_	_
the	_	_
later	_	_
three	_	_
versions	_	_
show	_	_
an	_	_
additional	_	_
coherent	_	_
cluster	_	_
spanning	_	_
from	_	_
85	_	_
%	_	_
to	_	_
100	_	_
%	_	_
on	_	_
the	_	_
x-axis	_	_
which	_	_
is	_	_
absent	_	_
from	_	_
the	_	_
initial	_	_
release	_	_
.	_	_

#665
Upon	_	_
inspection	_	_
of	_	_
the	_	_
source	_	_
code	_	_
changes	_	_
between	_	_
versions	_	_
bc-1.03	_	_
and	_	_
bc-1.04	_	_
the	_	_
following	_	_
types	_	_
of	_	_
updates	_	_
were	_	_
found:1	_	_
bug	_	_
fixes	_	_
,	_	_
2	_	_
addition	_	_
of	_	_
command	_	_
line	_	_
options	_	_
,	_	_
3	_	_
reorganization	_	_
of	_	_
the	_	_
source	_	_
tree	_	_
,	_	_
and	_	_
4	_	_
addition	_	_
of	_	_
new	_	_
commands	_	_
for	_	_
dc	_	_
.	_	_

#666
The	_	_
reorganization	_	_
of	_	_
the	_	_
program	_	_
involved	_	_
significant	_	_
architectural	_	_
changes	_	_
that	_	_
separated	_	_
out	_	_
the	_	_
code	_	_
supporting	_	_
bc	_	_
's	_	_
related	_	_
dc	_	_
functionality	_	_
into	_	_
a	_	_
separate	_	_
hierarchy	_	_
and	_	_
moved	_	_
files	_	_
common	_	_
to	_	_
both	_	_
bc	_	_
and	_	_
dc	_	_
to	_	_
a	_	_
library	_	_
.	_	_

#667
This	_	_
refactoring	_	_
of	_	_
the	_	_
code	_	_
broke	_	_
up	_	_
the	_	_
largest	_	_
cluster	_	_
into	_	_
two	_	_
clusters	_	_
,	_	_
where	_	_
a	_	_
new	_	_
third	_	_
cluster	_	_
is	_	_
formed	_	_
as	_	_
seen	_	_
in	_	_
the	_	_
SCG	_	_
.	_	_

#668
Thus	_	_
,	_	_
the	_	_
major	_	_
restructuring	_	_
of	_	_
the	_	_
code	_	_
between	_	_
revisions	_	_
1.03	_	_
and	_	_
1.04	_	_
causes	_	_
a	_	_
significant	_	_
change	_	_
in	_	_
the	_	_
cluster	_	_
profile	_	_
.	_	_

#669
Almost	_	_
no	_	_
other	_	_
change	_	_
is	_	_
seen	_	_
in	_	_
the	_	_
cluster	_	_
profile	_	_
between	_	_
the	_	_
remaining	_	_
three	_	_
bc	_	_
revisions	_	_
1.04	_	_
,	_	_
1.05	_	_
,	_	_
and	_	_
1.06	_	_
,	_	_
where	_	_
no	_	_
significant	_	_
restructuring	_	_
took	_	_
place	_	_
.	_	_

#670
Fig	_	_
.	_	_
24	_	_
shows	_	_
the	_	_
SCGs	_	_
for	_	_
the	_	_
four	_	_
versions	_	_
of	_	_
acct	_	_
considered	_	_
in	_	_
this	_	_
study	_	_
.	_	_

#671
The	_	_
slice	_	_
profile	_	_
and	_	_
the	_	_
cluster	_	_
profile	_	_
show	_	_
very	_	_
little	_	_
change	_	_
between	_	_
acct-6.3	_	_
and	_	_
acct-6.3.2	_	_
.	_	_

#672
Similarly	_	_
,	_	_
not	_	_
much	_	_
change	_	_
is	_	_
seen	_	_
between	_	_
acct-6.5	_	_
and	_	_
acct-6.5.5	_	_
.	_	_

#673
However	_	_
,	_	_
the	_	_
slice	_	_
and	_	_
the	_	_
cluster	_	_
profiles	_	_
change	_	_
significantly	_	_
between	_	_
major	_	_
revisions	_	_
,	_	_
6.3.X	_	_
and	_	_
6.5.X	_	_
.	_	_

#674
The	_	_
change	_	_
log	_	_
of	_	_
release	_	_
6.5	_	_
notes	_	_
"	_	_
Huge	_	_
code-refactoring	_	_
.	_	_
"	_	_

#675
The	_	_
refactoring	_	_
of	_	_
the	_	_
code	_	_
is	_	_
primarily	_	_
in	_	_
the	_	_
way	_	_
system	_	_
log	_	_
files	_	_
are	_	_
handled	_	_
using	_	_
utmp_rd.c	_	_
,	_	_
file_rd.c	_	_
,	_	_
dump-utmp.c	_	_
and	_	_
stored	_	_
using	_	_
hash	_	_
tables	_	_
whose	_	_
operations	_	_
are	_	_
defined	_	_
in	_	_
hashtab.c	_	_
and	_	_
uid_hash.c	_	_
.	_	_

#676
Finally	_	_
,	_	_
Fig	_	_
.	_	_
25	_	_
shows	_	_
the	_	_
SCGs	_	_
for	_	_
the	_	_
14	_	_
versions	_	_
of	_	_
indent	_	_
.	_	_

#677
These	_	_
revisions	_	_
include	_	_
two	_	_
major	_	_
releases	_	_
.	_	_

#678
It	_	_
is	_	_
evident	_	_
from	_	_
the	_	_
SCGs	_	_
that	_	_
the	_	_
slice	_	_
profile	_	_
during	_	_
the	_	_
evolution	_	_
hardly	_	_
changes	_	_
.	_	_

#679
The	_	_
cluster	_	_
profile	_	_
also	_	_
remains	_	_
similar	_	_
through	_	_
the	_	_
evolution	_	_
.	_	_

#680
The	_	_
system	_	_
grows	_	_
from	_	_
4466	_	_
to	_	_
6521	_	_
SLoC	_	_
during	_	_
its	_	_
evolution	_	_
which	_	_
is	_	_
supported	_	_
by	_	_
Fig	_	_
.	_	_
22c	_	_
showing	_	_
the	_	_
growth	_	_
of	_	_
the	_	_
system	_	_
SDG	_	_
size	_	_
.	_	_

#681
Indent	_	_
is	_	_
a	_	_
program	_	_
for	_	_
formatting	_	_
C	_	_
programs	_	_
.	_	_

#682
A	_	_
study	_	_
of	_	_
the	_	_
change	_	_
logs	_	_
for	_	_
indent	_	_
did	_	_
not	_	_
reveal	_	_
any	_	_
major	_	_
refactoring	_	_
or	_	_
restructuring	_	_
.	_	_

#683
The	_	_
changes	_	_
to	_	_
the	_	_
system	_	_
were	_	_
mostly	_	_
bug	_	_
fixes	_	_
and	_	_
upgrades	_	_
to	_	_
support	_	_
new	_	_
command	_	_
line	_	_
options	_	_
.	_	_

#684
This	_	_
results	_	_
in	_	_
almost	_	_
negligible	_	_
changes	_	_
in	_	_
the	_	_
slice	_	_
and	_	_
cluster	_	_
profiles	_	_
despite	_	_
the	_	_
system	_	_
evolution	_	_
and	_	_
growth	_	_
.	_	_

#685
As	_	_
an	_	_
answer	_	_
to	_	_
RQ7	_	_
,	_	_
this	_	_
study	_	_
finds	_	_
that	_	_
unless	_	_
there	_	_
is	_	_
significant	_	_
refactoring	_	_
of	_	_
the	_	_
system	_	_
,	_	_
coherent	_	_
cluster	_	_
profiles	_	_
remain	_	_
stable	_	_
during	_	_
system	_	_
evolution	_	_
and	_	_
thus	_	_
captures	_	_
the	_	_
core	_	_
architecture	_	_
of	_	_
the	_	_
program	_	_
in	_	_
all	_	_
three	_	_
case	_	_
studies	_	_
.	_	_

#686
Future	_	_
work	_	_
will	_	_
replicate	_	_
this	_	_
longitudinal	_	_
study	_	_
on	_	_
a	_	_
large	_	_
code	_	_
corpus	_	_
to	_	_
ascertain	_	_
whether	_	_
this	_	_
stability	_	_
holds	_	_
for	_	_
other	_	_
programs	_	_
.	_	_

#687
Threats	_	_
to	_	_
validity	_	_
This	_	_
section	_	_
presents	_	_
threats	_	_
to	_	_
the	_	_
validity	_	_
of	_	_
the	_	_
results	_	_
presented	_	_
.	_	_

#688
Threats	_	_
to	_	_
three	_	_
types	_	_
of	_	_
validity	_	_
(	_	_
external	_	_
,	_	_
internal	_	_
and	_	_
construct	_	_
)	_	_
are	_	_
considered	_	_
.	_	_

#689
The	_	_
primary	_	_
external	_	_
threat	_	_
arises	_	_
from	_	_
the	_	_
possibility	_	_
that	_	_
the	_	_
programs	_	_
selected	_	_
are	_	_
not	_	_
representative	_	_
of	_	_
programs	_	_
in	_	_
general	_	_
(	_	_
i.e.	_	_
,	_	_
the	_	_
findings	_	_
of	_	_
the	_	_
experiments	_	_
do	_	_
not	_	_
apply	_	_
to	_	_
'typical	_	_
'	_	_
programs	_	_
)	_	_
.	_	_

#690
This	_	_
is	_	_
a	_	_
reasonable	_	_
concern	_	_
that	_	_
applies	_	_
to	_	_
any	_	_
study	_	_
of	_	_
program	_	_
properties	_	_
.	_	_

#691
To	_	_
address	_	_
this	_	_
issue	_	_
,	_	_
a	_	_
set	_	_
of	_	_
thirty	_	_
open-source	_	_
and	_	_
industrial	_	_
programs	_	_
were	_	_
analyzed	_	_
in	_	_
the	_	_
quantitative	_	_
study	_	_
.	_	_

#692
The	_	_
programs	_	_
were	_	_
not	_	_
selected	_	_
based	_	_
on	_	_
any	_	_
criteria	_	_
or	_	_
property	_	_
and	_	_
thus	_	_
represent	_	_
a	_	_
random	_	_
selection	_	_
from	_	_
various	_	_
domains	_	_
.	_	_

#693
However	_	_
,	_	_
these	_	_
were	_	_
from	_	_
the	_	_
set	_	_
of	_	_
programs	_	_
that	_	_
were	_	_
studied	_	_
in	_	_
previous	_	_
work	_	_
on	_	_
dependence	_	_
clusters	_	_
to	_	_
facilitate	_	_
comparison	_	_
with	_	_
previous	_	_
results	_	_
.	_	_

#694
In	_	_
addition	_	_
,	_	_
all	_	_
of	_	_
the	_	_
programs	_	_
studied	_	_
were	_	_
C	_	_
programs	_	_
,	_	_
so	_	_
there	_	_
is	_	_
greater	_	_
uncertainty	_	_
that	_	_
the	_	_
results	_	_
will	_	_
hold	_	_
for	_	_
other	_	_
programming	_	_
paradigms	_	_
such	_	_
as	_	_
object-oriented	_	_
or	_	_
aspect-oriented	_	_
programming	_	_
.	_	_

#695
Internal	_	_
validity	_	_
is	_	_
the	_	_
degree	_	_
to	_	_
which	_	_
conclusions	_	_
can	feasibility	_
be	_	_
drawn	_	_
about	_	_
the	_	_
causal	_	_
effect	_	_
of	_	_
the	_	_
independent	_	_
variables	_	_
on	_	_
the	_	_
dependent	_	_
variable	_	_
.	_	_

#696
The	_	_
use	_	_
of	_	_
hash	_	_
values	_	_
to	_	_
approximate	_	_
slice	_	_
content	_	_
during	_	_
clustering	_	_
is	_	_
a	_	_
source	_	_
of	_	_
potential	_	_
internal	_	_
threat	_	_
.	_	_

#697
The	_	_
approach	_	_
assumes	_	_
that	_	_
hash	_	_
values	_	_
uniquely	_	_
identify	_	_
slice	_	_
contents	_	_
.	_	_

#698
Hash	_	_
functions	_	_
are	_	_
prone	_	_
to	_	_
hash	_	_
collision	_	_
which	_	_
in	_	_
our	_	_
approach	_	_
can	capability-options	_
cause	_	_
clustering	_	_
errors	_	_
.	_	_

#699
The	_	_
hash	_	_
function	_	_
used	_	_
is	_	_
carefully	_	_
crafted	_	_
to	_	_
minimize	_	_
collision	_	_
and	_	_
its	_	_
use	_	_
is	_	_
validated	_	_
in	_	_
Section	_	_
3.3	_	_
.	_	_

#700
Furthermore	_	_
,	_	_
the	_	_
identification	_	_
of	_	_
logical	_	_
structure	_	_
in	_	_
programs	_	_
were	_	_
done	_	_
by	_	_
the	_	_
authors	_	_
of	_	_
the	_	_
paper	_	_
who	_	_
are	_	_
not	_	_
involved	_	_
in	_	_
the	_	_
development	_	_
of	_	_
any	_	_
of	_	_
the	_	_
case	_	_
study	_	_
subjects	_	_
.	_	_

#701
This	_	_
brings	_	_
about	_	_
the	_	_
possibility	_	_
that	_	_
the	_	_
identified	_	_
structures	_	_
do	_	_
not	_	_
represent	_	_
actual	_	_
logical	_	_
constructs	_	_
of	_	_
the	_	_
programs	_	_
.	_	_

#702
As	_	_
the	_	_
case	_	_
studies	_	_
are	_	_
Unix	_	_
utilities	_	_
,	_	_
their	_	_
design	_	_
specification	_	_
are	_	_
not	_	_
available	_	_
for	_	_
evaluation	_	_
.	_	_

#703
Future	_	_
work	_	_
will	_	_
entail	_	_
consultation	_	_
with	_	_
the	_	_
development	_	_
team	_	_
of	_	_
the	_	_
systems	_	_
to	_	_
further	_	_
validate	_	_
the	_	_
results	_	_
.	_	_

#704
Construct	_	_
validity	_	_
refers	_	_
to	_	_
the	_	_
validity	_	_
that	_	_
observations	_	_
or	_	_
measurement	_	_
tools	_	_
actually	_	_
represent	_	_
or	_	_
measure	_	_
the	_	_
construct	_	_
being	_	_
investigated	_	_
.	_	_

#705
In	_	_
this	_	_
paper	_	_
,	_	_
one	_	_
possible	_	_
threat	_	_
to	_	_
construct	_	_
arises	_	_
from	_	_
the	_	_
potential	_	_
for	_	_
faults	_	_
in	_	_
the	_	_
slicer	_	_
.	_	_

#706
A	_	_
mature	_	_
and	_	_
widely	_	_
used	_	_
slicing	_	_
tool	_	_
(	_	_
CodeSurfer	_	_
)	_	_
is	_	_
used	_	_
to	_	_
mitigate	_	_
this	_	_
concern	_	_
.	_	_

#707
Another	_	_
possible	_	_
concern	_	_
surrounds	_	_
the	_	_
precision	_	_
of	_	_
the	_	_
pointer	_	_
analysis	_	_
used	_	_
.	_	_

#708
An	_	_
overly	_	_
conservative	_	_
,	_	_
and	_	_
therefore	_	_
imprecise	_	_
,	_	_
analysis	_	_
would	_	_
tend	_	_
to	_	_
increase	_	_
the	_	_
levels	_	_
of	_	_
dependence	_	_
and	_	_
potentially	_	_
also	_	_
increase	_	_
the	_	_
size	_	_
of	_	_
clusters	_	_
.	_	_

#709
There	_	_
is	_	_
no	_	_
automatic	_	_
way	_	_
to	_	_
tell	_	_
whether	_	_
a	_	_
cluster	_	_
arises	_	_
because	_	_
of	_	_
imprecision	_	_
in	_	_
the	_	_
computation	_	_
of	_	_
dependence	_	_
or	_	_
whether	_	_
it	_	_
is	_	_
'real	_	_
'	_	_
.	_	_

#710
Section	_	_
3.2	_	_
discusses	_	_
the	_	_
various	_	_
pointer	_	_
analysis	_	_
settings	_	_
and	_	_
validates	_	_
its	_	_
precision	_	_
.	_	_

#711
CodeSurfer	_	_
's	_	_
most	_	_
precise	_	_
pointer	_	_
analysis	_	_
option	_	_
was	_	_
used	_	_
for	_	_
the	_	_
study	_	_
.	_	_

#712
Related	_	_
work	_	_
In	_	_
testing	_	_
,	_	_
dependence	_	_
analysis	_	_
has	_	_
been	_	_
shown	_	_
to	_	_
be	_	_
effective	_	_
at	_	_
reducing	_	_
the	_	_
computational	_	_
effort	_	_
required	_	_
to	_	_
automate	_	_
the	_	_
test-data	_	_
generation	_	_
process	_	_
(	_	_
Ali	_	_
et	_	_
al.	_	_
,	_	_
2010	_	_
)	_	_
.	_	_

#713
In	_	_
software	_	_
maintenance	_	_
,	_	_
dependence	_	_
analysis	_	_
is	_	_
used	_	_
to	_	_
protect	_	_
a	_	_
software	_	_
maintainer	_	_
against	_	_
the	_	_
potentially	_	_
unforeseen	_	_
side	_	_
effects	_	_
of	_	_
a	_	_
maintenance	_	_
change	_	_
.	_	_

#714
This	_	_
can	feasibility	_
be	_	_
achieved	_	_
by	_	_
measuring	_	_
the	_	_
impact	_	_
of	_	_
the	_	_
proposed	_	_
change	_	_
(	_	_
Black	_	_
,	_	_
2001	_	_
)	_	_
or	_	_
by	_	_
attempting	_	_
to	_	_
identify	_	_
portions	_	_
of	_	_
code	_	_
for	_	_
which	_	_
a	_	_
change	_	_
can	feasibility	_
be	_	_
safely	_	_
performed	_	_
free	_	_
from	_	_
side	_	_
effects	_	_
(	_	_
Gallagher	_	_
and	_	_
Lyle	_	_
,	_	_
1991	_	_
;	_	_
Tonella	_	_
,	_	_
2003	_	_
)	_	_
.	_	_

#715
A	_	_
recently	_	_
proposed	_	_
impact	_	_
analysis	_	_
framework	_	_
(	_	_
Acharya	_	_
and	_	_
Robinson	_	_
,	_	_
2011	_	_
)	_	_
reports	_	_
that	_	_
impact	_	_
sets	_	_
are	_	_
often	_	_
part	_	_
of	_	_
large	_	_
dependence	_	_
clusters	_	_
when	_	_
using	_	_
time	_	_
consuming	_	_
but	_	_
high	_	_
precision	_	_
slicing	_	_
.	_	_

#716
When	_	_
low	_	_
precision	_	_
slicing	_	_
is	_	_
used	_	_
,	_	_
the	_	_
study	_	_
reports	_	_
smaller	_	_
dependence	_	_
clusters	_	_
.	_	_

#717
This	_	_
paper	_	_
uses	_	_
the	_	_
most	_	_
precise	_	_
static	_	_
slicing	_	_
available	_	_
.	_	_

#718
There	_	_
has	_	_
also	_	_
been	_	_
recent	_	_
work	_	_
on	_	_
finding	_	_
dependence	_	_
communities	_	_
in	_	_
software	_	_
(	_	_
Hamilton	_	_
and	_	_
Danicic	_	_
,	_	_
2012	_	_
)	_	_
where	_	_
social	_	_
network	_	_
community	_	_
structure	_	_
detection	_	_
algorithms	_	_
are	_	_
applied	_	_
to	_	_
slice-inclusion	_	_
graphs	_	_
to	_	_
identify	_	_
communities	_	_
.	_	_

#719
Dependence	_	_
clusters	_	_
have	_	_
previously	_	_
been	_	_
linked	_	_
to	_	_
software	_	_
faults	_	_
(	_	_
Black	_	_
et	_	_
al.	_	_
,	_	_
2006	_	_
)	_	_
and	_	_
have	_	_
been	_	_
identified	_	_
as	_	_
a	_	_
potentially	_	_
harmful	_	_
'dependence	_	_
anti-pattern	_	_
'	_	_
(	_	_
Binkley	_	_
et	_	_
al.	_	_
,	_	_
2008	_	_
)	_	_
.	_	_

#720
The	_	_
presence	_	_
of	_	_
large	_	_
dependence	_	_
cluster	_	_
was	_	_
thought	_	_
to	_	_
reduce	_	_
the	_	_
effectiveness	_	_
of	_	_
testing	_	_
and	_	_
maintenance	_	_
support	_	_
techniques	_	_
.	_	_

#721
Having	_	_
considered	_	_
dependence	_	_
clusters	_	_
harmful	_	_
,	_	_
previous	_	_
work	_	_
on	_	_
dependence	_	_
clusters	_	_
focuses	_	_
on	_	_
locating	_	_
dependence	_	_
clusters	_	_
,	_	_
understanding	_	_
their	_	_
cause	_	_
,	_	_
and	_	_
removing	_	_
them	_	_
.	_	_

#722
The	_	_
first	_	_
of	_	_
these	_	_
studies	_	_
(	_	_
Binkley	_	_
and	_	_
Harman	_	_
,	_	_
2005	_	_
;	_	_
Harman	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
)	_	_
were	_	_
based	_	_
on	_	_
efficient	_	_
technique	_	_
for	_	_
locating	_	_
dependence	_	_
clusters	_	_
and	_	_
identifying	_	_
dependence	_	_
pollution	_	_
(	_	_
avoidable	_	_
dependence	_	_
clusters	_	_
)	_	_
.	_	_

#723
One	_	_
common	_	_
cause	_	_
of	_	_
large	_	_
dependence	_	_
clusters	_	_
is	_	_
the	_	_
use	_	_
of	_	_
global	_	_
variables	_	_
.	_	_

#724
A	_	_
study	_	_
of	_	_
21	_	_
programs	_	_
found	_	_
that	_	_
50	_	_
%	_	_
of	_	_
the	_	_
programs	_	_
had	_	_
a	_	_
global	_	_
variable	_	_
that	_	_
was	_	_
responsible	_	_
for	_	_
holding	_	_
together	_	_
large	_	_
dependence	_	_
clusters	_	_
(	_	_
Binkley	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
)	_	_
.	_	_

#725
Other	_	_
work	_	_
on	_	_
dependence	_	_
clusters	_	_
in	_	_
software	_	_
engineering	_	_
has	_	_
considered	_	_
clusters	_	_
at	_	_
both	_	_
low-level	_	_
(	_	_
Binkley	_	_
and	_	_
Harman	_	_
,	_	_
2005	_	_
;	_	_
Harman	_	_
et	_	_
al.	_	_
,	_	_
2009	_	_
)	_	_
(	_	_
SDG	_	_
based	_	_
)	_	_
and	_	_
high-level	_	_
(	_	_
Eisenbarth	_	_
et	_	_
al.	_	_
,	_	_
2003	_	_
;	_	_
Mitchell	_	_
and	_	_
Mancoridis	_	_
,	_	_
2006	_	_
)	_	_
(	_	_
models	_	_
and	_	_
functions	_	_
)	_	_
abstractions	_	_
.	_	_

#726
This	_	_
paper	_	_
extends	_	_
our	_	_
previous	_	_
work	_	_
which	_	_
introduced	_	_
coherent	_	_
dependence	_	_
clusters	_	_
(	_	_
Islam	_	_
et	_	_
al.	_	_
,	_	_
2010b	_	_
)	_	_
and	_	_
decluvi	_	_
(	_	_
Islam	_	_
et	_	_
al.	_	_
,	_	_
2010a	_	_
)	_	_
.	_	_

#727
Previous	_	_
work	_	_
established	_	_
the	_	_
existence	_	_
of	_	_
coherent	_	_
dependence	_	_
clusters	_	_
and	_	_
detailed	_	_
the	_	_
functionalities	_	_
of	_	_
the	_	_
visualization	_	_
tool	_	_
.	_	_

#728
This	_	_
paper	_	_
extends	_	_
previous	_	_
work	_	_
in	_	_
many	_	_
ways	_	_
,	_	_
firstly	_	_
by	_	_
introducing	_	_
an	_	_
efficient	_	_
hashing	_	_
algorithm	_	_
for	_	_
slice	_	_
approximation	_	_
.	_	_

#729
This	_	_
improves	_	_
on	_	_
the	_	_
precision	_	_
of	_	_
previous	_	_
slice	_	_
approximation	_	_
from	_	_
78	_	_
%	_	_
to	_	_
95	_	_
%	_	_
,	_	_
resulting	_	_
in	_	_
precise	_	_
and	_	_
accurate	_	_
clustering	_	_
.	_	_

#730
The	_	_
coherent	_	_
cluster	_	_
existence	_	_
study	_	_
is	_	_
extended	_	_
to	_	_
empirically	_	_
validate	_	_
the	_	_
results	_	_
by	_	_
considering	_	_
30	_	_
production	_	_
programs	_	_
.	_	_

#731
Additional	_	_
case	_	_
studies	_	_
show	_	_
that	_	_
coherent	_	_
clusters	_	_
can	capability	_
help	_	_
reveal	_	_
the	_	_
structure	_	_
of	_	_
a	_	_
program	_	_
and	_	_
identify	_	_
structural	_	_
defects	_	_
.	_	_

#732
We	_	_
also	_	_
introduce	_	_
the	_	_
notion	_	_
of	_	_
inter-cluster	_	_
dependence	_	_
which	_	_
will	_	_
form	_	_
the	_	_
base	_	_
of	_	_
reverse	_	_
engineering	_	_
efforts	_	_
in	_	_
future	_	_
.	_	_

#733
Finally	_	_
,	_	_
we	_	_
also	_	_
present	_	_
studies	_	_
which	_	_
show	_	_
the	_	_
lack	_	_
of	_	_
correlation	_	_
between	_	_
coherent	_	_
clusters	_	_
and	_	_
bug	_	_
fixes	_	_
and	_	_
show	_	_
that	_	_
coherent	_	_
clusters	_	_
remain	_	_
surprisingly	_	_
stable	_	_
during	_	_
system	_	_
evolution	_	_
.	_	_

#734
In	_	_
some	_	_
ways	_	_
our	_	_
work	_	_
follows	_	_
the	_	_
evolutionary	_	_
development	_	_
of	_	_
the	_	_
study	_	_
of	_	_
software	_	_
clones	_	_
(	_	_
Bellon	_	_
et	_	_
al.	_	_
,	_	_
2007	_	_
)	_	_
,	_	_
which	_	_
were	_	_
thought	_	_
to	_	_
be	_	_
harmful	_	_
and	_	_
problematic	_	_
when	_	_
first	_	_
observed	_	_
.	_	_

#735
Further	_	_
reflection	_	_
and	_	_
analysis	_	_
revealed	_	_
that	_	_
these	_	_
code	_	_
clone	_	_
structures	_	_
were	_	_
a	_	_
widespread	_	_
phenomena	_	_
that	_	_
deserved	_	_
study	_	_
and	_	_
consideration	_	_
.	_	_

#736
While	_	_
engineers	_	_
needed	_	_
to	_	_
be	_	_
aware	_	_
of	_	_
them	_	_
,	_	_
it	_	_
remains	_	_
a	_	_
subject	_	_
of	_	_
much	_	_
debate	_	_
as	_	_
to	_	_
whether	_	_
or	_	_
not	_	_
they	_	_
should	deontic	_
be	_	_
refactored	_	_
,	_	_
tolerated	_	_
or	_	_
even	_	_
nurtured	_	_
(	_	_
Bouktif	_	_
et	_	_
al.	_	_
,	_	_
2006	_	_
;	_	_
Kapser	_	_
and	_	_
Godfrey	_	_
,	_	_
2008	_	_
)	_	_
.	_	_

#737
We	_	_
believe	_	_
the	_	_
same	_	_
kind	_	_
of	_	_
discussion	_	_
may	speculation	_
apply	_	_
to	_	_
dependence	_	_
clusters	_	_
.	_	_

#738
While	_	_
dependence	_	_
clusters	_	_
may	options	concessive
have	_	_
significant	_	_
impact	_	_
on	_	_
comprehension	_	_
and	_	_
maintenance	_	_
and	_	_
though	_	_
there	_	_
is	_	_
evidence	_	_
that	_	_
these	_	_
clusters	_	_
are	_	_
a	_	_
widespread	_	_
phenomena	_	_
,	_	_
it	_	_
is	_	_
not	_	_
always	_	_
obvious	_	_
whether	_	_
they	_	_
can	feasibility	_
be	_	_
or	_	_
should	deontic	_
be	_	_
removed	_	_
or	_	_
refactored	_	_
.	_	_

#739
There	_	_
may	options	_
be	_	_
a	_	_
(	_	_
good	_	_
)	_	_
reason	_	_
for	_	_
the	_	_
presence	_	_
of	_	_
a	_	_
cluster	_	_
and/or	_	_
it	_	_
may	options	negation
not	_	_
be	_	_
obvious	_	_
how	_	_
it	_	_
can	feasibility	_
be	_	_
removed	_	_
(	_	_
though	_	_
its	_	_
presence	_	_
should	deontic	_
surely	_	_
be	_	_
brought	_	_
to	_	_
the	_	_
attention	_	_
of	_	_
the	_	_
software	_	_
maintainer	_	_
)	_	_
.	_	_

#740
These	_	_
observations	_	_
motivate	_	_
further	_	_
study	_	_
to	_	_
investigate	_	_
and	_	_
understand	_	_
dependence	_	_
clusters	_	_
,	_	_
and	_	_
to	_	_
provide	_	_
tools	_	_
to	_	_
support	_	_
software	_	_
engineers	_	_
in	_	_
their	_	_
analysis	_	_
.	_	_

#741
In	_	_
support	_	_
of	_	_
future	_	_
research	_	_
,	_	_
we	_	_
make	_	_
available	_	_
all	_	_
data	_	_
from	_	_
our	_	_
study	_	_
at	_	_
the	_	_
website	_	_
http	_	_
:	_	_
//www.cs.ucl.ac.uk/staff/s.islam/decluvi.html	_	_
.	_	_

#742
The	_	_
reader	_	_
can	feasibility	_
obtain	_	_
the	_	_
slices	_	_
for	_	_
each	_	_
program	_	_
studied	_	_
and	_	_
the	_	_
clusters	_	_
they	_	_
form	_	_
,	_	_
facilitating	_	_
replication	_	_
of	_	_
our	_	_
results	_	_
and	_	_
other	_	_
studies	_	_
of	_	_
dependence	_	_
and	_	_
dependence	_	_
clusters	_	_
.	_	_

#743
The	_	_
visualizations	_	_
used	_	_
in	_	_
this	_	_
paper	_	_
are	_	_
similar	_	_
to	_	_
those	_	_
used	_	_
for	_	_
program	_	_
comprehension	_	_
.	_	_

#744
Seesoft	_	_
(	_	_
Eick	_	_
et	_	_
al.	_	_
,	_	_
1992	_	_
)	_	_
is	_	_
a	_	_
seminal	_	_
tool	_	_
for	_	_
line	_	_
oriented	_	_
visualization	_	_
of	_	_
software	_	_
statistics	_	_
.	_	_

#745
The	_	_
system	_	_
pioneered	_	_
four	_	_
key	_	_
ideas	_	_
:	_	_
reduced	_	_
representation	_	_
,	_	_
coloring	_	_
by	_	_
statistic	_	_
,	_	_
direct	_	_
manipulation	_	_
,	_	_
and	_	_
capability	_	_
to	_	_
read	_	_
actual	_	_
code	_	_
.	_	_

#746
The	_	_
reduced	_	_
representation	_	_
was	_	_
achieved	_	_
by	_	_
displaying	_	_
files	_	_
in	_	_
columns	_	_
with	_	_
lines	_	_
of	_	_
code	_	_
as	_	_
lines	_	_
of	_	_
pixels	_	_
.	_	_

#747
This	_	_
approach	_	_
allows	_	_
50,000	_	_
lines	_	_
of	_	_
code	_	_
to	_	_
be	_	_
shown	_	_
on	_	_
a	_	_
single	_	_
screen	_	_
.	_	_

#748
The	_	_
SeeSys	_	_
System	_	_
(	_	_
Baker	_	_
and	_	_
Eick	_	_
,	_	_
1995	_	_
)	_	_
introduced	_	_
tree	_	_
maps	_	_
to	_	_
show	_	_
hierarchical	_	_
data	_	_
.	_	_

#749
It	_	_
displays	_	_
code	_	_
organized	_	_
hierarchically	_	_
into	_	_
subsystems	_	_
,	_	_
directories	_	_
,	_	_
and	_	_
files	_	_
by	_	_
representing	_	_
the	_	_
whole	_	_
system	_	_
as	_	_
a	_	_
rectangle	_	_
and	_	_
recursively	_	_
representing	_	_
the	_	_
various	_	_
sub-units	_	_
with	_	_
interior	_	_
rectangles	_	_
.	_	_

#750
The	_	_
area	_	_
of	_	_
each	_	_
rectangle	_	_
is	_	_
used	_	_
to	_	_
reflect	_	_
statistic	_	_
associated	_	_
with	_	_
the	_	_
sub-unit	_	_
.	_	_

#751
Decluvi	_	_
builds	_	_
on	_	_
the	_	_
SeeSoft	_	_
concepts	_	_
through	_	_
different	_	_
abstractions	_	_
and	_	_
dynamic	_	_
mapping	_	_
of	_	_
line	_	_
statistics	_	_
removing	_	_
the	_	_
50,000	_	_
line	_	_
limitation	_	_
.	_	_

#752
An	_	_
alternative	_	_
software	_	_
visualization	_	_
approach	_	_
often	_	_
used	_	_
in	_	_
program	_	_
comprehension	_	_
does	_	_
not	_	_
use	_	_
the	_	_
"	_	_
line	_	_
of	_	_
pixels	_	_
"	_	_
approach	_	_
,	_	_
but	_	_
instead	_	_
uses	_	_
nested	_	_
graphs	_	_
for	_	_
hierarchical	_	_
fish-eye	_	_
views	_	_
.	_	_

#753
Most	_	_
of	_	_
these	_	_
tools	_	_
focus	_	_
on	_	_
visualizing	_	_
high-level	_	_
system	_	_
abstractions	_	_
(	_	_
often	_	_
referred	_	_
to	_	_
as	_	_
'clustering	_	_
'	_	_
or	_	_
'aggregation	_	_
'	_	_
)	_	_
such	_	_
as	_	_
classes	_	_
,	_	_
modules	_	_
,	_	_
and	_	_
packages	_	_
.	_	_

#754
A	_	_
popular	_	_
example	_	_
is	_	_
the	_	_
reverse	_	_
engineering	_	_
tool	_	_
Rigi	_	_
(	_	_
Storey	_	_
et	_	_
al.	_	_
,	_	_
1997	_	_
)	_	_
.	_	_

#755
Summary	_	_
and	_	_
future	_	_
work	_	_
Previous	_	_
work	_	_
has	_	_
deemed	_	_
dependence	_	_
clusters	_	_
to	_	_
be	_	_
problematic	_	_
as	_	_
they	_	_
inhibit	_	_
program	_	_
understanding	_	_
and	_	_
maintenance	_	_
.	_	_

#756
This	_	_
paper	_	_
views	_	_
them	_	_
in	_	_
a	_	_
new	_	_
light	_	_
,	_	_
it	_	_
introduces	_	_
and	_	_
evaluates	_	_
a	_	_
specialized	_	_
form	_	_
of	_	_
dependence	_	_
cluster	_	_
:	_	_
the	_	_
coherent	_	_
cluster	_	_
.	_	_

#757
Such	_	_
clusters	_	_
have	_	_
vertices	_	_
that	_	_
share	_	_
the	_	_
same	_	_
internal	_	_
and	_	_
external	_	_
dependencies	_	_
.	_	_

#758
The	_	_
paper	_	_
shows	_	_
that	_	_
such	_	_
clusters	_	_
are	_	_
not	_	_
necessarily	_	_
problems	_	_
but	_	_
rather	_	_
can	capability	_
aid	_	_
an	_	_
engineer	_	_
understand	_	_
program	_	_
components	_	_
and	_	_
their	_	_
interactions	_	_
.	_	_

#759
Developers	_	_
can	capability-feasibility	_
exploit	_	_
knowledge	_	_
of	_	_
coherent	_	_
clusters	_	_
as	_	_
they	_	_
aid	_	_
in	_	_
program	_	_
comprehension	_	_
as	_	_
the	_	_
clusters	_	_
bring	_	_
out	_	_
interactions	_	_
between	_	_
logical	_	_
constructs	_	_
of	_	_
the	_	_
system	_	_
.	_	_

#760
We	_	_
also	_	_
lay	_	_
a	_	_
foundation	_	_
for	_	_
research	_	_
into	_	_
this	_	_
new	_	_
application	_	_
area	_	_
and	_	_
encourage	_	_
further	_	_
research	_	_
.	_	_

#761
Moreover	_	_
,	_	_
future	_	_
research	_	_
could	feasibility-options	_
compare	_	_
the	_	_
aspects	_	_
of	_	_
various	_	_
definitions	_	_
of	_	_
dependence	_	_
clusters	_	_
and	_	_
the	_	_
properties	_	_
they	_	_
capture	_	_
.	_	_

#762
This	_	_
paper	_	_
presents	_	_
new	_	_
approximations	_	_
that	_	_
support	_	_
the	_	_
efficient	_	_
and	_	_
accurate	_	_
identification	_	_
of	_	_
coherent	_	_
clusters	_	_
.	_	_

#763
Empirical	_	_
evaluation	_	_
finds	_	_
that	_	_
23	_	_
of	_	_
the	_	_
30	_	_
subject	_	_
programs	_	_
have	_	_
at	_	_
least	_	_
one	_	_
large	_	_
coherent	_	_
cluster	_	_
.	_	_

#764
A	_	_
series	_	_
of	_	_
four	_	_
case	_	_
studies	_	_
illustrate	_	_
that	_	_
coherent	_	_
clusters	_	_
map	_	_
to	_	_
a	_	_
logical	_	_
functional	_	_
decomposition	_	_
and	_	_
can	capability-feasibility	_
be	_	_
used	_	_
to	_	_
depict	_	_
the	_	_
structure	_	_
of	_	_
a	_	_
program	_	_
.	_	_

#765
In	_	_
all	_	_
four	_	_
case	_	_
studies	_	_
,	_	_
coherent	_	_
clusters	_	_
map	_	_
to	_	_
subsystems	_	_
,	_	_
each	_	_
of	_	_
which	_	_
is	_	_
responsible	_	_
for	_	_
implementing	_	_
concise	_	_
functionality	_	_
.	_	_

#766
As	_	_
side-effects	_	_
of	_	_
the	_	_
study	_	_
,	_	_
we	_	_
find	_	_
that	_	_
the	_	_
visualization	_	_
of	_	_
coherent	_	_
clusters	_	_
can	capability-feasibility	_
identify	_	_
potential	_	_
structural	_	_
problems	_	_
as	_	_
well	_	_
as	_	_
refactoring	_	_
opportunities	_	_
.	_	_

#767
The	_	_
paper	_	_
also	_	_
discusses	_	_
inter-cluster	_	_
dependence	_	_
and	_	_
how	_	_
mutual	_	_
dependencies	_	_
between	_	_
clusters	_	_
may	feasibility-options	_
be	_	_
exploited	_	_
to	_	_
reveal	_	_
large	_	_
dependence	_	_
structure	_	_
that	_	_
form	_	_
the	_	_
basis	_	_
of	_	_
reverse	_	_
engineering	_	_
efforts	_	_
.	_	_

#768
Furthermore	_	_
,	_	_
the	_	_
paper	_	_
presents	_	_
a	_	_
study	_	_
on	_	_
how	_	_
bug	_	_
fixes	_	_
relate	_	_
to	_	_
the	_	_
presence	_	_
of	_	_
coherent	_	_
clusters	_	_
,	_	_
and	_	_
finds	_	_
no	_	_
relationship	_	_
between	_	_
program	_	_
faults	_	_
and	_	_
coherent	_	_
clusters	_	_
in	_	_
barcode	_	_
.	_	_

#769
Finally	_	_
,	_	_
a	_	_
longitudinal	_	_
study	_	_
of	_	_
three	_	_
subjects	_	_
shows	_	_
that	_	_
coherent	_	_
clusters	_	_
remain	_	_
surprisingly	_	_
stable	_	_
through	_	_
system	_	_
evolution	_	_
.	_	_

#770
The	_	_
paper	_	_
is	_	_
one	_	_
of	_	_
the	_	_
first	_	_
in	_	_
the	_	_
area	_	_
of	_	_
dependence	_	_
clusters	_	_
to	_	_
suggest	_	_
that	_	_
dependence	_	_
clusters	_	_
(	_	_
coherent	_	_
clusters	_	_
)	_	_
are	_	_
not	_	_
problematic	_	_
but	_	_
represent	_	_
program	_	_
structure	_	_
and	_	_
give	_	_
evidence	_	_
to	_	_
that	_	_
cause	_	_
.	_	_

#771
Future	_	_
work	_	_
in	_	_
this	_	_
area	_	_
is	_	_
rife	_	_
with	_	_
opportunities	_	_
beginning	_	_
with	_	_
enabling	_	_
the	_	_
use	_	_
of	_	_
coherent	_	_
clusters	_	_
in	_	_
a	_	_
program	_	_
comprehension	_	_
and	_	_
reverse	_	_
engineering	_	_
tools	_	_
.	_	_

#772
The	_	_
inter-cluster	_	_
dependence	_	_
study	_	_
lays	_	_
out	_	_
the	_	_
ground	_	_
work	_	_
in	_	_
this	_	_
context	_	_
.	_	_

#773
There	_	_
is	_	_
also	_	_
room	_	_
for	_	_
further	_	_
research	_	_
aimed	_	_
at	_	_
understanding	_	_
the	_	_
formation	_	_
and	_	_
impact	_	_
of	_	_
coherent	_	_
clusters	_	_
on	_	_
software	_	_
quality	_	_
.	_	_

#774
For	_	_
example	_	_
,	_	_
by	_	_
studying	_	_
how	_	_
well	_	_
dependence	_	_
clusters	_	_
can	capability	_
capture	_	_
functionality	_	_
.	_	_

#775
Furthermore	_	_
,	_	_
application	_	_
of	_	_
dynamic	_	_
slicing	_	_
in	_	_
formation	_	_
of	_	_
dependence	_	_
clusters	_	_
might	feasibility	_
by	_	_
considered	_	_
as	_	_
static	_	_
analysis	_	_
can	options	_
suffer	_	_
from	_	_
over	_	_
approximation	_	_
caused	_	_
by	_	_
its	_	_
conservative	_	_
nature	_	_
.	_	_

#776
Acknowledgements	_	_
This	_	_
work	_	_
is	_	_
supported	_	_
by	_	_
EPSRC	_	_
(	_	_
EP/G060525/2	_	_
,	_	_
EP/F059442/2	_	_
)	_	_
,	_	_
EU	_	_
(	_	_
ICT-2009.1.2	_	_
no	_	_
257574	_	_
)	_	_
,	_	_
and	_	_
NSF	_	_
(	_	_
CCF	_	_
0916081	_	_
)	_	_
.	_	_

#777
Data	_	_
from	_	_
the	_	_
EPSRC-funded	_	_
portions	_	_
of	_	_
this	_	_
work	_	_
may	deontic-options	_
be	_	_
available	_	_
by	_	_
contacting	_	_
Dr	_	_
.	_	_

#778
Krinke	_	_
.	_	_

#779
Please	_	_
note	_	_
that	_	_
intellectual	_	_
property	_	_
or	_	_
other	_	_
restrictions	_	_
may	options	_
prevent	_	_
the	_	_
full	_	_
disclosure	_	_
of	_	_
this	_	_
data	_	_
.	_	_