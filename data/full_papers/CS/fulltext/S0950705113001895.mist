#0
Incremental	_	_
approaches	_	_
for	_	_
updating	_	_
approximations	_	_
in	_	_
set-valued	_	_
ordered	_	_
information	_	_
systems	_	_
Abstract	_	_
Incremental	_	_
learning	_	_
is	_	_
an	_	_
efficient	_	_
technique	_	_
for	_	_
knowledge	_	_
discovery	_	_
in	_	_
a	_	_
dynamic	_	_
database	_	_
,	_	_
which	_	_
enables	_	_
acquiring	_	_
additional	_	_
knowledge	_	_
from	_	_
new	_	_
data	_	_
without	_	_
forgetting	_	_
prior	_	_
knowledge	_	_
.	_	_

#1
Rough	_	_
set	_	_
theory	_	_
has	_	_
been	_	_
successfully	_	_
used	_	_
in	_	_
information	_	_
systems	_	_
for	_	_
classification	_	_
analysis	_	_
.	_	_

#2
Set-valued	_	_
information	_	_
systems	_	_
are	_	_
generalized	_	_
models	_	_
of	_	_
single-valued	_	_
information	_	_
systems	_	_
,	_	_
which	_	_
can	capability-feasibility	_
be	_	_
classified	_	_
into	_	_
two	_	_
categories	_	_
:	_	_
disjunctive	_	_
and	_	_
conjunctive	_	_
.	_	_

#3
Approximations	_	_
are	_	_
fundamental	_	_
concepts	_	_
of	_	_
rough	_	_
set	_	_
theory	_	_
,	_	_
which	_	_
need	_	_
to	_	_
be	_	_
updated	_	_
incrementally	_	_
while	_	_
the	_	_
object	_	_
set	_	_
varies	_	_
over	_	_
time	_	_
in	_	_
the	_	_
set-valued	_	_
information	_	_
systems	_	_
.	_	_

#4
In	_	_
this	_	_
paper	_	_
,	_	_
we	_	_
analyze	_	_
the	_	_
updating	_	_
mechanisms	_	_
for	_	_
computing	_	_
approximations	_	_
with	_	_
the	_	_
variation	_	_
of	_	_
the	_	_
object	_	_
set	_	_
.	_	_

#5
Two	_	_
incremental	_	_
algorithms	_	_
for	_	_
updating	_	_
the	_	_
approximations	_	_
in	_	_
disjunctive/conjunctive	_	_
set-valued	_	_
information	_	_
systems	_	_
are	_	_
proposed	_	_
,	_	_
respectively	_	_
.	_	_

#6
Furthermore	_	_
,	_	_
extensive	_	_
experiments	_	_
are	_	_
carried	_	_
out	_	_
on	_	_
several	_	_
data	_	_
sets	_	_
to	_	_
verify	_	_
the	_	_
performance	_	_
of	_	_
the	_	_
proposed	_	_
algorithms	_	_
.	_	_

#7
The	_	_
results	_	_
indicate	_	_
the	_	_
incremental	_	_
approaches	_	_
significantly	_	_
outperform	_	_
non-incremental	_	_
approaches	_	_
with	_	_
a	_	_
dramatic	_	_
reduction	_	_
in	_	_
the	_	_
computational	_	_
speed	_	_
.	_	_

#8
Introduction	_	_
Granular	_	_
Computing	_	_
(	_	_
GrC	_	_
)	_	_
,	_	_
a	_	_
new	_	_
concept	_	_
for	_	_
information	_	_
processing	_	_
based	_	_
on	_	_
Zadeh	_	_
's	_	_
"	_	_
information	_	_
granularity	_	_
"	_	_
,	_	_
is	_	_
a	_	_
term	_	_
of	_	_
theories	_	_
,	_	_
methodologies	_	_
,	_	_
techniques	_	_
,	_	_
and	_	_
tools	_	_
that	_	_
makes	_	_
use	_	_
of	_	_
granules	_	_
in	_	_
the	_	_
process	_	_
of	_	_
problem	_	_
solving	_	_
[	_	_
1,2	_	_
]	_	_
.	_	_

#9
With	_	_
the	_	_
development	_	_
of	_	_
artificial	_	_
intelligence	_	_
,	_	_
the	_	_
study	_	_
on	_	_
the	_	_
theory	_	_
of	_	_
GrC	_	_
has	_	_
aroused	_	_
the	_	_
concern	_	_
of	_	_
more	_	_
and	_	_
more	_	_
researchers	_	_
[	_	_
3-5	_	_
]	_	_
.	_	_

#10
Up	_	_
to	_	_
now	_	_
,	_	_
GrC	_	_
has	_	_
been	_	_
successfully	_	_
applied	_	_
to	_	_
many	_	_
branches	_	_
of	_	_
artificial	_	_
intelligence	_	_
.	_	_

#11
The	_	_
basic	_	_
notions	_	_
and	_	_
principles	_	_
of	_	_
GrC	_	_
have	_	_
appeared	_	_
in	_	_
many	_	_
related	_	_
fields	_	_
,	_	_
such	_	_
as	_	_
concept	_	_
formation	_	_
[	_	_
6	_	_
]	_	_
,	_	_
data	_	_
mining	_	_
[	_	_
7	_	_
]	_	_
and	_	_
knowledge	_	_
discovery	_	_
[	_	_
8,9	_	_
]	_	_
.	_	_

#12
Rough	_	_
Set	_	_
Theory	_	_
(	_	_
RST	_	_
)	_	_
is	_	_
a	_	_
powerful	_	_
mathematical	_	_
tool	_	_
for	_	_
dealing	_	_
with	_	_
inexact	_	_
,	_	_
uncertain	_	_
or	_	_
vague	_	_
information	_	_
[	_	_
10	_	_
]	_	_
.	_	_

#13
It	_	_
is	_	_
also	_	_
known	_	_
as	_	_
one	_	_
of	_	_
three	_	_
primary	_	_
models	_	_
of	_	_
GrC	_	_
[	_	_
11	_	_
]	_	_
.	_	_

#14
In	_	_
recent	_	_
years	_	_
,	_	_
there	_	_
has	_	_
been	_	_
a	_	_
rapid	_	_
growth	_	_
of	_	_
interest	_	_
in	_	_
RST	_	_
and	_	_
its	_	_
applications	_	_
.	_	_

#15
It	_	_
seems	_	_
to	_	_
be	_	_
of	_	_
fundamental	_	_
importance	_	_
to	_	_
artificial	_	_
intelligence	_	_
and	_	_
cognitive	_	_
sciences	_	_
,	_	_
especially	_	_
in	_	_
the	_	_
areas	_	_
of	_	_
machine	_	_
learning	_	_
,	_	_
decision	_	_
analysis	_	_
,	_	_
expert	_	_
systems	_	_
,	_	_
inductive	_	_
reasoning	_	_
and	_	_
pattern	_	_
recognition	_	_
[	_	_
13-16	_	_
]	_	_
.	_	_

#16
The	_	_
data	_	_
acquired	_	_
for	_	_
rough	_	_
set	_	_
analysis	_	_
is	_	_
represented	_	_
in	_	_
form	_	_
of	_	_
attribute-value	_	_
tables	_	_
,	_	_
consisting	_	_
of	_	_
objects	_	_
(	_	_
rows	_	_
)	_	_
and	_	_
attributes	_	_
(	_	_
columns	_	_
)	_	_
,	_	_
called	_	_
information	_	_
systems	_	_
[	_	_
17	_	_
]	_	_
.	_	_

#17
In	_	_
real-life	_	_
applications	_	_
,	_	_
data	_	_
in	_	_
information	_	_
systems	_	_
is	_	_
generated	_	_
and	_	_
collected	_	_
dynamically	_	_
,	_	_
and	_	_
the	_	_
knowledge	_	_
discovered	_	_
by	_	_
RST	_	_
need	_	_
to	_	_
be	_	_
updating	_	_
accordingly	_	_
[	_	_
12	_	_
]	_	_
.	_	_

#18
The	_	_
incremental	_	_
technique	_	_
is	_	_
an	_	_
effective	_	_
method	_	_
to	_	_
update	_	_
knowledge	_	_
by	_	_
dealing	_	_
with	_	_
the	_	_
new	_	_
added-in	_	_
data	_	_
set	_	_
without	_	_
re-implementing	_	_
the	_	_
original	_	_
data	_	_
mining	_	_
algorithm	_	_
[	_	_
18,19	_	_
]	_	_
.	_	_

#19
Many	_	_
studies	_	_
have	_	_
been	_	_
done	_	_
towards	_	_
the	_	_
topic	_	_
of	_	_
incremental	_	_
learning	_	_
techniques	_	_
under	_	_
RST	_	_
.	_	_

#20
Considering	_	_
the	_	_
problem	_	_
of	_	_
discretization	_	_
of	_	_
continuous	_	_
attributes	_	_
in	_	_
the	_	_
dynamic	_	_
databases	_	_
,	_	_
Dey	_	_
et	_	_
al	_	_
.	_	_
developed	_	_
a	_	_
dynamic	_	_
discreduction	_	_
method	_	_
based	_	_
on	_	_
RST	_	_
and	_	_
notions	_	_
of	_	_
Statistics	_	_
,	_	_
which	_	_
merges	_	_
the	_	_
two	_	_
tasks	_	_
of	_	_
discretization	_	_
and	_	_
reduction	_	_
of	_	_
attributes	_	_
into	_	_
a	_	_
single	_	_
seamless	_	_
process	_	_
,	_	_
so	_	_
as	_	_
to	_	_
reduce	_	_
the	_	_
computation	_	_
time	_	_
by	_	_
using	_	_
samples	_	_
instead	_	_
of	_	_
the	_	_
whole	_	_
data	_	_
to	_	_
discretize	_	_
the	_	_
variables	_	_
[	_	_
20	_	_
]	_	_
.	_	_

#21
Considering	_	_
the	_	_
problem	_	_
of	_	_
dynamic	_	_
attribute	_	_
reduction	_	_
,	_	_
Hu	_	_
et	_	_
al	_	_
.	_	_
proposed	_	_
an	_	_
incremental	_	_
positive	_	_
region	_	_
reduction	_	_
algorithm	_	_
based	_	_
on	_	_
elementary	_	_
set	_	_
,	_	_
which	_	_
can	capability	_
generate	_	_
a	_	_
new	_	_
positive	_	_
region	_	_
reduction	_	_
quickly	_	_
when	_	_
a	_	_
new	_	_
object	_	_
is	_	_
added	_	_
into	_	_
the	_	_
decision	_	_
information	_	_
systems	_	_
[	_	_
28	_	_
]	_	_
.	_	_

#22
From	_	_
the	_	_
view	_	_
of	_	_
information	_	_
theory	_	_
,	_	_
Wang	_	_
et	_	_
al	_	_
.	_	_
proposed	_	_
an	_	_
incremental	_	_
attribute	_	_
reduction	_	_
algorithm	_	_
based	_	_
on	_	_
three	_	_
representative	_	_
entropies	_	_
by	_	_
considering	_	_
changes	_	_
of	_	_
data	_	_
values	_	_
,	_	_
which	_	_
can	capability	_
generate	_	_
a	_	_
feasible	_	_
reduct	_	_
in	_	_
a	_	_
much	_	_
shorter	_	_
time	_	_
.	_	_

#23
However	_	_
,	_	_
the	_	_
algorithm	_	_
is	_	_
only	_	_
applicable	_	_
on	_	_
the	_	_
case	_	_
of	_	_
the	_	_
variation	_	_
of	_	_
data	_	_
one	_	_
by	_	_
one	_	_
[	_	_
21	_	_
]	_	_
.	_	_

#24
Furthermore	_	_
,	_	_
Wang	_	_
et	_	_
al	_	_
.	_	_
developed	_	_
a	_	_
dimension	_	_
incremental	_	_
strategy	_	_
for	_	_
attribute	_	_
reduction	_	_
based	_	_
on	_	_
information	_	_
entropy	_	_
for	_	_
data	_	_
sets	_	_
with	_	_
dynamically	_	_
increasing	_	_
attributes	_	_
[	_	_
22	_	_
]	_	_
.	_	_

#25
Since	_	_
the	_	_
core	_	_
of	_	_
a	_	_
decision	_	_
table	_	_
is	_	_
the	_	_
start	_	_
point	_	_
to	_	_
many	_	_
existing	_	_
algorithms	_	_
of	_	_
attribute	_	_
reduction	_	_
,	_	_
Yang	_	_
et	_	_
al	_	_
.	_	_
introduced	_	_
an	_	_
incremental	_	_
updating	_	_
algorithm	_	_
of	_	_
the	_	_
computation	_	_
of	_	_
a	_	_
core	_	_
based	_	_
on	_	_
the	_	_
discernibility	_	_
matrix	_	_
,	_	_
which	_	_
only	_	_
inserts	_	_
a	_	_
new	_	_
row	_	_
and	_	_
column	_	_
,	_	_
or	_	_
deletes	_	_
one	_	_
row	_	_
and	_	_
updates	_	_
corresponding	_	_
column	_	_
when	_	_
updating	_	_
the	_	_
discernibility	_	_
matrix	_	_
[	_	_
29	_	_
]	_	_
.	_	_

#26
Considering	_	_
the	_	_
problem	_	_
of	_	_
dynamic	_	_
rule	_	_
induction	_	_
,	_	_
Fan	_	_
et	_	_
al	_	_
.	_	_
proposed	_	_
an	_	_
incremental	_	_
rule-extraction	_	_
algorithm	_	_
(	_	_
REA	_	_
)	_	_
based	_	_
on	_	_
RST	_	_
,	_	_
which	_	_
updates	_	_
rule	_	_
sets	_	_
by	_	_
partly	_	_
modifying	_	_
original	_	_
rule	_	_
sets	_	_
without	_	_
re-computing	_	_
rule	_	_
sets	_	_
from	_	_
the	_	_
very	_	_
beginning	_	_
and	_	_
the	_	_
proposal	_	_
approach	_	_
is	_	_
especially	_	_
useful	_	_
in	_	_
a	_	_
large	_	_
database	_	_
,	_	_
since	_	_
it	_	_
does	_	_
not	_	_
re-compute	_	_
the	_	_
reducts/rules	_	_
that	_	_
are	_	_
not	_	_
influenced	_	_
by	_	_
the	_	_
incremental	_	_
data	_	_
set	_	_
[	_	_
23	_	_
]	_	_
.	_	_

#27
Nevertheless	_	_
,	_	_
alternative	_	_
rules	_	_
which	_	_
are	_	_
as	_	_
preferred	_	_
as	_	_
the	_	_
original	_	_
desired	_	_
rules	_	_
might	speculation	_
exist	_	_
since	_	_
the	_	_
maximum	_	_
of	_	_
strength	_	_
index	_	_
is	_	_
not	_	_
unique	_	_
.	_	_

#28
The	_	_
REA	_	_
may	capability-options	_
lead	_	_
to	_	_
non-complete	_	_
rules	_	_
,	_	_
then	_	_
an	_	_
incremental	_	_
alternative	_	_
rule	_	_
extraction	_	_
algorithm	_	_
(	_	_
IAREA	_	_
)	_	_
was	_	_
proposed	_	_
to	_	_
exclude	_	_
the	_	_
repetitive	_	_
rules	_	_
and	_	_
to	_	_
avoid	_	_
the	_	_
problem	_	_
of	_	_
redundant	_	_
rules	_	_
[	_	_
24	_	_
]	_	_
.	_	_

#29
Zheng	_	_
et	_	_
al	_	_
.	_	_
developed	_	_
a	_	_
rough	_	_
set	_	_
and	_	_
rule	_	_
tree	_	_
based	_	_
incremental	_	_
algorithm	_	_
for	_	_
knowledge	_	_
acquisition	_	_
,	_	_
which	_	_
is	_	_
not	_	_
only	_	_
obviously	_	_
quicker	_	_
than	_	_
that	_	_
of	_	_
classic	_	_
algorithm	_	_
,	_	_
but	_	_
also	_	_
has	_	_
a	_	_
better	_	_
performance	_	_
of	_	_
knowledge	_	_
learned	_	_
by	_	_
the	_	_
proposed	_	_
algorithm	_	_
to	_	_
a	_	_
certain	_	_
degree	_	_
[	_	_
25	_	_
]	_	_
.	_	_

#30
Liu	_	_
et	_	_
al	_	_
.	_	_
defined	_	_
a	_	_
new	_	_
concept	_	_
of	_	_
interesting	_	_
knowledge	_	_
based	_	_
on	_	_
both	_	_
accuracy	_	_
and	_	_
coverage	_	_
of	_	_
the	_	_
generated	_	_
rules	_	_
in	_	_
the	_	_
information	_	_
system	_	_
,	_	_
and	_	_
presented	_	_
an	_	_
optimization	_	_
model	_	_
using	_	_
the	_	_
incremental	_	_
matrix	_	_
for	_	_
generating	_	_
interesting	_	_
knowledge	_	_
when	_	_
the	_	_
object	_	_
set	_	_
varies	_	_
over	_	_
time	_	_
[	_	_
26,27	_	_
]	_	_
.	_	_

#31
The	_	_
main	_	_
goal	_	_
of	_	_
RST	_	_
is	_	_
to	_	_
synthesize	_	_
approximations	_	_
of	_	_
concepts	_	_
from	_	_
the	_	_
acquired	_	_
data	_	_
,	_	_
which	_	_
is	_	_
a	_	_
necessary	_	_
step	_	_
for	_	_
expressing	_	_
and	_	_
reducing	_	_
incomplete	_	_
and	_	_
uncertain	_	_
knowledge	_	_
based	_	_
on	_	_
RST	_	_
[	_	_
30-32	_	_
]	_	_
.	_	_

#32
The	_	_
knowledge	_	_
hidden	_	_
in	_	_
information	_	_
systems	_	_
can	feasibility	_
be	_	_
discovered	_	_
and	_	_
expressed	_	_
in	_	_
the	_	_
form	_	_
of	_	_
decision	_	_
rules	_	_
according	_	_
to	_	_
the	_	_
lower	_	_
and	_	_
upper	_	_
approximations	_	_
[	_	_
36-39	_	_
]	_	_
.	_	_

#33
In	_	_
order	_	_
to	_	_
resolve	_	_
the	_	_
problem	_	_
of	_	_
high	_	_
computation	_	_
complexity	_	_
in	_	_
computing	_	_
approximations	_	_
under	_	_
the	_	_
dynamic	_	_
information	_	_
systems	_	_
,	_	_
many	_	_
incremental	_	_
updating	_	_
algorithms	_	_
have	_	_
been	_	_
proposed	_	_
.	_	_

#34
Therefore	_	_
,	_	_
extensive	_	_
efforts	_	_
have	_	_
been	_	_
devoted	_	_
to	_	_
efficient	_	_
algorithms	_	_
for	_	_
computing	_	_
approximations	_	_
.	_	_

#35
Li	_	_
et	_	_
al	_	_
.	_	_
presented	_	_
an	_	_
incremental	_	_
method	_	_
for	_	_
updating	_	_
approximations	_	_
in	_	_
an	_	_
incomplete	_	_
information	_	_
system	_	_
through	_	_
the	_	_
characteristic	_	_
relation	_	_
when	_	_
the	_	_
attribute	_	_
set	_	_
varies	_	_
over	_	_
time	_	_
,	_	_
which	_	_
can	capability	_
deal	_	_
with	_	_
the	_	_
case	_	_
of	_	_
adding	_	_
and	_	_
removing	_	_
some	_	_
attributes	_	_
simultaneously	_	_
in	_	_
the	_	_
information	_	_
system	_	_
[	_	_
40	_	_
]	_	_
.	_	_

#36
Since	_	_
the	_	_
domain	_	_
of	_	_
attributes	_	_
may	capability-options	_
change	_	_
in	_	_
real-life	_	_
applications	_	_
,	_	_
attributes	_	_
values	_	_
may	feasibility-options	_
be	_	_
added	_	_
to	_	_
or	_	_
deleted	_	_
from	_	_
the	_	_
domain	_	_
,	_	_
Chen	_	_
et	_	_
al	_	_
.	_	_
proposed	_	_
the	_	_
incremental	_	_
updating	_	_
approach	_	_
of	_	_
approximations	_	_
while	_	_
attributes	_	_
values	_	_
coarsening	_	_
or	_	_
refining	_	_
in	_	_
the	_	_
complete	_	_
and	_	_
incomplete	_	_
information	_	_
systems	_	_
[	_	_
35	_	_
]	_	_
.	_	_

#37
Zhang	_	_
et	_	_
al	_	_
.	_	_
discussed	_	_
the	_	_
change	_	_
of	_	_
approximations	_	_
in	_	_
neighborhood	_	_
decision	_	_
systems	_	_
when	_	_
the	_	_
object	_	_
set	_	_
evolves	_	_
over	_	_
time	_	_
,	_	_
and	_	_
proposed	_	_
two	_	_
fast	_	_
incremental	_	_
algorithms	_	_
for	_	_
updating	_	_
approximations	_	_
when	_	_
multiple	_	_
objects	_	_
enter	_	_
into	_	_
or	_	_
get	_	_
out	_	_
of	_	_
the	_	_
neighborhood	_	_
decision	_	_
table	_	_
[	_	_
33	_	_
]	_	_
.	_	_

#38
Li	_	_
et	_	_
al	_	_
.	_	_
firstly	_	_
introduced	_	_
a	_	_
kind	_	_
of	_	_
dominance	_	_
matrix	_	_
to	_	_
calculate	_	_
P-dominating	_	_
sets	_	_
and	_	_
P-dominated	_	_
sets	_	_
in	_	_
dominance-based	_	_
rough	_	_
sets	_	_
approach	_	_
,	_	_
and	_	_
proposed	_	_
the	_	_
incremental	_	_
algorithms	_	_
for	_	_
updating	_	_
approximations	_	_
of	_	_
an	_	_
upward	_	_
union	_	_
and	_	_
downward	_	_
union	_	_
of	_	_
decision	_	_
classes	_	_
[	_	_
34	_	_
]	_	_
.	_	_

#39
Instead	_	_
of	_	_
considering	_	_
the	_	_
incremental	_	_
updating	_	_
strategies	_	_
of	_	_
rough	_	_
sets	_	_
,	_	_
Cheng	_	_
proposed	_	_
two	_	_
incremental	_	_
methods	_	_
for	_	_
fast	_	_
computing	_	_
the	_	_
rough	_	_
fuzzy	_	_
approximations	_	_
,	_	_
which	_	_
are	_	_
established	_	_
respectively	_	_
based	_	_
on	_	_
the	_	_
redefined	_	_
boundary	_	_
set	_	_
and	_	_
the	_	_
relation	_	_
between	_	_
a	_	_
fuzzy	_	_
set	_	_
and	_	_
its	_	_
cut	_	_
sets	_	_
[	_	_
41	_	_
]	_	_
.	_	_

#40
However	_	_
,	_	_
to	_	_
our	_	_
best	_	_
knowledge	_	_
,	_	_
previous	_	_
studies	_	_
on	_	_
incremental	_	_
computing	_	_
approximations	_	_
mainly	_	_
concerned	_	_
in	_	_
the	_	_
single-valued	_	_
information	_	_
systems	_	_
,	_	_
but	_	_
little	_	_
attention	_	_
has	_	_
been	_	_
paid	_	_
to	_	_
the	_	_
set-valued	_	_
information	_	_
systems	_	_
.	_	_

#41
Set-valued	_	_
information	_	_
systems	_	_
are	_	_
an	_	_
important	_	_
type	_	_
of	_	_
data	_	_
tables	_	_
,	_	_
and	_	_
generalized	_	_
models	_	_
of	_	_
single-valued	_	_
information	_	_
systems	_	_
[	_	_
42	_	_
]	_	_
.	_	_

#42
In	_	_
many	_	_
practical	_	_
decision-making	_	_
issues	_	_
,	_	_
set-valued	_	_
information	_	_
systems	_	_
have	_	_
very	_	_
wide	_	_
applications	_	_
,	_	_
which	_	_
can	feasibility	_
be	_	_
used	_	_
in	_	_
intelligent	_	_
decision-making	_	_
and	_	_
knowledge	_	_
discovery	_	_
from	_	_
information	_	_
systems	_	_
with	_	_
uncertain	_	_
information	_	_
and	_	_
set-valued	_	_
information	_	_
.	_	_

#43
In	_	_
such	_	_
systems	_	_
,	_	_
some	_	_
of	_	_
the	_	_
attribute	_	_
values	_	_
of	_	_
an	_	_
object	_	_
may	deontic-options	_
be	_	_
set-valued	_	_
,	_	_
which	_	_
are	_	_
always	_	_
used	_	_
to	_	_
characterize	_	_
the	_	_
incomplete	_	_
information	_	_
,	_	_
i.e.	_	_
,	_	_
the	_	_
values	_	_
of	_	_
some	_	_
attributes	_	_
are	_	_
unknown	_	_
or	_	_
multi-values	_	_
.	_	_

#44
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
we	_	_
often	_	_
encounter	_	_
the	_	_
scenario	_	_
where	_	_
the	_	_
ordering	_	_
of	_	_
properties	_	_
of	_	_
the	_	_
considering	_	_
attributes	_	_
plays	_	_
a	_	_
crucial	_	_
role	_	_
in	_	_
the	_	_
analysis	_	_
of	_	_
information	_	_
systems	_	_
.	_	_

#45
Considering	_	_
attributes	_	_
with	_	_
preference-ordered	_	_
domains	_	_
is	_	_
an	_	_
important	_	_
characteristic	_	_
of	_	_
multi-attribute	_	_
decision	_	_
making	_	_
problems	_	_
in	_	_
practice	_	_
.	_	_

#46
Greco	_	_
et	_	_
al	_	_
.	_	_
proposed	_	_
the	_	_
Dominance-based	_	_
Rough	_	_
Sets	_	_
Approach	_	_
(	_	_
DRSA	_	_
)	_	_
[	_	_
44,45	_	_
]	_	_
.	_	_

#47
This	_	_
innovation	_	_
is	_	_
mainly	_	_
based	_	_
on	_	_
the	_	_
substitution	_	_
of	_	_
the	_	_
indiscernibility	_	_
relation	_	_
by	_	_
a	_	_
dominance	_	_
relation	_	_
.	_	_

#48
Furthermore	_	_
,	_	_
Qian	_	_
et	_	_
al	_	_
.	_	_
established	_	_
a	_	_
rough	_	_
set	_	_
approach	_	_
in	_	_
Set-valued	_	_
Ordered	_	_
Information	_	_
Systems	_	_
(	_	_
SOIS	_	_
)	_	_
to	_	_
take	_	_
into	_	_
account	_	_
the	_	_
ordering	_	_
properties	_	_
of	_	_
attributes	_	_
in	_	_
set-valued	_	_
information	_	_
systems	_	_
,	_	_
and	_	_
classified	_	_
the	_	_
SOIS	_	_
into	_	_
two	_	_
categories	_	_
:	_	_
disjunctive	_	_
and	_	_
conjunctive	_	_
systems	_	_
[	_	_
43	_	_
]	_	_
.	_	_

#49
Since	_	_
the	_	_
characteristics	_	_
of	_	_
the	_	_
set-valued	_	_
information	_	_
systems	_	_
is	_	_
different	_	_
from	_	_
that	_	_
of	_	_
single-valued	_	_
information	_	_
systems	_	_
(	_	_
such	_	_
as	_	_
:	_	_
some	_	_
of	_	_
the	_	_
attribute	_	_
values	_	_
for	_	_
an	_	_
object	_	_
are	_	_
set-valued	_	_
)	_	_
,	_	_
the	_	_
method	_	_
for	_	_
knowledge	_	_
acquisition	_	_
in	_	_
the	_	_
single-valued	_	_
information	_	_
systems	_	_
can	capability-feasibility	negation
not	_	_
be	_	_
applied	_	_
directly	_	_
to	_	_
the	_	_
set-valued	_	_
ones	_	_
.	_	_

#50
For	_	_
this	_	_
reason	_	_
,	_	_
the	_	_
incremental	_	_
method	_	_
for	_	_
updating	_	_
approximations	_	_
in	_	_
the	_	_
dynamic	_	_
set-valued	_	_
information	_	_
systems	_	_
is	_	_
discussed	_	_
in	_	_
this	_	_
paper	_	_
.	_	_

#51
In	_	_
[	_	_
46	_	_
]	_	_
,	_	_
Zhang	_	_
et	_	_
al	_	_
.	_	_
proposed	_	_
an	_	_
incremental	_	_
method	_	_
for	_	_
computing	_	_
approximations	_	_
in	_	_
set-valued	_	_
information	_	_
systems	_	_
under	_	_
the	_	_
tolerance	_	_
relation	_	_
,	_	_
when	_	_
the	_	_
attribute	_	_
set	_	_
varies	_	_
with	_	_
time	_	_
.	_	_

#52
In	_	_
this	_	_
paper	_	_
,	_	_
we	_	_
focus	_	_
on	_	_
updating	_	_
knowledge	_	_
under	_	_
the	_	_
variation	_	_
of	_	_
the	_	_
object	_	_
set	_	_
in	_	_
SOIS	_	_
.	_	_

#53
Firstly	_	_
,	_	_
we	_	_
discuss	_	_
the	_	_
principles	_	_
of	_	_
incremental	_	_
updating	_	_
approximations	_	_
when	_	_
the	_	_
objects	_	_
in	_	_
the	_	_
universe	_	_
change	_	_
(	_	_
increase	_	_
or	_	_
decrease	_	_
)	_	_
dynamically	_	_
in	_	_
the	_	_
conjunctive/disjunctive	_	_
SOIS	_	_
.	_	_

#54
Then	_	_
two	_	_
incremental	_	_
updating	_	_
algorithms	_	_
are	_	_
proposed	_	_
based	_	_
on	_	_
the	_	_
principles	_	_
.	_	_

#55
Finally	_	_
,	_	_
the	_	_
performances	_	_
of	_	_
two	_	_
incremental	_	_
algorithms	_	_
are	_	_
evaluated	_	_
on	_	_
a	_	_
variety	_	_
of	_	_
data	_	_
sets	_	_
.	_	_

#56
The	_	_
remainder	_	_
of	_	_
the	_	_
paper	_	_
is	_	_
organized	_	_
as	_	_
follows	_	_
.	_	_

#57
In	_	_
Section	_	_
2	_	_
,	_	_
some	_	_
basic	_	_
concepts	_	_
of	_	_
RST	_	_
in	_	_
SOIS	_	_
are	_	_
introduced	_	_
.	_	_

#58
The	_	_
principles	_	_
and	_	_
some	_	_
illustrated	_	_
examples	_	_
for	_	_
incremental	_	_
updating	_	_
approximations	_	_
with	_	_
the	_	_
variation	_	_
of	_	_
the	_	_
object	_	_
set	_	_
are	_	_
presented	_	_
in	_	_
Section	_	_
3	_	_
.	_	_

#59
In	_	_
Section	_	_
4	_	_
,	_	_
we	_	_
propose	_	_
the	_	_
incremental	_	_
algorithms	_	_
for	_	_
computing	_	_
approximations	_	_
based	_	_
on	_	_
the	_	_
updating	_	_
principles	_	_
.	_	_

#60
Performance	_	_
evaluations	_	_
are	_	_
illustrated	_	_
in	_	_
Section	_	_
5	_	_
.	_	_

#61
The	_	_
paper	_	_
ends	_	_
with	_	_
conclusions	_	_
and	_	_
further	_	_
research	_	_
topics	_	_
in	_	_
Section	_	_
6	_	_
.	_	_

#62
Preliminaries	_	_
For	_	_
convenience	_	_
,	_	_
some	_	_
basic	_	_
concepts	_	_
of	_	_
rough	_	_
sets	_	_
and	_	_
SOIS	_	_
are	_	_
reviewed	_	_
in	_	_
this	_	_
section	_	_
[	_	_
42,43	_	_
]	_	_
.	_	_

#63
A	_	_
set-valued	_	_
information	_	_
system	_	_
is	_	_
an	_	_
ordered	_	_
quadruple	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
,	_	_
where	_	_
U=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
…	_	_
,	_	_
xn	_	_
}	_	_
is	_	_
a	_	_
non-empty	_	_
finite	_	_
set	_	_
of	_	_
objects	_	_
,	_	_
called	_	_
the	_	_
universe	_	_
.	_	_

#64
C	_	_
is	_	_
a	_	_
non-empty	_	_
finite	_	_
set	_	_
of	_	_
condition	_	_
attributes	_	_
and	_	_
d	_	_
is	_	_
a	_	_
decision	_	_
attribute	_	_
with	_	_
C∩	_	_
{	_	_
d	_	_
}	_	_
=∅	_	_
;	_	_
V=VC∪Vd	_	_
,	_	_
where	_	_
V	_	_
is	_	_
the	_	_
domain	_	_
of	_	_
all	_	_
attributes	_	_
,	_	_
VC	_	_
is	_	_
the	_	_
domain	_	_
of	_	_
all	_	_
condition	_	_
attributes	_	_
and	_	_
Vd	_	_
is	_	_
the	_	_
domain	_	_
of	_	_
the	_	_
decision	_	_
attribute	_	_
;	_	_
f	_	_
is	_	_
a	_	_
mapping	_	_
from	_	_
U×	_	_
(	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
)	_	_
to	_	_
V	_	_
such	_	_
that	_	_
f	_	_
:	_	_
U×	_	_
{	_	_
C	_	_
}	_	_
→2Vc	_	_
is	_	_
a	_	_
set-valued	_	_
mapping	_	_
and	_	_
f	_	_
:	_	_
U×	_	_
{	_	_
d	_	_
}	_	_
→Vd	_	_
is	_	_
a	_	_
single-valued	_	_
mapping	_	_
.	_	_

#65
In	_	_
an	_	_
information	_	_
system	_	_
,	_	_
if	_	_
the	_	_
domain	_	_
(	_	_
scale	_	_
)	_	_
of	_	_
a	_	_
condition	_	_
attribute	_	_
is	_	_
ordered	_	_
according	_	_
to	_	_
a	_	_
decreasing	_	_
or	_	_
increasing	_	_
preference	_	_
,	_	_
then	_	_
the	_	_
attribute	_	_
is	_	_
a	_	_
criterion.Definition	_	_
1	_	_
A	_	_
set-valued	_	_
information	_	_
system	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
is	_	_
called	_	_
a	_	_
SOIS	_	_
if	_	_
all	_	_
condition	_	_
attributes	_	_
are	_	_
criterions	_	_
.	_	_

#66
In	_	_
real	_	_
problems	_	_
,	_	_
many	_	_
ways	_	_
to	_	_
present	_	_
the	_	_
semantic	_	_
interpretations	_	_
of	_	_
set-valued	_	_
information	_	_
systems	_	_
have	_	_
been	_	_
provided	_	_
[	_	_
47-50	_	_
]	_	_
.	_	_

#67
Qian	_	_
et	_	_
al	_	_
.	_	_
summarized	_	_
two	_	_
types	_	_
of	_	_
set-valued	_	_
information	_	_
systems	_	_
with	_	_
two	_	_
kinds	_	_
of	_	_
semantics	_	_
,	_	_
which	_	_
are	_	_
known	_	_
as	_	_
conjunctive	_	_
(	_	_
∀x∈U	_	_
and	_	_
c∈C	_	_
,	_	_
f	_	_
(	_	_
x	_	_
,	_	_
c	_	_
)	_	_
is	_	_
interpreted	_	_
conjunctively	_	_
)	_	_
and	_	_
disjunctive	_	_
(	_	_
∀x∈U	_	_
and	_	_
c∈C	_	_
,	_	_
f	_	_
(	_	_
x	_	_
,	_	_
c	_	_
)	_	_
is	_	_
interpreted	_	_
disjunctively	_	_
)	_	_
set-valued	_	_
information	_	_
systems	_	_
.	_	_

#68
According	_	_
to	_	_
the	_	_
introduction	_	_
of	_	_
the	_	_
following	_	_
two	_	_
dominance	_	_
relations	_	_
to	_	_
these	_	_
types	_	_
of	_	_
set-valued	_	_
information	_	_
systems	_	_
,	_	_
SOIS	_	_
can	capability-feasibility	_
be	_	_
also	_	_
classified	_	_
into	_	_
two	_	_
categories	_	_
:	_	_
conjunctive	_	_
and	_	_
disjunctive	_	_
SOIS	_	_
[	_	_
43	_	_
]	_	_
.	_	_

#69
Assume	_	_
the	_	_
domain	_	_
of	_	_
a	_	_
criterion	_	_
a∈C	_	_
is	_	_
completely	_	_
pre-ordered	_	_
by	_	_
an	_	_
outranking	_	_
relation	_	_
⪰a	_	_
;	_	_
x⪰ay	_	_
means	_	_
"	_	_
x	_	_
is	_	_
at	_	_
least	_	_
as	_	_
good	_	_
as	_	_
(	_	_
outranks	_	_
)	_	_
y	_	_
with	_	_
respect	_	_
to	_	_
criterion	_	_
a	_	_
"	_	_
.	_	_

#70
For	_	_
a	_	_
subset	_	_
of	_	_
attributes	_	_
A⊆C	_	_
,	_	_
we	_	_
define	_	_
x⪰Ay⇔∀a∈A	_	_
,	_	_
x⪰ay	_	_
,	_	_
which	_	_
means	_	_
"	_	_
x	_	_
is	_	_
at	_	_
least	_	_
as	_	_
good	_	_
as	_	_
(	_	_
outranks	_	_
)	_	_
y	_	_
with	_	_
respect	_	_
to	_	_
all	_	_
attributes	_	_
in	_	_
A	_	_
"	_	_
.Definition	_	_
2	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
conjunctive	_	_
SOIS	_	_
and	_	_
A⊆C	_	_
.	_	_

#71
The	_	_
dominance	_	_
relation	_	_
in	_	_
terms	_	_
of	_	_
A	_	_
is	_	_
defined	_	_
as	_	_
:	_	_
(	_	_
1	_	_
)	_	_
RA∧⩾=	_	_
{	_	_
(	_	_
y	_	_
,	_	_
x	_	_
)	_	_
∈U×U|y⪰Ax	_	_
}	_	_
=	_	_
{	_	_
(	_	_
y	_	_
,	_	_
x	_	_
)	_	_
∈U×U|f	_	_
(	_	_
y	_	_
,	_	_
a	_	_
)	_	_
⊇f	_	_
(	_	_
x	_	_
,	_	_
a	_	_
)	_	_
,	_	_
∀a∈A	_	_
}	_	_
Example	_	_
1	_	_
Table	_	_
1	_	_
illustrates	_	_
a	_	_
conjunctive	_	_
SOIS	_	_
,	_	_
where	_	_
U=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
C=	_	_
{	_	_
a1	_	_
,	_	_
a2	_	_
,	_	_
a3	_	_
,	_	_
a4	_	_
}	_	_
,	_	_
d	_	_
is	_	_
the	_	_
decision	_	_
attribute	_	_
,	_	_
VC=	_	_
{	_	_
e	_	_
,	_	_
f	_	_
,	_	_
g	_	_
}	_	_
and	_	_
Vd=	_	_
{	_	_
1,2,4	_	_
}	_	_
.	_	_

#72
Here	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
obtain	_	_
that	_	_
f	_	_
(	_	_
x1	_	_
,	_	_
a1	_	_
)	_	_
=	_	_
{	_	_
e	_	_
}	_	_
,	_	_
f	_	_
(	_	_
x2	_	_
,	_	_
a1	_	_
)	_	_
=	_	_
{	_	_
e	_	_
,	_	_
f	_	_
,	_	_
g	_	_
}	_	_
.	_	_

#73
Since	_	_
{	_	_
e	_	_
,	_	_
f	_	_
,	_	_
g	_	_
}	_	_
⊇	_	_
{	_	_
e	_	_
}	_	_
,	_	_
we	_	_
have	_	_
x2⪰a1x1	_	_
,	_	_
that	_	_
is	_	_
,	_	_
x2	_	_
is	_	_
at	_	_
least	_	_
as	_	_
good	_	_
as	_	_
x1	_	_
with	_	_
respect	_	_
to	_	_
a1	_	_
.	_	_

#74
Definition	_	_
3	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
disjunctive	_	_
SOIS	_	_
and	_	_
A⊆C	_	_
.	_	_

#75
The	_	_
dominance	_	_
relation	_	_
in	_	_
terms	_	_
of	_	_
A	_	_
is	_	_
defined	_	_
as	_	_
:	_	_
(	_	_
2	_	_
)	_	_
RA∨⩾=	_	_
{	_	_
(	_	_
y	_	_
,	_	_
x	_	_
)	_	_
∈U×U|y⪰Ax	_	_
}	_	_
=	_	_
{	_	_
(	_	_
y	_	_
,	_	_
x	_	_
)	_	_
∈U×U|maxf	_	_
(	_	_
y	_	_
,	_	_
a	_	_
)	_	_
⩾minf	_	_
(	_	_
x	_	_
,	_	_
a	_	_
)	_	_
,	_	_
∀a∈A	_	_
}	_	_
Example	_	_
2	_	_
Table	_	_
2	_	_
illustrates	_	_
a	_	_
disjunctive	_	_
SOIS	_	_
,	_	_
where	_	_
U=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
C=	_	_
{	_	_
a1	_	_
,	_	_
a2	_	_
,	_	_
a3	_	_
,	_	_
a4	_	_
}	_	_
,	_	_
D=	_	_
{	_	_
d	_	_
}	_	_
,	_	_
VC=	_	_
{	_	_
0,1,2	_	_
}	_	_
and	_	_
Vd=	_	_
{	_	_
1,2,4	_	_
}	_	_
.	_	_

#76
Here	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
obtain	_	_
that	_	_
f	_	_
(	_	_
x1	_	_
,	_	_
a1	_	_
)	_	_
=	_	_
{	_	_
1	_	_
}	_	_
,	_	_
f	_	_
(	_	_
x2	_	_
,	_	_
a1	_	_
)	_	_
=	_	_
{	_	_
0,1	_	_
}	_	_
.	_	_

#77
Since	_	_
maxf	_	_
(	_	_
x1	_	_
,	_	_
a1	_	_
)	_	_
=1⩾minf	_	_
(	_	_
x2	_	_
,	_	_
a1	_	_
)	_	_
=0	_	_
,	_	_
we	_	_
have	_	_
x1⪰a1x2	_	_
,	_	_
that	_	_
is	_	_
,	_	_
x1	_	_
is	_	_
at	_	_
least	_	_
as	_	_
good	_	_
as	_	_
x2	_	_
with	_	_
respect	_	_
to	_	_
a1	_	_
.	_	_

#78
For	_	_
convenience	_	_
,	_	_
we	_	_
denote	_	_
RAΔ⩾	_	_
(	_	_
Δ∈	_	_
{	_	_
∧	_	_
,	_	_
∨	_	_
}	_	_
)	_	_
as	_	_
the	_	_
dominance	_	_
relation	_	_
in	_	_
SOIS	_	_
,	_	_
where	_	_
∧	_	_
represents	_	_
the	_	_
conjunctive	_	_
SOIS	_	_
and	_	_
∨	_	_
represents	_	_
the	_	_
disjunctive	_	_
SOIS	_	_
.	_	_

#79
Furthermore	_	_
,	_	_
we	_	_
denote	_	_
the	_	_
granules	_	_
of	_	_
knowledge	_	_
induced	_	_
by	_	_
the	_	_
dominance	_	_
relation	_	_
RAΔ⩾	_	_
(	_	_
Δ∈	_	_
{	_	_
∧	_	_
,	_	_
∨	_	_
}	_	_
)	_	_
as	_	_
follows	_	_
:	_	_
•	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾=	_	_
{	_	_
y|	_	_
(	_	_
y	_	_
,	_	_
x	_	_
)	_	_
∈RAΔ⩾	_	_
}	_	_
,	_	_
(	_	_
Δ=∧	_	_
,	_	_
∨	_	_
)	_	_
•	_	_
[	_	_
x	_	_
]	_	_
AΔ⩽=	_	_
{	_	_
y|	_	_
(	_	_
x	_	_
,	_	_
y	_	_
)	_	_
∈RAΔ⩾	_	_
}	_	_
,	_	_
(	_	_
Δ=∧	_	_
,	_	_
∨	_	_
)	_	_
where	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
is	_	_
called	_	_
the	_	_
A-dominating	_	_
set	_	_
,	_	_
describes	_	_
the	_	_
objects	_	_
that	_	_
dominate	_	_
x	_	_
in	_	_
terms	_	_
of	_	_
A	_	_
.	_	_

#80
[	_	_
x	_	_
]	_	_
AΔ⩽	_	_
is	_	_
called	_	_
the	_	_
A-dominated	_	_
set	_	_
,	_	_
describes	_	_
the	_	_
objects	_	_
that	_	_
are	_	_
dominated	_	_
by	_	_
x	_	_
in	_	_
terms	_	_
of	_	_
A	_	_
,	_	_
respectively	_	_
.	_	_

#81
Let	_	_
U/RA∧⩾	_	_
denote	_	_
a	_	_
classification	_	_
on	_	_
the	_	_
universe	_	_
,	_	_
which	_	_
is	_	_
the	_	_
family	_	_
set	_	_
{	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾|x∈U	_	_
}	_	_
.	_	_

#82
Any	_	_
element	_	_
from	_	_
U/RA∧⩾	_	_
is	_	_
called	_	_
a	_	_
dominance	_	_
class	_	_
with	_	_
respect	_	_
to	_	_
A.	_	_
Dominance	_	_
classes	_	_
in	_	_
U/RA∧⩾	_	_
do	_	_
not	_	_
constitute	_	_
a	_	_
partition	_	_
of	_	_
U	_	_
in	_	_
general	_	_
.	_	_

#83
They	_	_
constitute	_	_
a	_	_
covering	_	_
of	_	_
U.Example	_	_
3	_	_
Continuation	_	_
of	_	_
Examples	_	_
1	_	_
and	_	_
2	_	_
From	_	_
Table	_	_
1	_	_
,	_	_
U/RC∧⩾=	_	_
{	_	_
[	_	_
x1	_	_
]	_	_
C∧⩾	_	_
,	_	_
[	_	_
x2	_	_
]	_	_
C∧⩾	_	_
,	_	_
…	_	_
,	_	_
[	_	_
x6	_	_
]	_	_
C∧⩾	_	_
}	_	_
,	_	_
where	_	_
[	_	_
x1	_	_
]	_	_
C∧⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
}	_	_
,	_	_
[	_	_
x2	_	_
]	_	_
C∧⩾=	_	_
{	_	_
x2	_	_
}	_	_
,	_	_
[	_	_
x3	_	_
]	_	_
C∧⩾=	_	_
{	_	_
x2	_	_
,	_	_
x3	_	_
}	_	_
,	_	_
[	_	_
x4	_	_
]	_	_
C∧⩾=	_	_
{	_	_
x2	_	_
,	_	_
x4	_	_
}	_	_
,	_	_
[	_	_
x5	_	_
]	_	_
C∧⩾=	_	_
{	_	_
x2	_	_
,	_	_
x5	_	_
}	_	_
,	_	_
[	_	_
x6	_	_
]	_	_
C∧⩾=	_	_
{	_	_
x6	_	_
}	_	_
.	_	_

#84
Analogously	_	_
,	_	_
U/RC∧⩽=	_	_
{	_	_
[	_	_
x1	_	_
]	_	_
C∧⩽	_	_
,	_	_
[	_	_
x2	_	_
]	_	_
C∧⩽	_	_
,	_	_
…	_	_
,	_	_
[	_	_
x6	_	_
]	_	_
C∧⩽	_	_
}	_	_
,	_	_
where	_	_
[	_	_
x1	_	_
]	_	_
C∧⩽=	_	_
{	_	_
x1	_	_
}	_	_
,	_	_
[	_	_
x2	_	_
]	_	_
C∧⩽=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
}	_	_
,	_	_
[	_	_
x3	_	_
]	_	_
C∧⩽=	_	_
{	_	_
x1	_	_
,	_	_
x3	_	_
}	_	_
,	_	_
[	_	_
x4	_	_
]	_	_
C∧⩽=	_	_
{	_	_
x4	_	_
}	_	_
,	_	_
[	_	_
x5	_	_
]	_	_
C∧⩽=	_	_
{	_	_
x5	_	_
}	_	_
,	_	_
[	_	_
x6	_	_
]	_	_
C∧⩽=	_	_
{	_	_
x6	_	_
}	_	_
.	_	_

#85
From	_	_
Table	_	_
2	_	_
,	_	_
U/RC∨⩾=	_	_
{	_	_
[	_	_
x1	_	_
]	_	_
C∨⩾	_	_
,	_	_
[	_	_
x2	_	_
]	_	_
C∨⩾	_	_
,	_	_
…	_	_
,	_	_
[	_	_
x6	_	_
]	_	_
C∨⩾	_	_
}	_	_
,	_	_
where	_	_
[	_	_
x1	_	_
]	_	_
C∨⩾=	_	_
{	_	_
x1	_	_
,	_	_
x5	_	_
}	_	_
,	_	_
[	_	_
x2	_	_
]	_	_
C∨⩾=	_	_
{	_	_
x2	_	_
,	_	_
x3	_	_
}	_	_
,	_	_
[	_	_
x3	_	_
]	_	_
C∨⩾=	_	_
{	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
[	_	_
x4	_	_
]	_	_
C∨⩾=	_	_
{	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
[	_	_
x5	_	_
]	_	_
C∨⩾=	_	_
{	_	_
x5	_	_
}	_	_
,	_	_
[	_	_
x6	_	_
]	_	_
C∨⩾=	_	_
{	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#86
Analogously	_	_
,	_	_
U/RC∨⩽=	_	_
{	_	_
[	_	_
x1	_	_
]	_	_
C∨⩽	_	_
,	_	_
[	_	_
x2	_	_
]	_	_
C∨⩽	_	_
,	_	_
…	_	_
,	_	_
[	_	_
x6	_	_
]	_	_
C∨⩽	_	_
}	_	_
,	_	_
where	_	_
[	_	_
x1	_	_
]	_	_
C∨⩽=	_	_
{	_	_
x1	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
[	_	_
x2	_	_
]	_	_
C∨⩽=	_	_
{	_	_
x2	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
[	_	_
x3	_	_
]	_	_
C∨⩽=	_	_
{	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
[	_	_
x4	_	_
]	_	_
C∨⩽=	_	_
{	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
[	_	_
x5	_	_
]	_	_
C∨⩽=	_	_
{	_	_
x1	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
}	_	_
,	_	_
[	_	_
x6	_	_
]	_	_
C∨⩽=	_	_
{	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#87
Assume	_	_
that	_	_
the	_	_
decision	_	_
attribute	_	_
d	_	_
makes	_	_
a	_	_
partition	_	_
of	_	_
U	_	_
into	_	_
a	_	_
finite	_	_
number	_	_
of	_	_
classes	_	_
.	_	_

#88
Let	_	_
D=	_	_
{	_	_
D1	_	_
,	_	_
D2	_	_
,	_	_
…	_	_
,	_	_
Dr	_	_
}	_	_
be	_	_
a	_	_
set	_	_
of	_	_
these	_	_
classes	_	_
that	_	_
are	_	_
ordered	_	_
,	_	_
that	_	_
is	_	_
,	_	_
∀i	_	_
,	_	_
j⩽r	_	_
,	_	_
if	_	_
i⩾j	_	_
,	_	_
then	_	_
the	_	_
objects	_	_
from	_	_
Di	_	_
are	_	_
preferred	_	_
to	_	_
the	_	_
objects	_	_
from	_	_
Dj	_	_
.	_	_

#89
The	_	_
sets	_	_
to	_	_
be	_	_
approximated	_	_
in	_	_
DRSA	_	_
are	_	_
upward	_	_
and	_	_
downward	_	_
unions	_	_
of	_	_
classes	_	_
,	_	_
which	_	_
are	_	_
defined	_	_
respectively	_	_
as	_	_
Di⩾=⋃i⩽jDj	_	_
,	_	_
Di⩽=⋃j⩽iDj,1⩽i⩽j⩽r	_	_
.	_	_

#90
The	_	_
statement	_	_
x∈Di⩾	_	_
means	_	_
"	_	_
x	_	_
belongs	_	_
to	_	_
at	_	_
least	_	_
class	_	_
Di	_	_
"	_	_
,	_	_
where	_	_
x∈Di⩽	_	_
means	_	_
"	_	_
x	_	_
belongs	_	_
to	_	_
at	_	_
most	_	_
class	_	_
Di	_	_
"	_	_
.Definition	_	_
4	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
.	_	_

#91
A⊆C	_	_
,	_	_
∀Di⩾	_	_
(	_	_
1⩽i⩽r	_	_
)	_	_
,	_	_
the	_	_
lower	_	_
and	_	_
upper	_	_
approximations	_	_
of	_	_
Di⩾	_	_
with	_	_
respect	_	_
to	_	_
the	_	_
dominance	_	_
relation	_	_
RAΔ⩾	_	_
(	_	_
Δ∈	_	_
{	_	_
∧	_	_
,	_	_
∨	_	_
}	_	_
)	_	_
are	_	_
defined	_	_
respectively	_	_
as	_	_
follows	_	_
:	_	_
(	_	_
3	_	_
)	_	_
RAΔ⩾̲Di⩾=x∈U|	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾⊆Di⩾	_	_
,	_	_
(	_	_
4	_	_
)	_	_
RAΔ⩾¯Di⩾=⋃x∈Di⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾.Analogously	_	_
,	_	_
∀Di⩽	_	_
(	_	_
1⩽i⩽r	_	_
)	_	_
,	_	_
the	_	_
lower	_	_
and	_	_
upper	_	_
approximations	_	_
of	_	_
Di⩽	_	_
are	_	_
defined	_	_
as	_	_
:	_	_
(	_	_
5	_	_
)	_	_
RAΔ⩾̲Di⩽=x∈U|	_	_
[	_	_
x	_	_
]	_	_
AΔ⩽⊆Di⩽	_	_
,	_	_
(	_	_
6	_	_
)	_	_
RAΔ⩾¯Di⩽=⋃x∈Di⩽	_	_
[	_	_
x	_	_
]	_	_
AΔ⩽	_	_
.	_	_

#92
Example	_	_
4	_	_
Continuation	_	_
of	_	_
Example	_	_
3	_	_
(	_	_
1	_	_
)	_	_
From	_	_
Table	_	_
1	_	_
,	_	_
we	_	_
have	_	_
D=	_	_
{	_	_
D1	_	_
,	_	_
D2	_	_
,	_	_
D3	_	_
}	_	_
,	_	_
where	_	_
D1=	_	_
{	_	_
x3	_	_
,	_	_
x5	_	_
}	_	_
,	_	_
D2=	_	_
{	_	_
x1	_	_
,	_	_
x4	_	_
}	_	_
,	_	_
D3=	_	_
{	_	_
x2	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#93
Thus	_	_
,	_	_
we	_	_
get	_	_
the	_	_
unions	_	_
of	_	_
classes	_	_
as	_	_
follows	_	_
:	_	_
D1⩽=D1	_	_
,	_	_
D2⩽=D1∪D2	_	_
,	_	_
D2⩾=D2∪D3	_	_
,	_	_
D3⩾=D3	_	_
.	_	_

#94
From	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
:	_	_
RCΔ⩾̲D1⩽=	_	_
{	_	_
x5	_	_
}	_	_
,	_	_
RCΔ⩾¯D1⩽=	_	_
{	_	_
x1	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
}	_	_
,	_	_
RCΔ⩾̲D2⩽=	_	_
{	_	_
x1	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
}	_	_
,	_	_
RCΔ⩾¯D2⩽=	_	_
{	_	_
x1	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
}	_	_
,	_	_
RCΔ⩾̲D2⩾=	_	_
{	_	_
x2	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
RCΔ⩾¯D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
RCΔ⩾̲D3⩾=	_	_
{	_	_
x2	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
RCΔ⩾¯D3⩾=	_	_
{	_	_
x2	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#95
(	_	_
2	_	_
)	_	_
Analogously	_	_
,	_	_
from	_	_
Table	_	_
2	_	_
,	_	_
we	_	_
have	_	_
D=	_	_
{	_	_
D1	_	_
,	_	_
D2	_	_
,	_	_
D3	_	_
}	_	_
,	_	_
where	_	_
D1=	_	_
{	_	_
x4	_	_
}	_	_
,	_	_
D2=	_	_
{	_	_
x1	_	_
,	_	_
x3	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
D3=	_	_
{	_	_
x2	_	_
,	_	_
x5	_	_
}	_	_
.	_	_

#96
Thus	_	_
,	_	_
we	_	_
get	_	_
the	_	_
unions	_	_
of	_	_
classes	_	_
as	_	_
follows	_	_
:	_	_
D1⩽=D1	_	_
,	_	_
D2⩽=D1∪D2	_	_
,	_	_
D2⩾=D2∪D3	_	_
,	_	_
D3⩾=D3	_	_
.	_	_

#97
From	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
:	_	_
RCΔ⩾̲D1⩽=∅	_	_
,	_	_
RCΔ⩾¯D1⩽=	_	_
{	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
RCΔ⩾̲D2⩽=	_	_
{	_	_
x1	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
RCΔ⩾¯D2⩽=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
RCΔ⩾̲D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x5	_	_
}	_	_
,	_	_
RCΔ⩾¯D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
RCΔ⩾̲D3⩾=∅	_	_
,	_	_
RCΔ⩾¯D3⩾=	_	_
{	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
}	_	_
.	_	_

#98
Incremental	_	_
updating	_	_
approximations	_	_
in	_	_
SOIS	_	_
when	_	_
the	_	_
object	_	_
set	_	_
varies	_	_
with	_	_
time	_	_
With	_	_
the	_	_
variation	_	_
of	_	_
an	_	_
information	_	_
system	_	_
,	_	_
the	_	_
structure	_	_
of	_	_
information	_	_
granules	_	_
in	_	_
the	_	_
information	_	_
system	_	_
may	options	_
vary	_	_
over	_	_
time	_	_
which	_	_
leads	_	_
to	_	_
the	_	_
change	_	_
of	_	_
knowledge	_	_
induced	_	_
by	_	_
RST	_	_
.	_	_

#99
For	_	_
example	_	_
,	_	_
let	_	_
us	_	_
consider	_	_
a	_	_
practical	_	_
information	_	_
system	_	_
from	_	_
the	_	_
test	_	_
for	_	_
foreign	_	_
language	_	_
ability	_	_
of	_	_
undergraduates	_	_
in	_	_
Shanxi	_	_
University	_	_
,	_	_
the	_	_
test	_	_
results	_	_
can	feasibility-rhetorical	_
be	_	_
expressed	_	_
as	_	_
a	_	_
set-valued	_	_
information	_	_
system	_	_
where	_	_
the	_	_
attributes	_	_
are	_	_
all	_	_
inclusion	_	_
increasing	_	_
preferences	_	_
and	_	_
the	_	_
value	_	_
of	_	_
each	_	_
student	_	_
under	_	_
each	_	_
attribute	_	_
is	_	_
given	_	_
by	_	_
an	_	_
evaluation	_	_
expert	_	_
through	_	_
a	_	_
set-value	_	_
[	_	_
43	_	_
]	_	_
.	_	_

#100
However	_	_
,	_	_
during	_	_
the	_	_
process	_	_
of	_	_
evaluating	_	_
the	_	_
undergraduates	_	_
language	_	_
ability	_	_
,	_	_
data	_	_
in	_	_
an	_	_
information	_	_
system	_	_
does	_	_
not	_	_
usually	_	_
remain	_	_
a	_	_
stable	_	_
condition	_	_
.	_	_

#101
Some	_	_
objects	_	_
may	feasibility-options	_
be	_	_
inserted	_	_
into	_	_
the	_	_
original	_	_
information	_	_
system	_	_
due	_	_
to	_	_
the	_	_
arrival	_	_
of	_	_
the	_	_
new	_	_
students	_	_
.	_	_

#102
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
some	_	_
objects	_	_
will	_	_
be	_	_
deleted	_	_
from	_	_
the	_	_
original	_	_
information	_	_
system	_	_
with	_	_
the	_	_
graduation	_	_
of	_	_
the	_	_
senior	_	_
students	_	_
.	_	_

#103
Then	_	_
the	_	_
discovered	_	_
knowledge	_	_
may	options	_
become	_	_
invalid	_	_
,	_	_
or	_	_
some	_	_
new	_	_
implicit	_	_
information	_	_
may	options	_
emerge	_	_
in	_	_
the	_	_
whole	_	_
updated	_	_
information	_	_
system	_	_
.	_	_

#104
Rather	_	_
than	_	_
restarting	_	_
from	_	_
scratch	_	_
by	_	_
the	_	_
non-incremental	_	_
or	_	_
batch	_	_
learning	_	_
algorithm	_	_
for	_	_
each	_	_
update	_	_
,	_	_
developing	_	_
an	_	_
efficient	_	_
incremental	_	_
algorithm	_	_
to	_	_
avoid	_	_
unnecessary	_	_
computations	_	_
by	_	_
utilizing	_	_
the	_	_
previous	_	_
data	_	_
structures	_	_
or	_	_
results	_	_
is	_	_
thus	_	_
desired	_	_
.	_	_

#105
In	_	_
this	_	_
section	_	_
,	_	_
we	_	_
discuss	_	_
the	_	_
variation	_	_
of	_	_
approximations	_	_
in	_	_
the	_	_
dynamic	_	_
SOIS	_	_
when	_	_
the	_	_
object	_	_
set	_	_
evolves	_	_
over	_	_
time	_	_
while	_	_
the	_	_
attribute	_	_
set	_	_
remains	_	_
constant	_	_
.	_	_

#106
For	_	_
convenience	_	_
,	_	_
we	_	_
assume	_	_
the	_	_
incremental	_	_
learning	_	_
process	_	_
lasts	_	_
two	_	_
periods	_	_
from	_	_
time	_	_
t	_	_
to	_	_
time	_	_
t+1	_	_
.	_	_

#107
We	_	_
denote	_	_
a	_	_
dynamic	_	_
SOIS	_	_
at	_	_
time	_	_
t	_	_
as	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
,	_	_
and	_	_
at	_	_
time	_	_
t+1	_	_
,	_	_
with	_	_
the	_	_
insertion	_	_
or	_	_
deletion	_	_
of	_	_
objects	_	_
,	_	_
the	_	_
original	_	_
SOIS	_	_
will	_	_
change	_	_
into	_	_
a	_	_
new	_	_
one	_	_
,	_	_
denoted	_	_
as	_	_
S′=	_	_
(	_	_
U′	_	_
,	_	_
C′∪	_	_
{	_	_
d′	_	_
}	_	_
,	_	_
V′	_	_
,	_	_
f′	_	_
)	_	_
.	_	_

#108
Similarly	_	_
,	_	_
we	_	_
denote	_	_
the	_	_
union	_	_
of	_	_
classes	_	_
and	_	_
the	_	_
A-dominating	_	_
set	_	_
as	_	_
Di⩾	_	_
and	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
respectively	_	_
at	_	_
time	_	_
t	_	_
,	_	_
which	_	_
are	_	_
denoted	_	_
as	_	_
Di⩾′	_	_
and	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′	_	_
,	_	_
respectively	_	_
at	_	_
time	_	_
t+1	_	_
.	_	_

#109
According	_	_
to	_	_
Definition	_	_
4	_	_
,	_	_
the	_	_
lower	_	_
and	_	_
upper	_	_
approximations	_	_
of	_	_
Di⩾	_	_
with	_	_
respect	_	_
to	_	_
A⊆C	_	_
are	_	_
denoted	_	_
as	_	_
RAΔ⩾̲Di⩾	_	_
and	_	_
RAΔ⩾¯Di⩾	_	_
,	_	_
respectively	_	_
at	_	_
time	_	_
t	_	_
,	_	_
which	_	_
are	_	_
denoted	_	_
as	_	_
RAΔ⩾̲Di⩾′	_	_
and	_	_
RAΔ⩾¯Di⩾′	_	_
,	_	_
respectively	_	_
at	_	_
time	_	_
t+1	_	_
,	_	_
respectively	_	_
.	_	_

#110
Here	_	_
,	_	_
we	_	_
only	_	_
discuss	_	_
the	_	_
incremental	_	_
approach	_	_
for	_	_
updating	_	_
approximations	_	_
in	_	_
the	_	_
cases	_	_
that	_	_
a	_	_
single	_	_
object	_	_
enter	_	_
and	_	_
go	_	_
out	_	_
of	_	_
the	_	_
information	_	_
system	_	_
.	_	_

#111
The	_	_
change	_	_
of	_	_
multiple	_	_
objects	_	_
can	feasibility-rhetorical	_
be	_	_
seen	_	_
as	_	_
the	_	_
cumulative	_	_
change	_	_
of	_	_
a	_	_
single	_	_
object	_	_
.	_	_

#112
The	_	_
approximations	_	_
can	feasibility	_
be	_	_
updated	_	_
step	_	_
by	_	_
step	_	_
through	_	_
the	_	_
updating	_	_
principles	_	_
in	_	_
the	_	_
case	_	_
that	_	_
a	_	_
single	_	_
object	_	_
varies	_	_
.	_	_

#113
Principles	_	_
for	_	_
incrementally	_	_
updating	_	_
approximations	_	_
with	_	_
the	_	_
deletion	_	_
of	_	_
a	_	_
single	_	_
object	_	_
Given	_	_
a	_	_
SOIS	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
at	_	_
time	_	_
t	_	_
,	_	_
the	_	_
deletion	_	_
of	_	_
object	_	_
x¯∈U	_	_
(	_	_
x¯	_	_
denotes	_	_
the	_	_
deleted	_	_
object	_	_
)	_	_
will	_	_
change	_	_
the	_	_
original	_	_
information	_	_
granules	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
(	_	_
x∈U	_	_
,	_	_
A⊆C	_	_
)	_	_
and	_	_
the	_	_
union	_	_
of	_	_
decision	_	_
classes	_	_
Di⩾	_	_
(	_	_
1⩽i⩽r	_	_
)	_	_
.	_	_

#114
The	_	_
approximations	_	_
of	_	_
Di⩾	_	_
will	_	_
change	_	_
accordingly	_	_
.	_	_

#115
Here	_	_
,	_	_
we	_	_
discuss	_	_
the	_	_
principles	_	_
for	_	_
updating	_	_
approximations	_	_
of	_	_
Di⩾	_	_
from	_	_
two	_	_
cases	_	_
:	_	_
(	_	_
1	_	_
)	_	_
The	_	_
deleted	_	_
object	_	_
belongs	_	_
to	_	_
Di⩾	_	_
,	_	_
i.e.	_	_
,	_	_
x¯∈Di⩾	_	_
;	_	_
(	_	_
2	_	_
)	_	_
The	_	_
deleted	_	_
object	_	_
does	_	_
not	_	_
belong	_	_
to	_	_
Di⩾	_	_
,	_	_
i.e.	_	_
,	_	_
x¯∉Di⩾.Case	_	_
1	_	_
:	_	_
The	_	_
deleted	_	_
object	_	_
x¯	_	_
belongs	_	_
to	_	_
Di	_	_
,	_	_
i.e.	_	_
,	_	_
x¯∈Di⩾	_	_
.	_	_

#116
Proposition	_	_
1	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
,	_	_
A⊆C	_	_
.	_	_

#117
When	_	_
x¯∈Di⩾	_	_
is	_	_
deleted	_	_
from	_	_
U	_	_
,	_	_
for	_	_
RAΔ⩾̲Di⩾′	_	_
,	_	_
we	_	_
have	_	_
:	_	_
(	_	_
1	_	_
)	_	_
If	_	_
x¯∈RAΔ⩾̲Di⩾	_	_
,	_	_
then	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾-	_	_
{	_	_
x¯	_	_
}	_	_
;	_	_
(	_	_
2	_	_
)	_	_
Otherwise	_	_
,	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾	_	_
.	_	_

#118
Proof	_	_
When	_	_
x¯∈Di⩾	_	_
is	_	_
deleted	_	_
from	_	_
U	_	_
,	_	_
we	_	_
have	_	_
U′=U-	_	_
{	_	_
x¯	_	_
}	_	_
,	_	_
Di⩾′=Di⩾-	_	_
{	_	_
x¯	_	_
}	_	_
.	_	_

#119
For	_	_
x∈U′	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾-	_	_
{	_	_
x¯	_	_
}	_	_
.	_	_

#120
∀x∈U′	_	_
,	_	_
if	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾⊆Di⩾	_	_
,	_	_
then	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′⊆Di⩾′	_	_
;	_	_
Analogously	_	_
,	_	_
if	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾⊈Di⩾	_	_
,	_	_
then	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′⊈Di⩾′	_	_
;	_	_
Thus	_	_
,	_	_
from	_	_
the	_	_
definition	_	_
of	_	_
lower	_	_
approximation	_	_
in	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
∀x∈U′	_	_
,	_	_
if	_	_
x∈RAΔ⩾̲Di⩾	_	_
,	_	_
then	_	_
x∈RAΔ⩾̲Di⩾′	_	_
;	_	_
If	_	_
x∉RAΔ⩾̲Di⩾	_	_
,	_	_
then	_	_
x∉RAΔ⩾̲Di⩾′	_	_
.	_	_

#121
Hence	_	_
,	_	_
it	_	_
is	_	_
easy	_	_
to	_	_
get	_	_
if	_	_
x¯∈RAΔ⩾̲Di⩾	_	_
,	_	_
then	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾-	_	_
{	_	_
x¯	_	_
}	_	_
;	_	_
Otherwise	_	_
,	_	_
the	_	_
lower	_	_
approximation	_	_
of	_	_
Di⩾	_	_
will	_	_
remain	_	_
constant	_	_
,	_	_
i.e.	_	_
,	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾.□	_	_
Example	_	_
5	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
1	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
D2⩾	_	_
by	_	_
deleting	_	_
x1	_	_
and	_	_
x2	_	_
from	_	_
U	_	_
,	_	_
respectively.•	_	_
Assume	_	_
the	_	_
object	_	_
x1	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x1	_	_
}	_	_
.	_	_

#122
We	_	_
have	_	_
x1∈D2⩾	_	_
and	_	_
x1∉RCΔ⩾̲D2⩾	_	_
.	_	_

#123
Therefore	_	_
,	_	_
RAΔ⩾̲D2⩾′=RCΔ⩾̲D2⩾=	_	_
{	_	_
x2	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#124
•	_	_
Assume	_	_
the	_	_
object	_	_
x2	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x2	_	_
}	_	_
.	_	_

#125
We	_	_
have	_	_
x2∈D2⩾	_	_
and	_	_
x2∈RCΔ⩾̲D2⩾	_	_
.	_	_

#126
Therefore	_	_
,	_	_
RAΔ⩾̲D2⩾′=RCΔ⩾̲D2⩾-	_	_
{	_	_
x2	_	_
}	_	_
=	_	_
{	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#127
(	_	_
2	_	_
)	_	_
For	_	_
Table	_	_
2	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
1	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
D2⩾	_	_
by	_	_
deleting	_	_
x1	_	_
and	_	_
x3	_	_
from	_	_
U	_	_
,	_	_
respectively.•	_	_
Assume	_	_
the	_	_
object	_	_
x1	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x1	_	_
}	_	_
.	_	_

#128
We	_	_
have	_	_
x1∈D2⩾	_	_
and	_	_
x1∈RCΔ⩾̲D2⩾	_	_
.	_	_

#129
Therefore	_	_
,	_	_
RAΔ⩾̲D2⩾′=RCΔ⩾̲D2⩾-	_	_
{	_	_
x1	_	_
}	_	_
=	_	_
{	_	_
x2	_	_
,	_	_
x5	_	_
}	_	_
.	_	_

#130
•	_	_
Assume	_	_
the	_	_
object	_	_
x3	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x3	_	_
}	_	_
.	_	_

#131
We	_	_
have	_	_
x3∈D2⩾	_	_
and	_	_
x3∉RCΔ⩾̲D2⩾	_	_
.	_	_

#132
Therefore	_	_
,	_	_
RAΔ⩾̲D2⩾′=RCΔ⩾̲D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x5	_	_
}	_	_
.	_	_

#133
Proposition	_	_
2	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
,	_	_
A⊆C	_	_
.	_	_

#134
When	_	_
x¯∈Di⩾	_	_
is	_	_
deleted	_	_
from	_	_
U	_	_
,	_	_
for	_	_
RAΔ⩾¯Di⩾′	_	_
,	_	_
we	_	_
haveRAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾-	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾∪Kwhere	_	_
K=	_	_
{	_	_
x|x∈	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾∩K′	_	_
}	_	_
,	_	_
K′=⋃x∈Di⩾-	_	_
{	_	_
x¯	_	_
}	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#135
Proof	_	_
According	_	_
to	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
RAΔ⩾¯Di⩾=⋃x∈Di⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#136
Thus	_	_
,	_	_
when	_	_
the	_	_
object	_	_
x¯∈Di⩾	_	_
is	_	_
deleted	_	_
from	_	_
U	_	_
,	_	_
the	_	_
A-dominating	_	_
set	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾	_	_
should	deontic	_
be	_	_
removed	_	_
from	_	_
the	_	_
upper	_	_
approximation	_	_
RAΔ⩾¯Di⩾	_	_
,	_	_
i.e.	_	_
,	_	_
RAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾-	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#137
However	_	_
,	_	_
∃x∈Di⩾-	_	_
{	_	_
x¯	_	_
}	_	_
satisfies	_	_
that	_	_
K=	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾∩	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾≠∅	_	_
,	_	_
and	_	_
the	_	_
object	_	_
x∈	_	_
[	_	_
y	_	_
]	_	_
AΔ⩾	_	_
(	_	_
y∈Di⩾-	_	_
{	_	_
x¯	_	_
}	_	_
)	_	_
should	deontic	negation
not	_	_
be	_	_
removed	_	_
from	_	_
RAΔ⩾¯Di⩾	_	_
.	_	_

#138
Therefore	_	_
,	_	_
we	_	_
have	_	_
RAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾-	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾∪K	_	_
,	_	_
where	_	_
K=	_	_
{	_	_
x|x∈	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾∩K′	_	_
}	_	_
,	_	_
K′=⋃x∈Di⩾-	_	_
{	_	_
x¯	_	_
}	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾.□	_	_
Example	_	_
6	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
2	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
upper	_	_
approximation	_	_
of	_	_
D2⩾	_	_
by	_	_
deleting	_	_
x1	_	_
from	_	_
U.	_	_
Assume	_	_
the	_	_
object	_	_
x1	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x1	_	_
}	_	_
.	_	_

#139
We	_	_
have	_	_
x1∈D2⩾	_	_
,	_	_
K′=⋃x∈D2⩾-	_	_
{	_	_
x1	_	_
}	_	_
[	_	_
x	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x2	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#140
Then	_	_
K=	_	_
{	_	_
x|x∈	_	_
[	_	_
x1	_	_
]	_	_
CΔ⩾∩K′	_	_
}	_	_
=	_	_
{	_	_
x2	_	_
}	_	_
,	_	_
RCΔ⩾¯D2⩾′=RAΔ⩾¯Di⩾-	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾∪K=	_	_
{	_	_
x2	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#141
(	_	_
2	_	_
)	_	_
For	_	_
Table	_	_
2	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
2	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
upper	_	_
approximation	_	_
of	_	_
D2⩾	_	_
by	_	_
deleting	_	_
x1	_	_
from	_	_
U.	_	_
Assume	_	_
the	_	_
object	_	_
x1	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x1	_	_
}	_	_
.	_	_

#142
We	_	_
have	_	_
x1∈D2⩾	_	_
,	_	_
K′=⋃x∈D2⩾-	_	_
{	_	_
x1	_	_
}	_	_
[	_	_
x	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#143
Then	_	_
K=	_	_
{	_	_
x∣x∈	_	_
[	_	_
x1	_	_
]	_	_
CΔ⩾∩K′	_	_
}	_	_
=	_	_
{	_	_
x5	_	_
}	_	_
,	_	_
RCΔ⩾¯D2⩾′=RAΔ⩾¯Di⩾-	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾∪K=	_	_
{	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#144
Case	_	_
2	_	_
:	_	_
The	_	_
deleted	_	_
object	_	_
x¯	_	_
does	_	_
not	_	_
belong	_	_
to	_	_
Di	_	_
,	_	_
i.e	_	_
.	_	_
x¯∉Di⩾	_	_
.	_	_

#145
Proposition	_	_
3	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
,	_	_
A⊆C	_	_
.	_	_

#146
When	_	_
x¯∉Di⩾	_	_
is	_	_
deleted	_	_
from	_	_
U	_	_
,	_	_
for	_	_
RAΔ⩾̲Di⩾′	_	_
,	_	_
we	_	_
haveRAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾∪Kwhere	_	_
K=x|x∈Di⩾-RAΔ⩾̲Di⩾	_	_
,	_	_
Di⩾⊇	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′	_	_
.	_	_

#147
If	_	_
x¯∈	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
then	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾-	_	_
{	_	_
x¯	_	_
}	_	_
;	_	_
Otherwise	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#148
Proof	_	_
According	_	_
to	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
∀x∈Di⩾	_	_
,	_	_
if	_	_
x∈RAΔ⩾̲Di⩾	_	_
,	_	_
then	_	_
Di⩾⊇	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#149
When	_	_
the	_	_
object	_	_
x¯∉Di⩾	_	_
is	_	_
deleted	_	_
from	_	_
U	_	_
,	_	_
we	_	_
have	_	_
U′=U-	_	_
{	_	_
x¯	_	_
}	_	_
,	_	_
Di⩾′=Di⩾	_	_
,	_	_
and	_	_
∀x∈U′	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾-	_	_
{	_	_
x¯	_	_
}	_	_
.	_	_

#150
It	_	_
is	_	_
easy	_	_
to	_	_
get	_	_
if	_	_
Di⩾⊇	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
then	_	_
Di⩾′⊇	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′	_	_
;	_	_
Thus	_	_
,	_	_
∀x∈RAΔ⩾̲Di⩾	_	_
,	_	_
x∈RAΔ⩾̲Di⩾′	_	_
.	_	_

#151
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
∀x∈Di⩾-RAΔ⩾̲Di⩾	_	_
,	_	_
we	_	_
know	_	_
that	_	_
Di⩾⊉	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#152
However	_	_
,	_	_
it	_	_
may	options	_
exist	_	_
that	_	_
x¯∈	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
and	_	_
after	_	_
the	_	_
deletion	_	_
of	_	_
x¯	_	_
,	_	_
Di⩾⊇	_	_
(	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
)	_	_
′	_	_
.	_	_

#153
Then	_	_
x	_	_
should	deontic	_
be	_	_
added	_	_
to	_	_
RAΔ⩾̲Di⩾′	_	_
,	_	_
that	_	_
is	_	_
,	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾∪	_	_
{	_	_
x	_	_
}	_	_
.	_	_

#154
Therefore	_	_
,	_	_
we	_	_
have	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾∪K	_	_
,	_	_
where	_	_
K=x|x∈Di⩾-RAΔ⩾̲Di⩾	_	_
,	_	_
Di⩾⊇	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾-	_	_
{	_	_
x¯	_	_
}	_	_
.□	_	_
Example	_	_
7	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
3	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximation	_	_
of	_	_
D2⩾	_	_
by	_	_
deleting	_	_
x3	_	_
from	_	_
U.	_	_
Assume	_	_
the	_	_
object	_	_
x3	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x3	_	_
}	_	_
.	_	_

#155
We	_	_
have	_	_
x3∉D2⩾	_	_
,	_	_
D2⩾-RCΔ⩾̲D2⩾=	_	_
{	_	_
x1	_	_
}	_	_
,	_	_
D2⩾⊇	_	_
[	_	_
x1	_	_
]	_	_
CΔ⩾-	_	_
{	_	_
x3	_	_
}	_	_
=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
}	_	_
.	_	_

#156
Therefore	_	_
,	_	_
K=	_	_
{	_	_
x1	_	_
}	_	_
and	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾∪K=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#157
(	_	_
2	_	_
)	_	_
For	_	_
Table	_	_
2	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
3	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
upper	_	_
approximation	_	_
of	_	_
D2⩾	_	_
by	_	_
deleting	_	_
x4	_	_
from	_	_
U.	_	_
Assume	_	_
the	_	_
object	_	_
x4	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x4	_	_
}	_	_
.	_	_

#158
We	_	_
have	_	_
x4∉D2⩾	_	_
,	_	_
D2⩾-RCΔ⩾̲D2⩾=	_	_
{	_	_
x3	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
D2⩾⊇	_	_
[	_	_
x3	_	_
]	_	_
CΔ⩾-	_	_
{	_	_
x4	_	_
}	_	_
=	_	_
{	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
and	_	_
D2⩾⊇	_	_
[	_	_
x6	_	_
]	_	_
CΔ⩾-	_	_
{	_	_
x6	_	_
}	_	_
=	_	_
{	_	_
x6	_	_
}	_	_
.	_	_

#159
Therefore	_	_
,	_	_
K=	_	_
{	_	_
x3	_	_
,	_	_
x6	_	_
}	_	_
and	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾∪K=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#160
Proposition	_	_
4	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪d	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
,	_	_
A⊆C	_	_
.	_	_

#161
When	_	_
the	_	_
object	_	_
x¯∉Di⩾	_	_
is	_	_
deleted	_	_
from	_	_
U	_	_
,	_	_
for	_	_
RAΔ⩾¯Di⩾′	_	_
,	_	_
we	_	_
have	_	_
:	_	_
(	_	_
1	_	_
)	_	_
If	_	_
x¯∈RAΔ⩾¯Di⩾	_	_
,	_	_
then	_	_
RAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾-	_	_
{	_	_
x¯	_	_
}	_	_
;	_	_
(	_	_
2	_	_
)	_	_
Otherwise	_	_
,	_	_
RAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾	_	_
.	_	_

#162
Proof	_	_
According	_	_
to	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
that	_	_
RAΔ⩾¯Di⩾=⋃x∈Di⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#163
Since	_	_
the	_	_
deleted	_	_
object	_	_
x¯∉Di⩾	_	_
,	_	_
there	_	_
exists	_	_
an	_	_
object	_	_
x∈Di⩾	_	_
satisfies	_	_
x¯∈	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
if	_	_
x¯∈RAΔ⩾¯Di⩾	_	_
.	_	_

#164
Therefore	_	_
,	_	_
when	_	_
x¯	_	_
is	_	_
deleted	_	_
,	_	_
we	_	_
have	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾-	_	_
{	_	_
x¯	_	_
}	_	_
.	_	_

#165
Then	_	_
RAΔ⩾¯Di⩾′=⋃x∈Di⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=RAΔ⩾¯Di⩾-	_	_
{	_	_
x¯	_	_
}	_	_
.	_	_

#166
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
if	_	_
x¯∉RAΔ⩾¯Di⩾	_	_
,	_	_
we	_	_
have	_	_
∀x∈Di⩾	_	_
,	_	_
x¯∉	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#167
Hence	_	_
,	_	_
the	_	_
upper	_	_
approximation	_	_
of	_	_
Di⩾	_	_
will	_	_
remain	_	_
constant	_	_
,	_	_
i.e.	_	_
,	_	_
RAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾.□	_	_
Example	_	_
8	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
4	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
D2⩾	_	_
by	_	_
deleting	_	_
x3	_	_
and	_	_
x5	_	_
from	_	_
U	_	_
,	_	_
respectively.•	_	_
Assume	_	_
the	_	_
object	_	_
x3	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x3	_	_
}	_	_
.	_	_

#168
We	_	_
have	_	_
x3∉D2⩾	_	_
and	_	_
x3∈RCΔ⩾¯D2⩾	_	_
.	_	_

#169
Therefore	_	_
,	_	_
RAΔ⩾¯D2⩾′=RCΔ⩾¯D2⩾-	_	_
{	_	_
x3	_	_
}	_	_
=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#170
•	_	_
Assume	_	_
the	_	_
object	_	_
x5	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x5	_	_
}	_	_
.	_	_

#171
We	_	_
have	_	_
x5∉D2⩾	_	_
and	_	_
x5∉RCΔ⩾¯D2⩾	_	_
.	_	_

#172
Therefore	_	_
,	_	_
RAΔ⩾¯D2⩾′=RCΔ⩾¯D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#173
(	_	_
2	_	_
)	_	_
For	_	_
Table	_	_
2	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
4	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
upper	_	_
approximation	_	_
of	_	_
D3⩾	_	_
by	_	_
deleting	_	_
x3	_	_
and	_	_
x4	_	_
from	_	_
U	_	_
,	_	_
respectively.•	_	_
Assume	_	_
the	_	_
object	_	_
x3	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x3	_	_
}	_	_
.	_	_

#174
We	_	_
have	_	_
x3∉D3⩾	_	_
and	_	_
x3∈RCΔ⩾¯D3⩾	_	_
.	_	_

#175
Therefore	_	_
,	_	_
RAΔ⩾¯D2⩾′=RCΔ⩾¯D3⩾-	_	_
{	_	_
x3	_	_
}	_	_
=	_	_
{	_	_
x2	_	_
,	_	_
x5	_	_
}	_	_
.	_	_

#176
•	_	_
Assume	_	_
the	_	_
object	_	_
x4	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x4	_	_
}	_	_
.	_	_

#177
We	_	_
have	_	_
x4∉D3⩾	_	_
and	_	_
x4∉RCΔ⩾¯D3⩾	_	_
.	_	_

#178
Therefore	_	_
,	_	_
RAΔ⩾¯D3⩾′=RCΔ⩾¯D3⩾=	_	_
{	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
}	_	_
.	_	_

#179
Principles	_	_
for	_	_
incrementally	_	_
updating	_	_
approximations	_	_
with	_	_
the	_	_
insertion	_	_
of	_	_
a	_	_
new	_	_
object	_	_
Given	_	_
a	_	_
SOIS	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
at	_	_
time	_	_
t	_	_
,	_	_
when	_	_
the	_	_
information	_	_
system	_	_
is	_	_
updated	_	_
by	_	_
inserting	_	_
a	_	_
new	_	_
object	_	_
x̃	_	_
(	_	_
x̃	_	_
denotes	_	_
the	_	_
inserted	_	_
object	_	_
)	_	_
into	_	_
the	_	_
unverse	_	_
U	_	_
at	_	_
time	_	_
t+1	_	_
,	_	_
two	_	_
situations	_	_
may	options	_
occur	_	_
:	_	_
(	_	_
1	_	_
)	_	_
x̃	_	_
forms	_	_
a	_	_
new	_	_
decision	_	_
class	_	_
,	_	_
i.e.	_	_
,	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x̃	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
;	_	_
(	_	_
2	_	_
)	_	_
x̃	_	_
does	_	_
not	_	_
form	_	_
a	_	_
new	_	_
decision	_	_
class	_	_
,	_	_
i.e.	_	_
,	_	_
∃x∈U	_	_
,	_	_
f	_	_
(	_	_
x̃	_	_
,	_	_
d	_	_
)	_	_
=f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
.	_	_

#180
The	_	_
difference	_	_
between	_	_
the	_	_
two	_	_
situations	_	_
is	_	_
:	_	_
in	_	_
the	_	_
first	_	_
situation	_	_
,	_	_
in	_	_
addition	_	_
to	_	_
updating	_	_
the	_	_
approximations	_	_
of	_	_
union	_	_
of	_	_
the	_	_
existing	_	_
decision	_	_
classes	_	_
,	_	_
we	_	_
need	_	_
to	_	_
compute	_	_
the	_	_
approximations	_	_
for	_	_
the	_	_
new	_	_
decision	_	_
class	_	_
.	_	_

#181
Firstly	_	_
,	_	_
for	_	_
updating	_	_
the	_	_
approximations	_	_
of	_	_
the	_	_
union	_	_
of	_	_
the	_	_
existing	_	_
decision	_	_
classes	_	_
Di⩾	_	_
(	_	_
1⩽i⩽r	_	_
)	_	_
when	_	_
inserting	_	_
an	_	_
object	_	_
,	_	_
we	_	_
discuss	_	_
the	_	_
principles	_	_
through	_	_
two	_	_
cases	_	_
similar	_	_
to	_	_
the	_	_
approach	_	_
taken	_	_
in	_	_
the	_	_
model	_	_
of	_	_
deletion	_	_
:	_	_
(	_	_
1	_	_
)	_	_
The	_	_
inserted	_	_
object	_	_
will	_	_
belong	_	_
to	_	_
Di⩾	_	_
,	_	_
i.e.	_	_
,	_	_
x̃⪰dx	_	_
,	_	_
where	_	_
x∈Di	_	_
;	_	_
(	_	_
2	_	_
)	_	_
The	_	_
inserted	_	_
object	_	_
will	_	_
not	_	_
belong	_	_
to	_	_
Di⩾	_	_
,	_	_
i.e.	_	_
,	_	_
x̃⪰dx	_	_
,	_	_
where	_	_
x∈Di	_	_
.	_	_

#182
To	_	_
illustrate	_	_
our	_	_
incremental	_	_
methods	_	_
for	_	_
updating	_	_
approximations	_	_
when	_	_
inserting	_	_
a	_	_
new	_	_
object	_	_
into	_	_
SOIS	_	_
,	_	_
two	_	_
tables	_	_
(	_	_
Tables	_	_
3	_	_
and	_	_
4	_	_
)	_	_
are	_	_
given	_	_
as	_	_
follows	_	_
.	_	_

#183
We	_	_
assume	_	_
that	_	_
the	_	_
objects	_	_
in	_	_
Table	_	_
3	_	_
will	_	_
be	_	_
inserted	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
the	_	_
objects	_	_
in	_	_
Table	_	_
4	_	_
will	_	_
be	_	_
inserted	_	_
into	_	_
Table	_	_
2.Case	_	_
1	_	_
:	_	_
The	_	_
inserted	_	_
object	_	_
x̃	_	_
will	_	_
belong	_	_
to	_	_
Di	_	_
.	_	_

#184
Proposition	_	_
5	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
,	_	_
A⊆C	_	_
.	_	_

#185
When	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
for	_	_
RAΔ⩾̲Di⩾′	_	_
,	_	_
we	_	_
have	_	_
:	_	_
(	_	_
1	_	_
)	_	_
If	_	_
Di⩾′⊇	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾	_	_
,	_	_
where	_	_
Di⩾′=Di⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
,	_	_
then	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
;	_	_
(	_	_
2	_	_
)	_	_
Otherwise	_	_
,	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾	_	_
.	_	_

#186
Proof	_	_
According	_	_
to	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
∀x∈Di⩾	_	_
,	_	_
if	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾⊆Di⩾	_	_
,	_	_
then	_	_
x∈RAΔ⩾̲Di⩾	_	_
.	_	_

#187
Thus	_	_
,	_	_
when	_	_
the	_	_
object	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
we	_	_
have	_	_
Di⩾′=Di⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
;	_	_
∀x∈Di⩾	_	_
,	_	_
if	_	_
x̃∈	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
then	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#188
That	_	_
is	_	_
,	_	_
if	_	_
Di⩾⊇	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
then	_	_
Di⩾′⊇	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′	_	_
;	_	_
If	_	_
Di⩾⊉	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
then	_	_
Di⩾′⊉	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′	_	_
.	_	_

#189
It	_	_
follows	_	_
that	_	_
if	_	_
x∈RAΔ⩾̲Di⩾	_	_
,	_	_
then	_	_
x∈RAΔ⩾̲Di⩾′	_	_
;	_	_
If	_	_
x∉RAΔ⩾̲Di⩾	_	_
,	_	_
then	_	_
x∉RAΔ⩾̲Di⩾′	_	_
.	_	_

#190
Therefore	_	_
,	_	_
according	_	_
to	_	_
Definition	_	_
4	_	_
,	_	_
if	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾⊆Di⩾′	_	_
,	_	_
we	_	_
have	_	_
x̃∈RAΔ⩾̲Di⩾′	_	_
,	_	_
and	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#191
Otherwise	_	_
,	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾.□	_	_
Example	_	_
9	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
5	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
D2⩾	_	_
when	_	_
the	_	_
object	_	_
x7	_	_
and	_	_
x8	_	_
in	_	_
Table	_	_
3	_	_
insert	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
respectively.•	_	_
Assume	_	_
the	_	_
object	_	_
x7	_	_
in	_	_
Table	_	_
3	_	_
is	_	_
inserted	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x7	_	_
}	_	_
.	_	_

#192
Since	_	_
f	_	_
(	_	_
x7	_	_
,	_	_
d	_	_
)	_	_
=3	_	_
,	_	_
then	_	_
D2⩾′=D2⩾∪	_	_
{	_	_
x7	_	_
}	_	_
.	_	_

#193
Because	_	_
of	_	_
Di⩾′⊇	_	_
[	_	_
x7	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x2	_	_
,	_	_
x7	_	_
}	_	_
,	_	_
we	_	_
have	_	_
RCΔ⩾̲D2⩾′=RCΔ⩾̲D2⩾∪	_	_
{	_	_
x7	_	_
}	_	_
=	_	_
{	_	_
x2	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
,	_	_
x7	_	_
}	_	_
.	_	_

#194
•	_	_
Assume	_	_
the	_	_
object	_	_
x8	_	_
in	_	_
Table	_	_
3	_	_
is	_	_
inserted	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x8	_	_
}	_	_
.	_	_

#195
Since	_	_
f	_	_
(	_	_
x8	_	_
,	_	_
d	_	_
)	_	_
=3	_	_
,	_	_
then	_	_
D2⩾′=D2⩾∪	_	_
{	_	_
x8	_	_
}	_	_
.	_	_

#196
Because	_	_
of	_	_
D2⩾′⊉	_	_
[	_	_
x8	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x4	_	_
,	_	_
x6	_	_
,	_	_
x8	_	_
}	_	_
,	_	_
we	_	_
have	_	_
RCΔ⩾̲D2⩾′=RCΔ⩾̲D2⩾=	_	_
{	_	_
x2	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#197
(	_	_
2	_	_
)	_	_
For	_	_
Table	_	_
2	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
4	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximation	_	_
of	_	_
D2⩾	_	_
when	_	_
the	_	_
objects	_	_
x7	_	_
and	_	_
x8	_	_
in	_	_
Table	_	_
4	_	_
insert	_	_
into	_	_
Table	_	_
2	_	_
,	_	_
respectively.•	_	_
Assume	_	_
the	_	_
object	_	_
x7	_	_
in	_	_
Table	_	_
4	_	_
is	_	_
inserted	_	_
into	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x7	_	_
}	_	_
.	_	_

#198
Since	_	_
f	_	_
(	_	_
x7	_	_
,	_	_
d	_	_
)	_	_
=2	_	_
,	_	_
then	_	_
D2⩾′=D2⩾∪	_	_
{	_	_
x7	_	_
}	_	_
.	_	_

#199
Because	_	_
of	_	_
D2⩾′⊇	_	_
[	_	_
x7	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x5	_	_
,	_	_
x7	_	_
}	_	_
,	_	_
we	_	_
have	_	_
RCΔ⩾̲D2⩾′=RCΔ⩾̲D2⩾∪	_	_
{	_	_
x7	_	_
}	_	_
=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x5	_	_
,	_	_
x7	_	_
}	_	_
.	_	_

#200
•	_	_
Assume	_	_
the	_	_
object	_	_
x8	_	_
in	_	_
Table	_	_
4	_	_
is	_	_
inserted	_	_
into	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x8	_	_
}	_	_
.	_	_

#201
Since	_	_
f	_	_
(	_	_
x8	_	_
,	_	_
d	_	_
)	_	_
=2	_	_
,	_	_
then	_	_
D2⩾′=D2⩾∪	_	_
{	_	_
x8	_	_
}	_	_
.	_	_

#202
Because	_	_
of	_	_
D2⩾′⊉	_	_
[	_	_
x8	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x4	_	_
,	_	_
x6	_	_
,	_	_
x8	_	_
}	_	_
,	_	_
we	_	_
have	_	_
RCΔ⩾̲D2⩾′=RCΔ⩾̲D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x5	_	_
}	_	_
.	_	_

#203
Proposition	_	_
6	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪d	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
,	_	_
A⊆C	_	_
.	_	_

#204
When	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
for	_	_
RAΔ⩾¯Di⩾′	_	_
,	_	_
we	_	_
haveRAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾	_	_
Proof	_	_
When	_	_
the	_	_
object	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
U′=U∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#205
According	_	_
to	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
RAΔ⩾¯Di⩾′=⋃x∈Di⩾′	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′	_	_
.	_	_

#206
Since	_	_
Di⩾′=Di⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
,	_	_
then	_	_
we	_	_
have	_	_
RAΔ⩾¯Di⩾′=⋃x∈Di⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#207
Because	_	_
∀x∈U	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
or	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
and	_	_
x̃∈	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
obtain	_	_
that	_	_
RAΔ⩾¯Di⩾′=⋃x∈Di+1⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾=RAΔ⩾¯Di⩾∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾.□	_	_
Example	_	_
10	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
6	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
upper	_	_
approximations	_	_
of	_	_
D2⩾	_	_
when	_	_
the	_	_
object	_	_
x7	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
.	_	_

#208
Assume	_	_
the	_	_
object	_	_
x7	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x7	_	_
}	_	_
.	_	_

#209
Since	_	_
f	_	_
(	_	_
x7	_	_
,	_	_
d	_	_
)	_	_
=3	_	_
,	_	_
then	_	_
D2⩾′=D2⩾∪	_	_
{	_	_
x7	_	_
}	_	_
and	_	_
RCΔ⩾¯D2⩾′=RCΔ⩾¯D2⩾∪	_	_
[	_	_
x7	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
,	_	_
x7	_	_
}	_	_
.	_	_

#210
(	_	_
2	_	_
)	_	_
For	_	_
Table	_	_
2	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
6	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
upper	_	_
approximations	_	_
of	_	_
D2⩾	_	_
when	_	_
the	_	_
object	_	_
x7	_	_
in	_	_
Table	_	_
4	_	_
inserts	_	_
into	_	_
Table	_	_
2	_	_
.	_	_

#211
Assume	_	_
the	_	_
object	_	_
x7	_	_
in	_	_
Table	_	_
4	_	_
inserts	_	_
into	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x7	_	_
}	_	_
.	_	_

#212
Since	_	_
f	_	_
(	_	_
x7	_	_
,	_	_
d	_	_
)	_	_
=2	_	_
,	_	_
then	_	_
D2⩾′=D2⩾∪	_	_
{	_	_
x7	_	_
}	_	_
and	_	_
RCΔ⩾¯D2⩾′=RCΔ⩾¯D2⩾∪	_	_
[	_	_
x7	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
,	_	_
x7	_	_
}	_	_
.	_	_

#213
Case	_	_
2	_	_
:	_	_
The	_	_
inserted	_	_
object	_	_
x̃	_	_
will	_	_
not	_	_
belong	_	_
to	_	_
Di	_	_
.	_	_

#214
Proposition	_	_
7	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪d	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
,	_	_
A⊆C	_	_
.	_	_

#215
When	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
for	_	_
RAΔ⩾̲Di⩾′	_	_
,	_	_
we	_	_
haveRAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾-Kwhere	_	_
K=x|x∈RAΔ⩾̲Di⩾	_	_
,	_	_
x̃∈	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′	_	_
.	_	_

#216
Proof	_	_
When	_	_
the	_	_
object	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
since	_	_
x̃⪰dx	_	_
(	_	_
x∈Di	_	_
)	_	_
,	_	_
we	_	_
have	_	_
U′=U∪	_	_
{	_	_
x̃	_	_
}	_	_
,	_	_
Di⩾′=Di⩾	_	_
.	_	_

#217
∀x∈Di⩾′	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
or	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#218
We	_	_
have	_	_
if	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾⊈Di⩾	_	_
,	_	_
then	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾⊈Di⩾′	_	_
.	_	_

#219
That	_	_
is	_	_
,	_	_
if	_	_
x∉RAΔ⩾̲Di⩾	_	_
,	_	_
then	_	_
x∉RAΔ⩾̲Di⩾′	_	_
.	_	_

#220
Hence	_	_
,	_	_
we	_	_
only	_	_
consider	_	_
the	_	_
object	_	_
x∈RAΔ⩾̲Di⩾	_	_
,	_	_
i.e.	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾⊆Di⩾	_	_
.	_	_

#221
When	_	_
x̃	_	_
is	_	_
deleted	_	_
,	_	_
there	_	_
may	options	_
exist	_	_
that	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#222
Then	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′⊈Di⩾′=Di⩾	_	_
,	_	_
i.e.	_	_
,	_	_
x∉RAΔ⩾̲Di⩾′	_	_
.	_	_

#223
Therefore	_	_
,	_	_
we	_	_
have	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾-K	_	_
,	_	_
where	_	_
K=x|x∈RAΔ⩾̲Di⩾	_	_
,	_	_
x̃∈	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′.□	_	_
Example	_	_
11	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
7	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
D2⩾	_	_
when	_	_
the	_	_
object	_	_
x9	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
.	_	_

#224
Assume	_	_
the	_	_
object	_	_
x9	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x9	_	_
}	_	_
.	_	_

#225
Since	_	_
f	_	_
(	_	_
x9	_	_
,	_	_
d	_	_
)	_	_
=1	_	_
,	_	_
then	_	_
D2⩾	_	_
remains	_	_
unchanged	_	_
.	_	_

#226
Because	_	_
of	_	_
RCΔ⩾̲D2⩾=	_	_
{	_	_
x2	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
x9⪰Cx6	_	_
,	_	_
that	_	_
is	_	_
,	_	_
x9∈	_	_
[	_	_
x6	_	_
]	_	_
CΔ⩾′	_	_
.	_	_

#227
Hence	_	_
,	_	_
we	_	_
have	_	_
K=	_	_
{	_	_
x|x∈RCΔ⩾̲D2⩾	_	_
,	_	_
x9∈	_	_
[	_	_
x	_	_
]	_	_
CΔ⩾′	_	_
}	_	_
=	_	_
{	_	_
x6	_	_
}	_	_
,	_	_
RCΔ⩾̲D2⩾′=RCΔ⩾̲D2⩾-K=	_	_
{	_	_
x2	_	_
,	_	_
x4	_	_
}	_	_
.	_	_

#228
(	_	_
2	_	_
)	_	_
For	_	_
Table	_	_
2	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
7	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
D2⩾	_	_
when	_	_
the	_	_
object	_	_
x9	_	_
in	_	_
Table	_	_
4	_	_
inserts	_	_
into	_	_
Table	_	_
2	_	_
.	_	_

#229
Assume	_	_
the	_	_
object	_	_
x9	_	_
in	_	_
Table	_	_
4	_	_
is	_	_
inserted	_	_
into	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x9	_	_
}	_	_
.	_	_

#230
Since	_	_
f	_	_
(	_	_
x9	_	_
,	_	_
d	_	_
)	_	_
=1	_	_
,	_	_
then	_	_
D2⩾	_	_
remains	_	_
unchanged	_	_
.	_	_

#231
Because	_	_
of	_	_
RCΔ⩾̲D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x5	_	_
}	_	_
,	_	_
x9⪰Cx1	_	_
,	_	_
that	_	_
is	_	_
,	_	_
x9∈	_	_
[	_	_
x1	_	_
]	_	_
C⊇′	_	_
.	_	_

#232
Hence	_	_
K=	_	_
{	_	_
x|x∈RCΔ⩾̲D2⩾	_	_
,	_	_
x9∈	_	_
[	_	_
x	_	_
]	_	_
CΔ⩾′	_	_
}	_	_
=	_	_
{	_	_
x1	_	_
}	_	_
,	_	_
RCΔ⩾̲D2⩾′=RCΔ⩾̲D2⩾-K=	_	_
{	_	_
x2	_	_
,	_	_
x5	_	_
}	_	_
.	_	_

#233
Proposition	_	_
8	_	_
Let	_	_
(	_	_
U	_	_
,	_	_
C∪d	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
,	_	_
A⊆C	_	_
.	_	_

#234
When	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
for	_	_
RAΔ⩾¯Di⩾′	_	_
,	_	_
we	_	_
have	_	_
:	_	_
(	_	_
1	_	_
)	_	_
If	_	_
∃x∈Di⩾	_	_
,	_	_
x̃∈	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
then	_	_
RAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
;	_	_
(	_	_
2	_	_
)	_	_
Otherwise	_	_
,	_	_
RAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾	_	_
.	_	_

#235
Proof	_	_
When	_	_
the	_	_
object	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
since	_	_
x̃⪰dx	_	_
(	_	_
x∈Di	_	_
)	_	_
,	_	_
we	_	_
have	_	_
U′=U∪	_	_
{	_	_
x̃	_	_
}	_	_
,	_	_
Di⩾′=Di⩾	_	_
.	_	_

#236
Then	_	_
,	_	_
∀x∈Di⩾′	_	_
,	_	_
if	_	_
x̃∈	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
then	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#237
According	_	_
to	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
x̃∈RAΔ⩾¯Di⩾′	_	_
,	_	_
that	_	_
is	_	_
,	_	_
RAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
;	_	_
Otherwise	_	_
,	_	_
if	_	_
∀x∈Di⩾	_	_
,	_	_
x̃∉	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′	_	_
,	_	_
that	_	_
is	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#238
Then	_	_
we	_	_
have	_	_
RAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾.□	_	_
Example	_	_
12	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
8	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
D2⩾	_	_
when	_	_
the	_	_
object	_	_
x9	_	_
and	_	_
x10	_	_
in	_	_
Table	_	_
3	_	_
insert	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
respectively.•	_	_
Assume	_	_
the	_	_
object	_	_
x9	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x9	_	_
}	_	_
.	_	_

#239
Since	_	_
f	_	_
(	_	_
x9	_	_
,	_	_
d	_	_
)	_	_
=1	_	_
,	_	_
then	_	_
D2⩾	_	_
remains	_	_
unchanged	_	_
.	_	_

#240
Because	_	_
of	_	_
D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
x9⪰Cx6	_	_
,	_	_
that	_	_
is	_	_
,	_	_
x9∈	_	_
[	_	_
x6	_	_
]	_	_
CΔ⩾′	_	_
.	_	_

#241
Hence	_	_
RCΔ⩾¯D2⩾′=RCΔ⩾¯D2⩾∪	_	_
{	_	_
x9	_	_
}	_	_
=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
,	_	_
x9	_	_
}	_	_
.	_	_

#242
•	_	_
Assume	_	_
the	_	_
object	_	_
x10	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x10	_	_
}	_	_
.	_	_

#243
Since	_	_
f	_	_
(	_	_
x10	_	_
,	_	_
d	_	_
)	_	_
=1	_	_
,	_	_
then	_	_
D2⩾	_	_
remains	_	_
unchanged	_	_
.	_	_

#244
Because	_	_
of	_	_
∀x∈D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
x9⪰Cx	_	_
,	_	_
that	_	_
is	_	_
,	_	_
x9∉	_	_
[	_	_
x	_	_
]	_	_
CΔ⩾′	_	_
.	_	_

#245
Hence	_	_
RCΔ⩾¯D2⩾′=RCΔ⩾¯D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#246
(	_	_
2	_	_
)	_	_
For	_	_
Table	_	_
2	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
8	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
upper	_	_
approximations	_	_
of	_	_
D2⩾	_	_
when	_	_
the	_	_
object	_	_
x9	_	_
and	_	_
x10	_	_
in	_	_
Table	_	_
4	_	_
insert	_	_
into	_	_
Table	_	_
2	_	_
,	_	_
respectively.•	_	_
Assume	_	_
the	_	_
object	_	_
x9	_	_
in	_	_
Table	_	_
4	_	_
inserts	_	_
into	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x9	_	_
}	_	_
.	_	_

#247
Since	_	_
f	_	_
(	_	_
x9	_	_
,	_	_
d	_	_
)	_	_
=1	_	_
,	_	_
then	_	_
D2⩾	_	_
remains	_	_
unchanged	_	_
.	_	_

#248
Because	_	_
of	_	_
D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
x9⪰Cx1	_	_
,	_	_
that	_	_
is	_	_
,	_	_
x9∈	_	_
[	_	_
x1	_	_
]	_	_
CΔ⩾′	_	_
.	_	_

#249
Hence	_	_
RCΔ⩾¯D2⩾′=RCΔ⩾¯D2⩾∪	_	_
{	_	_
x9	_	_
}	_	_
=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
,	_	_
x9	_	_
}	_	_
.	_	_

#250
•	_	_
Assume	_	_
the	_	_
object	_	_
x10	_	_
in	_	_
Table	_	_
4	_	_
inserts	_	_
into	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x10	_	_
}	_	_
.	_	_

#251
Since	_	_
f	_	_
(	_	_
x10	_	_
,	_	_
d	_	_
)	_	_
=1	_	_
,	_	_
then	_	_
D2⩾	_	_
remains	_	_
unchanged	_	_
.	_	_

#252
Because	_	_
of	_	_
∀x∈D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
x10⪰Cx	_	_
,	_	_
that	_	_
is	_	_
,	_	_
x10∉	_	_
[	_	_
x	_	_
]	_	_
CΔ⩾′	_	_
.	_	_

#253
Hence	_	_
RCΔ⩾¯D2⩾′=RCΔ⩾¯D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#254
Based	_	_
on	_	_
the	_	_
above	_	_
analysis	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
compute	_	_
the	_	_
approximations	_	_
of	_	_
the	_	_
union	_	_
of	_	_
existing	_	_
decision	_	_
classes	_	_
Di⩾	_	_
(	_	_
1⩽i⩽r	_	_
)	_	_
when	_	_
inserting	_	_
a	_	_
new	_	_
object	_	_
into	_	_
SOIS	_	_
.	_	_

#255
However	_	_
,	_	_
when	_	_
a	_	_
new	_	_
object	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
the	_	_
universe	_	_
,	_	_
it	_	_
might	speculation	_
happen	_	_
that	_	_
x̃	_	_
will	_	_
form	_	_
a	_	_
new	_	_
decision	_	_
class	_	_
,	_	_
i.e.	_	_
,	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x̃	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
.	_	_

#256
Then	_	_
the	_	_
universe	_	_
U′=U∪	_	_
{	_	_
x̃	_	_
}	_	_
will	_	_
be	_	_
divided	_	_
into	_	_
r+1	_	_
partitions	_	_
,	_	_
such	_	_
as	_	_
:	_	_
D=	_	_
{	_	_
D1	_	_
,	_	_
…	_	_
,	_	_
Di	_	_
,	_	_
Dnew	_	_
,	_	_
Di+1	_	_
,	_	_
…	_	_
,	_	_
Dr	_	_
}	_	_
,	_	_
where	_	_
|D|=r+1	_	_
,	_	_
Dnew=	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#257
At	_	_
this	_	_
point	_	_
,	_	_
in	_	_
addition	_	_
to	_	_
updating	_	_
the	_	_
approximations	_	_
of	_	_
the	_	_
existing	_	_
unions	_	_
of	_	_
decision	_	_
classes	_	_
,	_	_
we	_	_
need	_	_
to	_	_
compute	_	_
the	_	_
unions	_	_
of	_	_
new	_	_
decision	_	_
class	_	_
Dnew	_	_
:	_	_
Dnew⩾=Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
.Proposition	_	_
9	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪d	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
,	_	_
A⊆C	_	_
.	_	_

#258
When	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
if	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x̃	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
,	_	_
then	_	_
the	_	_
lower	_	_
approximation	_	_
of	_	_
the	_	_
union	_	_
of	_	_
the	_	_
new	_	_
decision	_	_
class	_	_
Dnew⩾	_	_
can	feasibility-rhetorical	_
be	_	_
computed	_	_
as	_	_
follows	_	_
:	_	_
(	_	_
1	_	_
)	_	_
If	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾⊆Dnew⩾	_	_
,	_	_
where	_	_
Dnew⩾=Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
,	_	_
then	_	_
RAΔ⩾̲Dnew⩾=RAΔ⩾̲Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
;	_	_
(	_	_
2	_	_
)	_	_
Otherwise	_	_
,	_	_
RAΔ⩾̲Dnew⩾=RAΔ⩾̲Di+1⩾	_	_
.	_	_

#259
Proof	_	_
When	_	_
the	_	_
object	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
then	_	_
U′=U∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#260
Since	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x̃	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
,	_	_
x̃	_	_
will	_	_
form	_	_
a	_	_
new	_	_
decision	_	_
class	_	_
.	_	_

#261
U′	_	_
will	_	_
be	_	_
divided	_	_
into	_	_
r+1	_	_
partitions	_	_
,	_	_
such	_	_
as	_	_
:	_	_
D=	_	_
{	_	_
D1	_	_
,	_	_
…	_	_
,	_	_
Di	_	_
,	_	_
Dnew	_	_
,	_	_
Di+1	_	_
,	_	_
…	_	_
,	_	_
Dr	_	_
}	_	_
,	_	_
where	_	_
|D|=r+1	_	_
,	_	_
Dnew=	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#262
It	_	_
is	_	_
easy	_	_
to	_	_
obtain	_	_
that	_	_
the	_	_
union	_	_
of	_	_
the	_	_
new	_	_
decision	_	_
class	_	_
Dnew	_	_
is	_	_
:	_	_
Dnew⩾=Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#263
Then	_	_
from	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
know	_	_
that	_	_
∀x∈U′	_	_
,	_	_
if	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′⊆Dnew⩾	_	_
,	_	_
then	_	_
x∈RAΔ⩾̲Dnew⩾	_	_
;	_	_
Furthermore	_	_
,	_	_
since	_	_
Dnew⩾=Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
and	_	_
∀x∈U	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
or	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
we	_	_
have	_	_
if	_	_
x∈RAΔ⩾̲Di+1⩾	_	_
,	_	_
then	_	_
x∈RAΔ⩾̲Dnew⩾	_	_
,	_	_
and	_	_
if	_	_
x∉RAΔ⩾̲Di+1⩾	_	_
,	_	_
then	_	_
x∉RAΔ⩾̲Dnew⩾	_	_
.	_	_

#264
Hence	_	_
,	_	_
if	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾⊆Dnew⩾	_	_
,	_	_
then	_	_
RAΔ⩾̲Dnew⩾=RAΔ⩾̲Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
;	_	_
Otherwise	_	_
,	_	_
RAΔ⩾̲Dnew⩾=RAΔ⩾̲Di+1⩾.□	_	_
Example	_	_
13	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
9	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
Dnew⩾	_	_
when	_	_
the	_	_
object	_	_
x11	_	_
and	_	_
x12	_	_
in	_	_
Table	_	_
3	_	_
insert	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
respectively.•	_	_
Assume	_	_
the	_	_
object	_	_
x11	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x11	_	_
}	_	_
.	_	_

#265
Since	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x11	_	_
,	_	_
d	_	_
)	_	_
=3	_	_
and	_	_
f	_	_
(	_	_
D2	_	_
,	_	_
d	_	_
)	_	_
<	_	_
f	_	_
(	_	_
x11	_	_
,	_	_
d	_	_
)	_	_
<	_	_
f	_	_
(	_	_
D3	_	_
,	_	_
d	_	_
)	_	_
,	_	_
then	_	_
D=	_	_
{	_	_
D1	_	_
,	_	_
D2	_	_
,	_	_
Dnew	_	_
,	_	_
D3	_	_
}	_	_
,	_	_
Dnew⩾=D3⩾∪	_	_
{	_	_
x11	_	_
}	_	_
=	_	_
{	_	_
x2	_	_
,	_	_
x6	_	_
,	_	_
x11	_	_
}	_	_
.	_	_

#266
Because	_	_
of	_	_
[	_	_
x11	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x2	_	_
,	_	_
x11	_	_
}	_	_
,	_	_
[	_	_
x11	_	_
]	_	_
CΔ⩾⊆Dnew⩾	_	_
,	_	_
we	_	_
have	_	_
RCΔ⩾̲Dnew⩾=RCΔ⩾̲D3⩾∪	_	_
{	_	_
x11	_	_
}	_	_
=	_	_
{	_	_
x2	_	_
,	_	_
x6	_	_
,	_	_
x11	_	_
}	_	_
.	_	_

#267
•	_	_
Assume	_	_
the	_	_
object	_	_
x12	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x12	_	_
}	_	_
.	_	_

#268
Since	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x12	_	_
,	_	_
d	_	_
)	_	_
=3	_	_
and	_	_
f	_	_
(	_	_
D2	_	_
,	_	_
d	_	_
)	_	_
<	_	_
f	_	_
(	_	_
x12	_	_
,	_	_
d	_	_
)	_	_
<	_	_
f	_	_
(	_	_
D3	_	_
,	_	_
d	_	_
)	_	_
,	_	_
then	_	_
D=	_	_
{	_	_
D1	_	_
,	_	_
D2	_	_
,	_	_
Dnew	_	_
,	_	_
D3	_	_
}	_	_
,	_	_
Dnew⩾=D3⩾∪	_	_
{	_	_
x11	_	_
}	_	_
=	_	_
{	_	_
x2	_	_
,	_	_
x6	_	_
,	_	_
x12	_	_
}	_	_
.	_	_

#269
Because	_	_
of	_	_
[	_	_
x12	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x2	_	_
,	_	_
x4	_	_
,	_	_
x12	_	_
}	_	_
,	_	_
[	_	_
x11	_	_
]	_	_
CΔ⩾⊈Dnew⩾	_	_
,	_	_
we	_	_
have	_	_
RCΔ⩾̲Dnew⩾=RCΔ⩾̲D3⩾=	_	_
{	_	_
x2	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#270
(	_	_
2	_	_
)	_	_
For	_	_
Table	_	_
2	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
9	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
Dnew⩾	_	_
when	_	_
the	_	_
object	_	_
x11	_	_
and	_	_
x12	_	_
in	_	_
Table	_	_
4	_	_
are	_	_
respectively	_	_
inserted	_	_
into	_	_
Table	_	_
2.•	_	_
Assume	_	_
the	_	_
object	_	_
x11	_	_
in	_	_
Table	_	_
4	_	_
inserts	_	_
into	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x11	_	_
}	_	_
.	_	_

#271
Since	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x11	_	_
,	_	_
d	_	_
)	_	_
=3	_	_
and	_	_
f	_	_
(	_	_
D2	_	_
,	_	_
d	_	_
)	_	_
<	_	_
f	_	_
(	_	_
x11	_	_
,	_	_
d	_	_
)	_	_
<	_	_
f	_	_
(	_	_
D3	_	_
,	_	_
d	_	_
)	_	_
,	_	_
then	_	_
D=	_	_
{	_	_
D1	_	_
,	_	_
D2	_	_
,	_	_
Dnew	_	_
,	_	_
D3	_	_
}	_	_
,	_	_
Dnew⩾=D3⩾∪	_	_
{	_	_
x11	_	_
}	_	_
=	_	_
{	_	_
x2	_	_
,	_	_
x5	_	_
,	_	_
x11	_	_
}	_	_
.	_	_

#272
Because	_	_
of	_	_
[	_	_
x11	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x5	_	_
,	_	_
x11	_	_
}	_	_
,	_	_
[	_	_
x11	_	_
]	_	_
CΔ⩾⊆Dnew⩾	_	_
,	_	_
we	_	_
have	_	_
RCΔ⩾̲Dnew⩾=RCΔ⩾̲D3⩾∪	_	_
{	_	_
x11	_	_
}	_	_
=	_	_
{	_	_
x11	_	_
}	_	_
.	_	_

#273
•	_	_
Assume	_	_
the	_	_
object	_	_
x12	_	_
in	_	_
Table	_	_
4	_	_
inserts	_	_
into	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x12	_	_
}	_	_
.	_	_

#274
Since	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x12	_	_
,	_	_
d	_	_
)	_	_
=3	_	_
and	_	_
f	_	_
(	_	_
D2	_	_
,	_	_
d	_	_
)	_	_
<	_	_
f	_	_
(	_	_
x12	_	_
,	_	_
d	_	_
)	_	_
<	_	_
f	_	_
(	_	_
D3	_	_
,	_	_
d	_	_
)	_	_
,	_	_
then	_	_
D=	_	_
{	_	_
D1	_	_
,	_	_
D2	_	_
,	_	_
Dnew	_	_
,	_	_
D3	_	_
}	_	_
,	_	_
Dnew⩾=D3⩾∪	_	_
{	_	_
x12	_	_
}	_	_
=	_	_
{	_	_
x2	_	_
,	_	_
x5	_	_
,	_	_
x12	_	_
}	_	_
.	_	_

#275
Because	_	_
of	_	_
[	_	_
x12	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x3	_	_
,	_	_
x5	_	_
,	_	_
x12	_	_
}	_	_
,	_	_
[	_	_
x12	_	_
]	_	_
CΔ⩾⊈Dnew⩾	_	_
,	_	_
we	_	_
have	_	_
RCΔ⩾̲Dnew⩾=RCΔ⩾̲D3⩾=∅	_	_
.	_	_

#276
Proposition	_	_
10	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪d	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
,	_	_
A⊆C	_	_
.	_	_

#277
When	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
if	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x̃	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
,	_	_
then	_	_
the	_	_
upper	_	_
approximation	_	_
of	_	_
the	_	_
union	_	_
of	_	_
the	_	_
new	_	_
decision	_	_
class	_	_
Dnew⩾	_	_
can	feasibility-rhetorical	_
be	_	_
computed	_	_
as	_	_
follows	_	_
:	_	_
RAΔ⩾¯Dnew⩾=RAΔ⩾¯Di+1⩾∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾where	_	_
Dnew⩾=Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#278
Proof	_	_
When	_	_
the	_	_
object	_	_
x̃	_	_
inserts	_	_
into	_	_
U	_	_
,	_	_
U′=U∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#279
According	_	_
to	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
RAΔ⩾¯Dnew⩾=⋃x∈Dnew⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=⋃x∈Di+1⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#280
Since	_	_
Dnew⩾=Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
,	_	_
then	_	_
RAΔ⩾¯Dnew⩾=⋃x∈Di+1⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#281
Because	_	_
∀x∈U	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
or	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
and	_	_
x̃∈	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
obtain	_	_
that	_	_
RAΔ⩾¯Dnew⩾=⋃x∈Di+1⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾=RAΔ⩾¯Di+1⩾∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾.□	_	_
Example	_	_
14	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
9	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
Dnew⩾	_	_
when	_	_
the	_	_
object	_	_
x11	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
.	_	_

#282
Assume	_	_
the	_	_
object	_	_
x11	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x11	_	_
}	_	_
.	_	_

#283
Since	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x11	_	_
,	_	_
d	_	_
)	_	_
=3	_	_
and	_	_
f	_	_
(	_	_
D2	_	_
,	_	_
d	_	_
)	_	_
<	_	_
f	_	_
(	_	_
x11	_	_
,	_	_
d	_	_
)	_	_
<	_	_
f	_	_
(	_	_
D3	_	_
,	_	_
d	_	_
)	_	_
,	_	_
then	_	_
D=	_	_
{	_	_
D1	_	_
,	_	_
D2	_	_
,	_	_
Dnew	_	_
,	_	_
D3	_	_
}	_	_
,	_	_
Dnew⩾=D3⩾∪	_	_
{	_	_
x11	_	_
}	_	_
=	_	_
{	_	_
x2	_	_
,	_	_
x6	_	_
,	_	_
x11	_	_
}	_	_
.	_	_

#284
Because	_	_
of	_	_
[	_	_
x11	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x2	_	_
,	_	_
x11	_	_
}	_	_
,	_	_
we	_	_
have	_	_
RCΔ⩾¯Dnew⩾=RCΔ⩾¯D3⩾∪	_	_
[	_	_
x11	_	_
]	_	_
AΔ⩾=	_	_
{	_	_
x2	_	_
,	_	_
x6	_	_
,	_	_
x11	_	_
}	_	_
.	_	_

#285
(	_	_
2	_	_
)	_	_
For	_	_
Table	_	_
2	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
9	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
Dnew⩾	_	_
when	_	_
the	_	_
object	_	_
x11	_	_
in	_	_
Table	_	_
4	_	_
inserts	_	_
into	_	_
Table	_	_
2	_	_
.	_	_

#286
Assume	_	_
the	_	_
object	_	_
x11	_	_
in	_	_
Table	_	_
4	_	_
inserts	_	_
into	_	_
Table	_	_
2	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x11	_	_
}	_	_
.	_	_

#287
Since	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x11	_	_
,	_	_
d	_	_
)	_	_
=3	_	_
and	_	_
f	_	_
(	_	_
D2	_	_
,	_	_
d	_	_
)	_	_
<	_	_
f	_	_
(	_	_
x11	_	_
,	_	_
d	_	_
)	_	_
<	_	_
f	_	_
(	_	_
D3	_	_
,	_	_
d	_	_
)	_	_
,	_	_
then	_	_
D=	_	_
{	_	_
D1	_	_
,	_	_
D2	_	_
,	_	_
Dnew	_	_
,	_	_
D3	_	_
}	_	_
,	_	_
Dnew⩾=D3⩾∪	_	_
{	_	_
x11	_	_
}	_	_
=	_	_
{	_	_
x2	_	_
,	_	_
x5	_	_
,	_	_
x11	_	_
}	_	_
.	_	_

#288
Because	_	_
of	_	_
[	_	_
x11	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x5	_	_
,	_	_
x11	_	_
}	_	_
,	_	_
we	_	_
have	_	_
RCΔ⩾¯Dnew⩾=RCΔ⩾¯D3⩾∪	_	_
[	_	_
x11	_	_
]	_	_
CΔ⩾=	_	_
{	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
,	_	_
x11	_	_
}	_	_
.	_	_

#289
Static	_	_
(	_	_
non-incremental	_	_
)	_	_
and	_	_
incremental	_	_
algorithms	_	_
for	_	_
computing	_	_
approximations	_	_
in	_	_
SOIS	_	_
with	_	_
the	_	_
variation	_	_
of	_	_
the	_	_
object	_	_
set	_	_
In	_	_
this	_	_
section	_	_
,	_	_
we	_	_
design	_	_
static	_	_
and	_	_
incremental	_	_
algorithms	_	_
on	_	_
the	_	_
variation	_	_
of	_	_
the	_	_
object	_	_
set	_	_
in	_	_
SOIS	_	_
corresponding	_	_
to	_	_
Sections	_	_
2	_	_
and	_	_
3	_	_
,	_	_
respectively	_	_
.	_	_

#290
The	_	_
static	_	_
algorithm	_	_
for	_	_
computing	_	_
approximations	_	_
in	_	_
SOIS	_	_
Algorithm	_	_
1	_	_
is	_	_
a	_	_
static	_	_
(	_	_
non-incremental	_	_
)	_	_
algorithm	_	_
for	_	_
computing	_	_
the	_	_
lower	_	_
and	_	_
upper	_	_
approximations	_	_
in	_	_
SOIS	_	_
while	_	_
the	_	_
object	_	_
set	_	_
in	_	_
the	_	_
information	_	_
system	_	_
is	_	_
changed	_	_
.	_	_

#291
In	_	_
Step	_	_
2	_	_
,	_	_
we	_	_
compute	_	_
all	_	_
the	_	_
decision	_	_
classes	_	_
,	_	_
and	_	_
the	_	_
set	_	_
of	_	_
decision	_	_
classes	_	_
are	_	_
preference-ordered	_	_
according	_	_
to	_	_
the	_	_
increasing	_	_
order	_	_
of	_	_
class	_	_
indices	_	_
.	_	_

#292
Step	_	_
3-7	_	_
compute	_	_
all	_	_
the	_	_
upward	_	_
unions	_	_
of	_	_
classes	_	_
based	_	_
on	_	_
the	_	_
set	_	_
of	_	_
decision	_	_
classes	_	_
.	_	_

#293
Step	_	_
9-11	_	_
compute	_	_
all	_	_
the	_	_
A-dominating	_	_
sets	_	_
.	_	_

#294
Step	_	_
12-21	_	_
compute	_	_
the	_	_
lower	_	_
and	_	_
upper	_	_
approximations	_	_
in	_	_
SOIS	_	_
based	_	_
on	_	_
Definition	_	_
4	_	_
.	_	_

#295
The	_	_
incremental	_	_
algorithm	_	_
for	_	_
updating	_	_
approximations	_	_
in	_	_
SOIS	_	_
when	_	_
deleting	_	_
an	_	_
object	_	_
from	_	_
the	_	_
universe	_	_
Algorithm	_	_
2	_	_
is	_	_
an	_	_
incremental	_	_
algorithm	_	_
for	_	_
updating	_	_
approximations	_	_
in	_	_
SOIS	_	_
while	_	_
deleting	_	_
an	_	_
object	_	_
from	_	_
the	_	_
universe	_	_
.	_	_

#296
Step	_	_
3-16	_	_
update	_	_
the	_	_
approximations	_	_
of	_	_
the	_	_
union	_	_
of	_	_
classes	_	_
Di⩾	_	_
,	_	_
when	_	_
the	_	_
deleted	_	_
object	_	_
x¯	_	_
belongs	_	_
to	_	_
the	_	_
union	_	_
of	_	_
classes	_	_
Di⩾	_	_
.	_	_

#297
Step	_	_
4-8	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
Di⩾	_	_
by	_	_
Proposition	_	_
1	_	_
.	_	_

#298
Step	_	_
9-16	_	_
compute	_	_
the	_	_
upper	_	_
approximations	_	_
of	_	_
Di⩾	_	_
by	_	_
Proposition	_	_
2	_	_
.	_	_

#299
Step	_	_
18-34	_	_
update	_	_
the	_	_
approximations	_	_
of	_	_
the	_	_
union	_	_
of	_	_
classes	_	_
Di⩾	_	_
,	_	_
when	_	_
the	_	_
deleted	_	_
object	_	_
x¯	_	_
does	_	_
not	_	_
belong	_	_
to	_	_
the	_	_
union	_	_
of	_	_
classes	_	_
Di⩾	_	_
.	_	_

#300
Step	_	_
19-27	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
Di⩾	_	_
by	_	_
Proposition	_	_
3	_	_
.	_	_

#301
Step	_	_
28-33	_	_
compute	_	_
the	_	_
upper	_	_
approximations	_	_
of	_	_
Di⩾	_	_
by	_	_
Proposition	_	_
4	_	_
.	_	_

#302
The	_	_
incremental	_	_
algorithm	_	_
for	_	_
updating	_	_
approximations	_	_
in	_	_
SOIS	_	_
when	_	_
inserting	_	_
an	_	_
object	_	_
into	_	_
the	_	_
universe	_	_
Algorithm	_	_
3	_	_
is	_	_
an	_	_
incremental	_	_
algorithm	_	_
for	_	_
updating	_	_
approximations	_	_
in	_	_
SOIS	_	_
while	_	_
inserting	_	_
an	_	_
object	_	_
into	_	_
the	_	_
universe	_	_
.	_	_

#303
Step	_	_
2	_	_
compute	_	_
the	_	_
A-dominating	_	_
set	_	_
with	_	_
respect	_	_
to	_	_
the	_	_
inserted	_	_
object	_	_
x̃	_	_
.	_	_

#304
Step	_	_
3-25	_	_
update	_	_
the	_	_
approximations	_	_
of	_	_
the	_	_
union	_	_
of	_	_
classes	_	_
Di⩾	_	_
,	_	_
when	_	_
the	_	_
inserted	_	_
object	_	_
x̃	_	_
will	_	_
belong	_	_
to	_	_
the	_	_
union	_	_
of	_	_
classes	_	_
Di⩾	_	_
.	_	_

#305
Step	_	_
5-10	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
Di⩾	_	_
by	_	_
Proposition	_	_
5	_	_
.	_	_

#306
Step	_	_
11	_	_
compute	_	_
the	_	_
upper	_	_
approximation	_	_
of	_	_
Di⩾	_	_
by	_	_
Proposition	_	_
6	_	_
.	_	_

#307
Step	_	_
13-24	_	_
update	_	_
the	_	_
approximations	_	_
of	_	_
the	_	_
union	_	_
of	_	_
classes	_	_
Di⩾	_	_
,	_	_
when	_	_
the	_	_
inserted	_	_
object	_	_
x̃	_	_
will	_	_
not	_	_
belong	_	_
to	_	_
the	_	_
union	_	_
of	_	_
classes	_	_
Di⩾	_	_
.	_	_

#308
Step	_	_
13-18	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
Di⩾	_	_
by	_	_
Proposition	_	_
7	_	_
.	_	_

#309
Step	_	_
19-24	_	_
update	_	_
the	_	_
approximations	_	_
of	_	_
Di⩾	_	_
by	_	_
Proposition	_	_
8	_	_
.	_	_

#310
Step	_	_
26-35	_	_
compute	_	_
the	_	_
approximation	_	_
of	_	_
the	_	_
union	_	_
of	_	_
new	_	_
decision	_	_
class	_	_
Dnew⩾	_	_
,	_	_
if	_	_
the	_	_
inserted	_	_
object	_	_
does	_	_
not	_	_
belong	_	_
to	_	_
any	_	_
existed	_	_
decision	_	_
classes	_	_
.	_	_

#311
Step	_	_
29-33	_	_
compute	_	_
the	_	_
lower	_	_
approximation	_	_
of	_	_
Dnew⩾	_	_
by	_	_
Proposition	_	_
9	_	_
.	_	_

#312
Step	_	_
34	_	_
compute	_	_
the	_	_
upper	_	_
approximation	_	_
of	_	_
Dnew⩾	_	_
by	_	_
Proposition	_	_
10	_	_
.	_	_

#313
Experimental	_	_
evaluations	_	_
In	_	_
this	_	_
section	_	_
,	_	_
in	_	_
order	_	_
to	_	_
evaluate	_	_
the	_	_
performance	_	_
of	_	_
the	_	_
proposed	_	_
incremental	_	_
algorithms	_	_
,	_	_
we	_	_
conduct	_	_
a	_	_
series	_	_
of	_	_
experiments	_	_
to	_	_
compare	_	_
the	_	_
computational	_	_
time	_	_
between	_	_
the	_	_
non-incremental	_	_
algorithm	_	_
and	_	_
the	_	_
incremental	_	_
algorithms	_	_
for	_	_
computing	_	_
approximations	_	_
based	_	_
on	_	_
standard	_	_
data	_	_
sets	_	_
.	_	_

#314
The	_	_
algorithms	_	_
are	_	_
implemental	_	_
using	_	_
the	_	_
JAVA	_	_
programming	_	_
language	_	_
in	_	_
Eclipse	_	_
3.5	_	_
with	_	_
Java	_	_
Virtual	_	_
Machine	_	_
(	_	_
JVM	_	_
)	_	_
1.6	_	_
(	_	_
available	_	_
at	_	_
http	_	_
:	_	_
//www.eclipse.org/platform	_	_
)	_	_
.	_	_

#315
Experiments	_	_
are	_	_
performed	_	_
on	_	_
a	_	_
computer	_	_
with	_	_
2.66GHz	_	_
CPU	_	_
,	_	_
4.0GB	_	_
of	_	_
memory	_	_
and	_	_
32-bit	_	_
Windows	_	_
7	_	_
OS	_	_
.	_	_

#316
We	_	_
download	_	_
four	_	_
data	_	_
sets	_	_
from	_	_
the	_	_
machine	_	_
learning	_	_
data	_	_
repository	_	_
,	_	_
University	_	_
of	_	_
California	_	_
at	_	_
Irvine	_	_
[	_	_
51	_	_
]	_	_
,	_	_
where	_	_
the	_	_
basic	_	_
information	_	_
of	_	_
data	_	_
sets	_	_
is	_	_
outlined	_	_
in	_	_
Table	_	_
5	_	_
.	_	_

#317
The	_	_
data	_	_
sets	_	_
1-4	_	_
in	_	_
Table	_	_
5	_	_
are	_	_
all	_	_
incomplete	_	_
information	_	_
systems	_	_
with	_	_
missing	_	_
values	_	_
.	_	_

#318
In	_	_
our	_	_
experiment	_	_
,	_	_
we	_	_
represent	_	_
all	_	_
the	_	_
missing	_	_
values	_	_
by	_	_
the	_	_
set	_	_
of	_	_
all	_	_
possible	_	_
values	_	_
of	_	_
each	_	_
attribute	_	_
.	_	_

#319
Then	_	_
this	_	_
type	_	_
of	_	_
data	_	_
sets	_	_
can	feasibility	_
be	_	_
regarded	_	_
as	_	_
a	_	_
special	_	_
case	_	_
of	_	_
the	_	_
set-valued	_	_
information	_	_
system	_	_
.	_	_

#320
Besides	_	_
,	_	_
we	_	_
also	_	_
use	_	_
the	_	_
set-valued	_	_
data	_	_
generator	_	_
to	_	_
generate	_	_
two	_	_
artificial	_	_
data	_	_
sets	_	_
5-6	_	_
in	_	_
order	_	_
to	_	_
test	_	_
the	_	_
efficiency	_	_
of	_	_
the	_	_
proposed	_	_
algorithms	_	_
,	_	_
which	_	_
are	_	_
also	_	_
outlined	_	_
in	_	_
Table	_	_
5	_	_
.	_	_

#321
Generally	_	_
,	_	_
we	_	_
perform	_	_
the	_	_
experimental	_	_
analysis	_	_
with	_	_
applying	_	_
the	_	_
non-incremental	_	_
algorithm	_	_
along	_	_
with	_	_
our	_	_
proposed	_	_
incremental	_	_
algorithms	_	_
when	_	_
the	_	_
objects	_	_
inserting	_	_
into	_	_
or	_	_
deleting	_	_
from	_	_
the	_	_
information	_	_
system	_	_
,	_	_
respectively	_	_
.	_	_

#322
In	_	_
order	_	_
to	_	_
present	_	_
more	_	_
informative	_	_
comparative	_	_
data	_	_
and	_	_
acquire	_	_
more	_	_
dependable	_	_
results	_	_
in	_	_
our	_	_
experiments	_	_
,	_	_
we	_	_
compare	_	_
the	_	_
computational	_	_
efficiency	_	_
of	_	_
the	_	_
algorithms	_	_
according	_	_
to	_	_
the	_	_
following	_	_
two	_	_
aspects	_	_
:	_	_
(	_	_
1	_	_
)	_	_
Size	_	_
of	_	_
the	_	_
data	_	_
set	_	_
:	_	_
To	_	_
compare	_	_
the	_	_
computational	_	_
efficiency	_	_
and	_	_
distinguish	_	_
the	_	_
computational	_	_
times	_	_
used	_	_
by	_	_
the	_	_
non-incremental	_	_
and	_	_
incremental	_	_
algorithms	_	_
with	_	_
different-sized	_	_
data	_	_
sets	_	_
,	_	_
we	_	_
divide	_	_
each	_	_
of	_	_
the	_	_
six	_	_
data	_	_
sets	_	_
into	_	_
10	_	_
parts	_	_
of	_	_
equal	_	_
size	_	_
,	_	_
respectively	_	_
.	_	_

#323
The	_	_
first	_	_
part	_	_
is	_	_
regarded	_	_
as	_	_
the	_	_
1st	_	_
data	_	_
set	_	_
,	_	_
the	_	_
combination	_	_
of	_	_
the	_	_
first	_	_
part	_	_
and	_	_
the	_	_
second	_	_
part	_	_
is	_	_
viewed	_	_
as	_	_
the	_	_
2nd	_	_
data	_	_
set	_	_
,	_	_
the	_	_
combination	_	_
of	_	_
the	_	_
2nd	_	_
data	_	_
set	_	_
and	_	_
the	_	_
third	_	_
part	_	_
is	_	_
regarded	_	_
as	_	_
the	_	_
3rd	_	_
data	_	_
set	_	_
,	_	_
and	_	_
so	_	_
on	_	_
.	_	_

#324
The	_	_
combination	_	_
of	_	_
all	_	_
ten	_	_
parts	_	_
is	_	_
viewed	_	_
as	_	_
the	_	_
10th	_	_
data	_	_
set	_	_
.	_	_

#325
(	_	_
2	_	_
)	_	_
Update	_	_
ratio	_	_
of	_	_
the	_	_
data	_	_
set	_	_
:	_	_
The	_	_
size	_	_
of	_	_
updated	_	_
objects	_	_
which	_	_
inserting	_	_
into	_	_
or	_	_
deleting	_	_
from	_	_
the	_	_
universe	_	_
may	options	negation
different	_	_
,	_	_
that	_	_
is	_	_
,	_	_
the	_	_
update	_	_
ratio	_	_
,	_	_
i.e.	_	_
,	_	_
the	_	_
ratio	_	_
of	_	_
the	_	_
number	_	_
of	_	_
updating	_	_
(	_	_
deleting	_	_
or	_	_
inserting	_	_
)	_	_
data	_	_
and	_	_
original	_	_
data	_	_
,	_	_
may	options	negation
different	_	_
.	_	_

#326
Here	_	_
,	_	_
in	_	_
order	_	_
to	_	_
analyze	_	_
the	_	_
influence	_	_
of	_	_
the	_	_
update	_	_
ratio	_	_
on	_	_
the	_	_
efficiency	_	_
of	_	_
algorithms	_	_
,	_	_
we	_	_
compare	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
the	_	_
static	_	_
and	_	_
incremental	_	_
algorithms	_	_
with	_	_
different	_	_
update	_	_
ratios	_	_
.	_	_

#327
That	_	_
is	_	_
to	_	_
say	_	_
,	_	_
for	_	_
each	_	_
data	_	_
sets	_	_
,	_	_
we	_	_
conduct	_	_
the	_	_
comparison	_	_
experiments	_	_
with	_	_
the	_	_
same	_	_
original	_	_
data	_	_
size	_	_
,	_	_
but	_	_
different	_	_
update	_	_
ratios	_	_
,	_	_
i.e.	_	_
,	_	_
deleting	_	_
ratios	_	_
and	_	_
inserting	_	_
ratios	_	_
.	_	_

#328
A	_	_
comparison	_	_
of	_	_
computational	_	_
efficiency	_	_
between	_	_
static	_	_
and	_	_
incremental	_	_
algorithms	_	_
with	_	_
the	_	_
deletion	_	_
of	_	_
the	_	_
objects	_	_
To	_	_
compare	_	_
the	_	_
efficiency	_	_
of	_	_
static	_	_
(	_	_
Algorithm	_	_
1	_	_
)	_	_
and	_	_
incremental	_	_
(	_	_
Algorithm	_	_
2	_	_
)	_	_
algorithms	_	_
for	_	_
computing	_	_
approximations	_	_
when	_	_
deleting	_	_
the	_	_
objects	_	_
from	_	_
the	_	_
data	_	_
sets	_	_
.	_	_

#329
Firstly	_	_
,	_	_
we	_	_
compare	_	_
the	_	_
two	_	_
algorithms	_	_
on	_	_
the	_	_
six	_	_
data	_	_
sets	_	_
in	_	_
Table	_	_
5	_	_
with	_	_
the	_	_
same	_	_
updating	_	_
ratio	_	_
(	_	_
the	_	_
ratio	_	_
of	_	_
the	_	_
number	_	_
of	_	_
deleting	_	_
data	_	_
and	_	_
original	_	_
data	_	_
)	_	_
,	_	_
but	_	_
different	_	_
sizes	_	_
of	_	_
the	_	_
original	_	_
data	_	_
.	_	_

#330
Here	_	_
,	_	_
we	_	_
assume	_	_
that	_	_
the	_	_
updating	_	_
ratio	_	_
is	_	_
equal	_	_
to	_	_
5	_	_
%	_	_
.	_	_

#331
The	_	_
experimental	_	_
results	_	_
are	_	_
shown	_	_
in	_	_
Table	_	_
6	_	_
.	_	_

#332
More	_	_
detailed	_	_
changing	_	_
trendline	_	_
of	_	_
each	_	_
of	_	_
two	_	_
algorithms	_	_
with	_	_
the	_	_
increasing	_	_
size	_	_
of	_	_
data	_	_
sets	_	_
are	_	_
illustrated	_	_
in	_	_
Fig	_	_
.	_	_
1	_	_
.	_	_

#333
Secondly	_	_
,	_	_
we	_	_
compare	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
the	_	_
two	_	_
algorithms	_	_
with	_	_
the	_	_
same	_	_
size	_	_
of	_	_
original	_	_
data	_	_
,	_	_
but	_	_
different	_	_
updating	_	_
ratios	_	_
for	_	_
each	_	_
data	_	_
sets	_	_
(	_	_
from	_	_
5	_	_
%	_	_
to	_	_
100	_	_
%	_	_
)	_	_
.	_	_

#334
we	_	_
show	_	_
the	_	_
experimental	_	_
results	_	_
in	_	_
Table	_	_
7	_	_
.	_	_

#335
More	_	_
detailed	_	_
changing	_	_
trendline	_	_
of	_	_
each	_	_
of	_	_
two	_	_
algorithms	_	_
with	_	_
the	_	_
increasing	_	_
updating	_	_
ratio	_	_
of	_	_
data	_	_
sets	_	_
are	_	_
presented	_	_
in	_	_
Fig	_	_
.	_	_
2	_	_
.	_	_

#336
In	_	_
each	_	_
sub-figures	_	_
(	_	_
a	_	_
)	_	_
-	_	_
(	_	_
f	_	_
)	_	_
of	_	_
Fig	_	_
.	_	_
1	_	_
,	_	_
the	_	_
x-coordinate	_	_
pertains	_	_
to	_	_
the	_	_
size	_	_
of	_	_
the	_	_
data	_	_
set	_	_
(	_	_
the	_	_
10	_	_
data	_	_
sets	_	_
starting	_	_
from	_	_
the	_	_
smallest	_	_
one	_	_
)	_	_
,	_	_
while	_	_
the	_	_
y-coordinate	_	_
presents	_	_
the	_	_
computational	_	_
time	_	_
.	_	_

#337
We	_	_
use	_	_
the	_	_
star	_	_
lines	_	_
to	_	_
denote	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
the	_	_
static	_	_
algorithm	_	_
on	_	_
different	_	_
sizes	_	_
of	_	_
data	_	_
sets	_	_
,	_	_
and	_	_
the	_	_
plus	_	_
lines	_	_
denote	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
the	_	_
incremental	_	_
algorithm	_	_
on	_	_
different	_	_
sizes	_	_
of	_	_
data	_	_
sets	_	_
when	_	_
deleting	_	_
the	_	_
objects	_	_
into	_	_
the	_	_
universe	_	_
.	_	_

#338
It	_	_
is	_	_
easy	_	_
to	_	_
see	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
the	_	_
both	_	_
algorithms	_	_
usually	_	_
increases	_	_
with	_	_
the	_	_
increase	_	_
of	_	_
the	_	_
size	_	_
of	_	_
data	_	_
sets	_	_
according	_	_
to	_	_
Table	_	_
6	_	_
and	_	_
Fig	_	_
.	_	_
1	_	_
.	_	_

#339
As	_	_
the	_	_
important	_	_
advantage	_	_
of	_	_
the	_	_
incremental	_	_
algorithm	_	_
shown	_	_
in	_	_
Table	_	_
6	_	_
and	_	_
Fig	_	_
.	_	_
1	_	_
,	_	_
when	_	_
deleting	_	_
the	_	_
objets	_	_
from	_	_
the	_	_
universe	_	_
,	_	_
we	_	_
find	_	_
that	_	_
the	_	_
incremental	_	_
algorithm	_	_
is	_	_
mush	_	_
faster	_	_
than	_	_
the	_	_
static	_	_
algorithm	_	_
for	_	_
computing	_	_
the	_	_
approximations	_	_
.	_	_

#340
Furthermore	_	_
,	_	_
the	_	_
differences	_	_
become	_	_
larger	_	_
and	_	_
larger	_	_
when	_	_
increasing	_	_
the	_	_
size	_	_
of	_	_
data	_	_
sets	_	_
.	_	_

#341
In	_	_
each	_	_
sub-figures	_	_
(	_	_
a	_	_
)	_	_
-	_	_
(	_	_
f	_	_
)	_	_
of	_	_
Fig	_	_
.	_	_
2	_	_
,	_	_
the	_	_
x-coordinate	_	_
pertains	_	_
to	_	_
the	_	_
ratio	_	_
of	_	_
the	_	_
number	_	_
of	_	_
the	_	_
deleting	_	_
data	_	_
and	_	_
original	_	_
data	_	_
,	_	_
while	_	_
the	_	_
y-coordinate	_	_
concerns	_	_
the	_	_
computational	_	_
time	_	_
.	_	_

#342
According	_	_
to	_	_
the	_	_
experimental	_	_
results	_	_
in	_	_
Table	_	_
7	_	_
and	_	_
Fig	_	_
.	_	_
2	_	_
,	_	_
we	_	_
find	_	_
that	_	_
,	_	_
for	_	_
the	_	_
static	_	_
algorithm	_	_
,	_	_
the	_	_
computational	_	_
time	_	_
for	_	_
computing	_	_
approximations	_	_
with	_	_
deletion	_	_
of	_	_
the	_	_
objects	_	_
from	_	_
the	_	_
universe	_	_
is	_	_
decreasing	_	_
monotonically	_	_
along	_	_
with	_	_
the	_	_
increase	_	_
of	_	_
deleting	_	_
ratios	_	_
.	_	_

#343
It	_	_
is	_	_
because	_	_
with	_	_
the	_	_
increase	_	_
of	_	_
ratios	_	_
,	_	_
the	_	_
size	_	_
of	_	_
the	_	_
universe	_	_
decreases	_	_
gradually	_	_
.	_	_

#344
On	_	_
the	_	_
contrary	_	_
,	_	_
for	_	_
incremental	_	_
algorithm	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
see	_	_
that	_	_
the	_	_
computational	_	_
efficiency	_	_
for	_	_
computing	_	_
approximations	_	_
is	_	_
changing	_	_
smoothly	_	_
along	_	_
with	_	_
the	_	_
increase	_	_
of	_	_
deleting	_	_
ratios	_	_
.	_	_

#345
It	_	_
is	_	_
easy	_	_
to	_	_
find	_	_
out	_	_
the	_	_
incremental	_	_
algorithm	_	_
always	_	_
performs	_	_
faster	_	_
than	_	_
the	_	_
non-incremental	_	_
algorithm	_	_
for	_	_
computing	_	_
approximations	_	_
until	_	_
a	_	_
threshold	_	_
of	_	_
the	_	_
deleting	_	_
ratio	_	_
.	_	_

#346
The	_	_
threshold	_	_
differs	_	_
depending	_	_
on	_	_
the	_	_
data	_	_
sets	_	_
.	_	_

#347
For	_	_
example	_	_
,	_	_
in	_	_
Fig	_	_
.	_	_
2	_	_
(	_	_
a	_	_
)	_	_
,	_	_
(	_	_
e	_	_
)	_	_
,	_	_
and	_	_
(	_	_
f	_	_
)	_	_
,	_	_
the	_	_
thresholds	_	_
of	_	_
ratios	_	_
are	_	_
around	_	_
85	_	_
%	_	_
;	_	_
In	_	_
Fig	_	_
.	_	_
2	_	_
(	_	_
b	_	_
)	_	_
and	_	_
(	_	_
c	_	_
)	_	_
,	_	_
the	_	_
thresholds	_	_
of	_	_
ratios	_	_
are	_	_
around	_	_
65	_	_
%	_	_
;	_	_
In	_	_
Fig	_	_
.	_	_
2	_	_
(	_	_
d	_	_
)	_	_
,	_	_
the	_	_
incremental	_	_
algorithm	_	_
consistently	_	_
outperforms	_	_
the	_	_
static	_	_
algorithm	_	_
even	_	_
in	_	_
the	_	_
value	_	_
of	_	_
90	_	_
%	_	_
.	_	_

#348
A	_	_
comparison	_	_
of	_	_
computational	_	_
efficiency	_	_
between	_	_
static	_	_
and	_	_
incremental	_	_
algorithms	_	_
with	_	_
the	_	_
insertion	_	_
of	_	_
the	_	_
objects	_	_
Similar	_	_
to	_	_
the	_	_
experiment	_	_
schemes	_	_
for	_	_
comparing	_	_
the	_	_
efficiencies	_	_
between	_	_
static	_	_
and	_	_
incremental	_	_
algorithms	_	_
when	_	_
deleting	_	_
the	_	_
objects	_	_
from	_	_
the	_	_
universe	_	_
,	_	_
we	_	_
also	_	_
adopt	_	_
such	_	_
schemes	_	_
to	_	_
compare	_	_
the	_	_
performance	_	_
of	_	_
algorithms	_	_
on	_	_
the	_	_
case	_	_
of	_	_
inserting	_	_
the	_	_
objects	_	_
into	_	_
the	_	_
universe	_	_
.	_	_

#349
Firstly	_	_
,	_	_
we	_	_
compare	_	_
the	_	_
two	_	_
algorithms	_	_
,	_	_
i.e.	_	_
,	_	_
Algorithm	_	_
1	_	_
and	_	_
Algorithm	_	_
3	_	_
,	_	_
on	_	_
the	_	_
six	_	_
data	_	_
sets	_	_
in	_	_
Table	_	_
5	_	_
with	_	_
the	_	_
same	_	_
updating	_	_
ratio	_	_
(	_	_
the	_	_
ratio	_	_
of	_	_
the	_	_
number	_	_
of	_	_
inserting	_	_
data	_	_
and	_	_
original	_	_
data	_	_
)	_	_
,	_	_
but	_	_
different	_	_
sizes	_	_
of	_	_
the	_	_
original	_	_
data	_	_
.	_	_

#350
Here	_	_
,	_	_
we	_	_
assume	_	_
the	_	_
updating	_	_
ratio	_	_
is	_	_
equal	_	_
to	_	_
5	_	_
%	_	_
.	_	_

#351
The	_	_
experimental	_	_
results	_	_
are	_	_
shown	_	_
in	_	_
Table	_	_
8	_	_
.	_	_

#352
More	_	_
detailed	_	_
change	_	_
trendline	_	_
of	_	_
each	_	_
of	_	_
two	_	_
algorithms	_	_
with	_	_
the	_	_
increasing	_	_
size	_	_
of	_	_
data	_	_
sets	_	_
are	_	_
presented	_	_
in	_	_
Fig	_	_
.	_	_
3	_	_
.	_	_

#353
Secondly	_	_
,	_	_
we	_	_
compare	_	_
the	_	_
computational	_	_
times	_	_
of	_	_
the	_	_
two	_	_
algorithms	_	_
with	_	_
the	_	_
changing	_	_
of	_	_
updating	_	_
ratios	_	_
for	_	_
each	_	_
data	_	_
sets	_	_
.	_	_

#354
We	_	_
show	_	_
the	_	_
experimental	_	_
results	_	_
in	_	_
Table	_	_
9	_	_
,	_	_
and	_	_
more	_	_
detailed	_	_
change	_	_
trendline	_	_
of	_	_
each	_	_
of	_	_
two	_	_
algorithms	_	_
with	_	_
the	_	_
increasing	_	_
size	_	_
of	_	_
data	_	_
sets	_	_
are	_	_
given	_	_
in	_	_
Fig	_	_
.	_	_
4	_	_
.	_	_

#355
In	_	_
each	_	_
sub-figures	_	_
(	_	_
a	_	_
)	_	_
-	_	_
(	_	_
f	_	_
)	_	_
of	_	_
Fig	_	_
.	_	_
3	_	_
,	_	_
the	_	_
x-coordinate	_	_
pertains	_	_
to	_	_
the	_	_
size	_	_
of	_	_
the	_	_
data	_	_
set	_	_
(	_	_
the	_	_
10	_	_
data	_	_
sets	_	_
starting	_	_
from	_	_
the	_	_
smallest	_	_
one	_	_
)	_	_
,	_	_
while	_	_
the	_	_
y-coordinate	_	_
presents	_	_
the	_	_
computational	_	_
time	_	_
.	_	_

#356
We	_	_
use	_	_
the	_	_
star	_	_
lines	_	_
to	_	_
denote	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
static	_	_
algorithm	_	_
(	_	_
Algorithm	_	_
1	_	_
)	_	_
on	_	_
different	_	_
sizes	_	_
of	_	_
data	_	_
sets	_	_
,	_	_
and	_	_
the	_	_
plus	_	_
lines	_	_
denote	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
incremental	_	_
algorithm	_	_
(	_	_
Algorithm	_	_
3	_	_
)	_	_
on	_	_
different	_	_
sizes	_	_
of	_	_
data	_	_
sets	_	_
when	_	_
inserting	_	_
the	_	_
objects	_	_
into	_	_
the	_	_
universe	_	_
.	_	_

#357
Obviously	_	_
,	_	_
according	_	_
to	_	_
Table	_	_
8	_	_
and	_	_
Fig	_	_
.	_	_
3	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
find	_	_
that	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
the	_	_
both	_	_
algorithms	_	_
usually	_	_
increases	_	_
with	_	_
the	_	_
increasing	_	_
size	_	_
of	_	_
data	_	_
sets	_	_
.	_	_

#358
However	_	_
,	_	_
the	_	_
incremental	_	_
algorithm	_	_
is	_	_
much	_	_
faster	_	_
than	_	_
the	_	_
static	_	_
algorithm	_	_
for	_	_
computing	_	_
the	_	_
approximations	_	_
when	_	_
inserting	_	_
the	_	_
objects	_	_
into	_	_
the	_	_
universe	_	_
.	_	_

#359
Furthermore	_	_
,	_	_
the	_	_
differences	_	_
between	_	_
static	_	_
and	_	_
incremental	_	_
algorithms	_	_
are	_	_
getting	_	_
larger	_	_
when	_	_
increasing	_	_
the	_	_
data	_	_
size	_	_
.	_	_

#360
In	_	_
each	_	_
sub-figures	_	_
(	_	_
a	_	_
)	_	_
-	_	_
(	_	_
f	_	_
)	_	_
of	_	_
Fig	_	_
.	_	_
4	_	_
,	_	_
the	_	_
x-coordinate	_	_
pertains	_	_
to	_	_
the	_	_
ratio	_	_
of	_	_
the	_	_
number	_	_
of	_	_
the	_	_
inserted	_	_
objects	_	_
and	_	_
original	_	_
data	_	_
,	_	_
while	_	_
the	_	_
y-coordinate	_	_
concerns	_	_
the	_	_
computational	_	_
time	_	_
.	_	_

#361
According	_	_
to	_	_
the	_	_
experimental	_	_
results	_	_
as	_	_
shown	_	_
in	_	_
Table	_	_
9	_	_
and	_	_
Fig	_	_
.	_	_
4	_	_
,	_	_
we	_	_
find	_	_
that	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
both	_	_
static	_	_
(	_	_
Algorithm	_	_
1	_	_
)	_	_
and	_	_
incremental	_	_
(	_	_
Algorithm	_	_
3	_	_
)	_	_
algorithms	_	_
are	_	_
increasing	_	_
monotonically	_	_
along	_	_
with	_	_
the	_	_
increasing	_	_
of	_	_
insert	_	_
ratios	_	_
.	_	_

#362
It	_	_
is	_	_
easy	_	_
to	_	_
get	_	_
the	_	_
incremental	_	_
algorithm	_	_
is	_	_
always	_	_
faster	_	_
than	_	_
the	_	_
static	_	_
algorithm	_	_
when	_	_
the	_	_
inserting	_	_
ratio	_	_
increases	_	_
from	_	_
10	_	_
%	_	_
to	_	_
100	_	_
%	_	_
according	_	_
to	_	_
Fig	_	_
.	_	_
4	_	_
(	_	_
a	_	_
)	_	_
-	_	_
(	_	_
e	_	_
)	_	_
.	_	_

#363
In	_	_
Fig	_	_
.	_	_
4	_	_
(	_	_
f	_	_
)	_	_
,	_	_
we	_	_
find	_	_
the	_	_
incremental	_	_
algorithm	_	_
is	_	_
mush	_	_
faster	_	_
than	_	_
the	_	_
static	_	_
algorithm	_	_
when	_	_
the	_	_
inserting	_	_
ratio	_	_
is	_	_
less	_	_
than	_	_
85	_	_
%	_	_
,	_	_
but	_	_
slower	_	_
than	_	_
the	_	_
static	_	_
algorithm	_	_
when	_	_
the	_	_
inserting	_	_
ratio	_	_
is	_	_
more	_	_
than	_	_
85	_	_
%	_	_
.	_	_

#364
Conclusions	_	_
The	_	_
incremental	_	_
technique	_	_
is	_	_
an	_	_
effective	_	_
way	_	_
to	_	_
maintain	_	_
knowledge	_	_
in	_	_
the	_	_
dynamic	_	_
environment	_	_
.	_	_

#365
In	_	_
this	_	_
paper	_	_
,	_	_
we	_	_
proposed	_	_
incremental	_	_
methods	_	_
for	_	_
updating	_	_
approximations	_	_
in	_	_
SOIS	_	_
when	_	_
the	_	_
information	_	_
system	_	_
is	_	_
updated	_	_
by	_	_
inserting	_	_
or	_	_
deleting	_	_
objects	_	_
.	_	_

#366
Through	_	_
discussing	_	_
the	_	_
principles	_	_
of	_	_
updating	_	_
approximations	_	_
by	_	_
deleting	_	_
objects	_	_
from	_	_
the	_	_
information	_	_
system	_	_
and	_	_
inserting	_	_
objects	_	_
into	_	_
the	_	_
information	_	_
system	_	_
,	_	_
respectively	_	_
,	_	_
we	_	_
proposed	_	_
the	_	_
incremental	_	_
algorithms	_	_
for	_	_
updating	_	_
approximations	_	_
based	_	_
on	_	_
SOIS	_	_
in	_	_
terms	_	_
of	_	_
inserting	_	_
or	_	_
deleting	_	_
an	_	_
object	_	_
.	_	_

#367
Experimental	_	_
studies	_	_
pertaining	_	_
to	_	_
four	_	_
UCI	_	_
data	_	_
sets	_	_
and	_	_
two	_	_
artificial	_	_
data	_	_
sets	_	_
showed	_	_
that	_	_
the	_	_
incremental	_	_
algorithms	_	_
can	capability	_
improve	_	_
the	_	_
computational	_	_
efficiency	_	_
for	_	_
updating	_	_
approximations	_	_
when	_	_
the	_	_
object	_	_
set	_	_
in	_	_
the	_	_
information	_	_
system	_	_
varies	_	_
over	_	_
time	_	_
.	_	_

#368
In	_	_
real-world	_	_
applications	_	_
,	_	_
an	_	_
information	_	_
system	_	_
may	feasibility-options	_
be	_	_
updated	_	_
by	_	_
inserting	_	_
and	_	_
deleting	_	_
some	_	_
objects	_	_
at	_	_
the	_	_
same	_	_
time	_	_
.	_	_

#369
In	_	_
our	_	_
further	_	_
work	_	_
,	_	_
we	_	_
will	_	_
focus	_	_
on	_	_
improving	_	_
the	_	_
incremental	_	_
algorithm	_	_
for	_	_
updating	_	_
knowledge	_	_
by	_	_
deleting	_	_
and	_	_
deleting	_	_
some	_	_
objects	_	_
simultaneously	_	_
.	_	_

#370
Furthermore	_	_
,	_	_
as	_	_
an	_	_
information	_	_
system	_	_
consists	_	_
of	_	_
the	_	_
objects	_	_
,	_	_
the	_	_
attributes	_	_
,	_	_
and	_	_
the	_	_
domain	_	_
of	_	_
attributes	_	_
values	_	_
,	_	_
all	_	_
of	_	_
the	_	_
elements	_	_
in	_	_
the	_	_
information	_	_
system	_	_
will	_	_
change	_	_
as	_	_
time	_	_
goes	_	_
by	_	_
under	_	_
the	_	_
dynamic	_	_
environment	_	_
.	_	_

#371
In	_	_
the	_	_
future	_	_
,	_	_
the	_	_
variation	_	_
of	_	_
attributes	_	_
and	_	_
the	_	_
domain	_	_
of	_	_
attributes	_	_
values	_	_
in	_	_
SOIS	_	_
will	_	_
also	_	_
be	_	_
taken	_	_
into	_	_
consideration	_	_
in	_	_
terms	_	_
of	_	_
incremental	_	_
updating	_	_
knowledge	_	_
.	_	_

#372
Acknowledgements	_	_
This	_	_
work	_	_
is	_	_
supported	_	_
by	_	_
the	_	_
National	_	_
Science	_	_
Foundation	_	_
of	_	_
China	_	_
(	_	_
Nos	_	_
.	_	_

#373
61175047	_	_
,	_	_
61100117	_	_
and	_	_
71201133	_	_
)	_	_
and	_	_
NSAF	_	_
(	_	_
No	_	_
.	_	_

#374
U1230117	_	_
)	_	_
,	_	_
the	_	_
Youth	_	_
Social	_	_
Science	_	_
Foundation	_	_
of	_	_
the	_	_
Chinese	_	_
Education	_	_
Commission	_	_
(	_	_
11YJC630127	_	_
)	_	_
and	_	_
the	_	_
Fundamental	_	_
Research	_	_
Funds	_	_
for	_	_
the	_	_
Central	_	_
Universities	_	_
(	_	_
SWJTU11ZT08	_	_
,	_	_
SWJTU12CX091	_	_
,	_	_
SWJTU12CX117	_	_
)	_	_
.	_	_