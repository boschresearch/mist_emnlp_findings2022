#0
Performance	_	_
analysis	_	_
of	_	_
quantization-based	_	_
approximation	_	_
algorithms	_	_
for	_	_
precomputing	_	_
the	_	_
supported	_	_
QoS	_	_
Abstract	_	_
Precomputation	_	_
of	_	_
the	_	_
supported	_	_
QoS	_	_
is	_	_
very	_	_
important	_	_
for	_	_
internet	_	_
routing	_	_
.	_	_

#1
By	_	_
constructing	_	_
routing	_	_
tables	_	_
before	_	_
a	_	_
request	_	_
arrives	_	_
,	_	_
a	_	_
packet	_	_
can	feasibility	_
be	_	_
forwarded	_	_
with	_	_
a	_	_
simple	_	_
table	_	_
lookup	_	_
.	_	_

#2
When	_	_
the	_	_
QoS	_	_
information	_	_
is	_	_
provided	_	_
,	_	_
a	_	_
node	_	_
can	capability	_
immediately	_	_
know	_	_
whether	_	_
a	_	_
certain	_	_
request	_	_
can	capability	_
be	_	_
supported	_	_
without	_	_
launching	_	_
the	_	_
path	_	_
finding	_	_
process	_	_
.	_	_

#3
Unfortunately	_	_
,	_	_
as	_	_
the	_	_
problem	_	_
of	_	_
finding	_	_
a	_	_
route	_	_
satisfying	_	_
two	_	_
additive	_	_
constraints	_	_
is	_	_
NP-complete	_	_
,	_	_
the	_	_
supported	_	_
QoS	_	_
information	_	_
can	capability-feasibility	_
only	_	_
be	_	_
approximated	_	_
using	_	_
a	_	_
polynomial	_	_
time	_	_
mechanism	_	_
.	_	_

#4
A	_	_
good	_	_
approximation	_	_
scheme	_	_
should	deontic	_
reduce	_	_
the	_	_
error	_	_
in	_	_
estimating	_	_
the	_	_
actual	_	_
supported	_	_
QoS	_	_
.	_	_

#5
Nevertheless	_	_
,	_	_
existing	_	_
approaches	_	_
which	_	_
determine	_	_
this	_	_
error	_	_
may	capability-speculation	negation
not	_	_
truly	_	_
reflect	_	_
the	_	_
performance	_	_
on	_	_
admission	_	_
control	_	_
,	_	_
meaning	_	_
whether	_	_
a	_	_
request	_	_
can	feasibility	_
be	_	_
correctly	_	_
classified	_	_
as	_	_
feasible	_	_
or	_	_
infeasible	_	_
.	_	_

#6
In	_	_
this	_	_
paper	_	_
,	_	_
we	_	_
propose	_	_
using	_	_
a	_	_
novel	_	_
metric	_	_
,	_	_
known	_	_
as	_	_
distortion	_	_
area	_	_
,	_	_
to	_	_
evaluate	_	_
the	_	_
performance	_	_
of	_	_
precomputing	_	_
the	_	_
supported	_	_
QoS	_	_
.	_	_

#7
We	_	_
then	_	_
analyze	_	_
the	_	_
performance	_	_
of	_	_
the	_	_
class	_	_
of	_	_
algorithms	_	_
that	_	_
approximate	_	_
the	_	_
supported	_	_
QoS	_	_
through	_	_
discretizing	_	_
link	_	_
metrics	_	_
.	_	_

#8
We	_	_
demonstrate	_	_
how	_	_
the	_	_
performance	_	_
of	_	_
these	_	_
schemes	_	_
can	feasibility	_
be	_	_
enhanced	_	_
without	_	_
increasing	_	_
complexity	_	_
.	_	_

#9
Our	_	_
results	_	_
serve	_	_
as	_	_
a	_	_
guideline	_	_
on	_	_
developing	_	_
discretization-based	_	_
approximation	_	_
algorithms	_	_
.	_	_

#10
Introduction	_	_
As	_	_
the	_	_
demand	_	_
for	_	_
deploying	_	_
real-time	_	_
and	_	_
multimedia	_	_
applications	_	_
over	_	_
the	_	_
internet	_	_
is	_	_
increasing	_	_
,	_	_
providing	_	_
guaranteed	_	_
quality-of-service	_	_
(	_	_
QoS	_	_
)	_	_
for	_	_
these	_	_
applications	_	_
becomes	_	_
more	_	_
and	_	_
more	_	_
important	_	_
.	_	_

#11
In	_	_
general	_	_
,	_	_
the	_	_
QoS	_	_
requirements	_	_
can	feasibility	_
be	_	_
divided	_	_
into	_	_
two	_	_
categories	_	_
:	_	_
bottleneck	_	_
metric	_	_
and	_	_
additive	_	_
metric	_	_
.	_	_

#12
The	_	_
additive	_	_
metric	_	_
of	_	_
a	_	_
path	_	_
is	_	_
the	_	_
sum	_	_
of	_	_
the	_	_
metrics	_	_
of	_	_
the	_	_
links	_	_
along	_	_
the	_	_
path	_	_
,	_	_
while	_	_
the	_	_
bottleneck	_	_
metric	_	_
of	_	_
a	_	_
path	_	_
is	_	_
the	_	_
minimum	_	_
value	_	_
of	_	_
the	_	_
metrics	_	_
of	_	_
the	_	_
links	_	_
along	_	_
the	_	_
path	_	_
.	_	_

#14
In	_	_
this	_	_
work	_	_
,	_	_
we	_	_
consider	_	_
connection	_	_
requests	_	_
that	_	_
have	_	_
two	_	_
additive	_	_
QoS	_	_
requirements	_	_
or	_	_
constraints	_	_
,	_	_
such	_	_
as	_	_
in	_	_
delay	_	_
and	_	_
cost	_	_
.	_	_

#15
To	_	_
simplify	_	_
our	_	_
discussion	_	_
,	_	_
we	_	_
assume	_	_
that	_	_
delay	_	_
and	_	_
cost	_	_
are	_	_
the	_	_
two	_	_
additive	_	_
metrics	_	_
under	_	_
consideration	_	_
,	_	_
although	_	_
our	_	_
analysis	_	_
and	_	_
method	_	_
can	capability-feasibility	_
be	_	_
applied	_	_
to	_	_
any	_	_
additive	_	_
metrics	_	_
.	_	_

#16
Many	_	_
existing	_	_
works	_	_
study	_	_
how	_	_
to	_	_
identify	_	_
a	_	_
feasible	_	_
path	_	_
for	_	_
a	_	_
request	_	_
with	_	_
two	_	_
additive	_	_
constraints	_	_
,	_	_
which	_	_
is	_	_
an	_	_
NP-complete	_	_
problem	_	_
.	_	_

#17
These	_	_
works	_	_
usually	_	_
assume	_	_
either	_	_
the	_	_
cost	_	_
or	_	_
the	_	_
delay	_	_
requirement	_	_
which	_	_
is	_	_
known	_	_
.	_	_

#18
Nevertheless	_	_
,	_	_
such	_	_
reactive	_	_
routing	_	_
mechanism	_	_
,	_	_
which	_	_
finds	_	_
a	_	_
path	_	_
after	_	_
the	_	_
requirement	_	_
is	_	_
known	_	_
,	_	_
can	capability	negation
not	_	_
provide	_	_
enough	_	_
information	_	_
to	_	_
support	_	_
efficient	_	_
admission	_	_
control	_	_
.	_	_

#19
When	_	_
a	_	_
request	_	_
is	_	_
received	_	_
,	_	_
a	_	_
node	_	_
can	capability	negation
not	_	_
immediately	_	_
tell	_	_
whether	_	_
a	_	_
possible	_	_
feasible	_	_
path	_	_
exists	_	_
until	_	_
a	_	_
path	_	_
finding	_	_
process	_	_
is	_	_
launched	_	_
based	_	_
on	_	_
the	_	_
requested	_	_
cost/delay	_	_
.	_	_

#20
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
by	_	_
precomputing	_	_
the	_	_
supported	_	_
QoS	_	_
information	_	_
,	_	_
a	_	_
source	_	_
can	capability	_
immediately	_	_
determine	_	_
whether	_	_
the	_	_
connection	_	_
request	_	_
can	capability	_
be	_	_
supported	_	_
by	_	_
the	_	_
network	_	_
.	_	_

#21
Moreover	_	_
,	_	_
accepting	_	_
a	_	_
new	_	_
connection	_	_
will	_	_
not	_	_
violate	_	_
the	_	_
service	_	_
guarantees	_	_
for	_	_
the	_	_
existing	_	_
traffics	_	_
,	_	_
and	_	_
also	_	_
the	_	_
transmission	_	_
route	_	_
satisfies	_	_
the	_	_
QoS	_	_
requirement	_	_
of	_	_
the	_	_
new	_	_
connection	_	_
.	_	_

#34
While	_	_
deviation	_	_
is	_	_
appropriate	_	_
for	_	_
measuring	_	_
the	_	_
performance	_	_
of	_	_
the	_	_
DCLC	_	_
solutions	_	_
,	_	_
we	_	_
believe	_	_
that	_	_
it	_	_
does	_	_
not	_	_
directly	_	_
reflect	_	_
the	_	_
performance	_	_
of	_	_
the	_	_
ACOP	_	_
solutions	_	_
in	_	_
supporting	_	_
admission	_	_
control	_	_
.	_	_

#35
A	_	_
good	_	_
pre-computation	_	_
mechanism	_	_
should	deontic	_
approximate	_	_
the	_	_
supported	_	_
QoS	_	_
as	_	_
precisely	_	_
as	_	_
possible	_	_
.	_	_

#36
In	_	_
other	_	_
words	_	_
,	_	_
the	_	_
error	_	_
in	_	_
estimation	_	_
should	deontic	_
be	_	_
minimized	_	_
.	_	_

#37
Since	_	_
any	_	_
possible	_	_
delay	_	_
constraint	_	_
is	_	_
considered	_	_
,	_	_
this	_	_
"	_	_
error	_	_
"	_	_
is	_	_
not	_	_
a	_	_
single	_	_
cost	_	_
deviation	_	_
,	_	_
but	_	_
an	_	_
area	_	_
on	_	_
the	_	_
Cartesian	_	_
plane	_	_
.	_	_

#40
In	_	_
this	_	_
paper	_	_
,	_	_
we	_	_
write	_	_
the	_	_
QoS	_	_
parameter	_	_
of	_	_
a	_	_
path	_	_
and	_	_
the	_	_
constraints	_	_
of	_	_
a	_	_
request	_	_
as	_	_
(	_	_
cost	_	_
,	_	_
delay	_	_
)	_	_
.	_	_

#41
Request	_	_
(	_	_
c	_	_
,	_	_
d	_	_
)	_	_
can	feasibility	_
be	_	_
supported	_	_
by	_	_
a	_	_
path	_	_
with	_	_
the	_	_
QoS	_	_
parameter	_	_
(	_	_
c′	_	_
,	_	_
d′	_	_
)	_	_
,	_	_
where	_	_
c′≤c	_	_
and	_	_
d′≤d	_	_
.	_	_

#42
Request	_	_
(	_	_
5,5	_	_
)	_	_
is	_	_
feasible	_	_
because	_	_
it	_	_
can	feasibility-options	_
be	_	_
supported	_	_
by	_	_
the	_	_
path	_	_
with	_	_
the	_	_
QoS	_	_
parameter	_	_
(	_	_
2,2	_	_
)	_	_
.	_	_

#43
Request	_	_
(	_	_
1,15	_	_
)	_	_
is	_	_
also	_	_
feasible	_	_
because	_	_
it	_	_
can	feasibility	_
be	_	_
supported	_	_
by	_	_
the	_	_
path	_	_
with	_	_
the	_	_
QoS	_	_
parameter	_	_
(	_	_
1,10	_	_
)	_	_
.	_	_

#44
However	_	_
,	_	_
Request	_	_
(	_	_
1,1	_	_
)	_	_
is	_	_
not	_	_
feasible	_	_
because	_	_
no	_	_
path	_	_
can	capability	negation
support	_	_
it	_	_
.	_	_

#45
If	_	_
we	_	_
plot	_	_
the	_	_
QoS	_	_
parameters	_	_
of	_	_
the	_	_
path	_	_
on	_	_
the	_	_
cost-delay	_	_
plane	_	_
,	_	_
any	_	_
request	_	_
that	_	_
can	feasibility	_
be	_	_
supported	_	_
by	_	_
any	_	_
of	_	_
the	_	_
paths	_	_
can	capability-feasibility	_
be	_	_
easily	_	_
identified	_	_
.	_	_

#46
Refer	_	_
to	_	_
Fig	_	_
.	_	_
1	_	_
(	_	_
a	_	_
)	_	_
,	_	_
the	_	_
shaded	_	_
area	_	_
is	_	_
the	_	_
optimal	_	_
supported	_	_
QoS	_	_
,	_	_
in	_	_
which	_	_
any	_	_
request	_	_
that	_	_
falls	_	_
in	_	_
the	_	_
region	_	_
is	_	_
feasible	_	_
.	_	_

#47
Thus	_	_
,	_	_
a	_	_
good	_	_
pre-computation	_	_
scheme	_	_
should	deontic	_
approximate	_	_
this	_	_
area	_	_
as	_	_
precisely	_	_
as	_	_
possible	_	_
.	_	_

#48
The	_	_
"	_	_
error	_	_
"	_	_
in	_	_
approximation	_	_
is	_	_
the	_	_
difference	_	_
in	_	_
terms	_	_
of	_	_
the	_	_
area	_	_
between	_	_
the	_	_
region	_	_
of	_	_
the	_	_
optimal	_	_
supported	_	_
QoS	_	_
and	_	_
that	_	_
of	_	_
the	_	_
approximated	_	_
supported	_	_
QoS	_	_
.	_	_

#54
Any	_	_
request	_	_
with	_	_
the	_	_
QoS	_	_
requirements	_	_
falling	_	_
in	_	_
this	_	_
area	_	_
is	_	_
considered	_	_
as	_	_
infeasible	_	_
but	_	_
actually	_	_
they	_	_
are	_	_
supported	_	_
by	_	_
the	_	_
network	_	_
.	_	_

#55
For	_	_
example	_	_
,	_	_
Request	_	_
(	_	_
2,5	_	_
)	_	_
is	_	_
in	_	_
fact	_	_
feasible	_	_
but	_	_
can	feasibility-options	_
be	_	_
rejected	_	_
by	_	_
any	_	_
approximation	_	_
algorithms	_	_
based	_	_
on	_	_
the	_	_
approximate	_	_
QoS	_	_
in	_	_
Fig	_	_
.	_	_
1	_	_
(	_	_
b	_	_
)	_	_
.	_	_

#56
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
in	_	_
Fig	_	_
.	_	_
1	_	_
(	_	_
d	_	_
)	_	_
,	_	_
the	_	_
cost	_	_
deviation	_	_
with	_	_
the	_	_
delay	_	_
constraint	_	_
of	_	_
two	_	_
is	_	_
also	_	_
one	_	_
.	_	_

#57
However	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
observe	_	_
that	_	_
the	_	_
"	_	_
error	_	_
"	_	_
in	_	_
Fig	_	_
.	_	_
1	_	_
(	_	_
d	_	_
)	_	_
is	_	_
much	_	_
smaller	_	_
than	_	_
that	_	_
in	_	_
Fig	_	_
.	_	_
1	_	_
(	_	_
b	_	_
)	_	_
.	_	_

#58
Request	_	_
(	_	_
2,5	_	_
)	_	_
would	_	_
be	_	_
correctly	_	_
classified	_	_
as	_	_
feasible	_	_
.	_	_

#59
Thus	_	_
,	_	_
the	_	_
approximate	_	_
supported	_	_
QoS	_	_
in	_	_
Fig	_	_
.	_	_
1	_	_
(	_	_
d	_	_
)	_	_
provides	_	_
a	_	_
better	_	_
network	_	_
QoS	_	_
providence	_	_
than	_	_
that	_	_
in	_	_
Fig	_	_
.	_	_
1	_	_
(	_	_
b	_	_
)	_	_
.	_	_

#60
The	_	_
above	_	_
example	_	_
illustrates	_	_
that	_	_
cost	_	_
deviation	_	_
can	capability	negation
not	_	_
sufficiently	_	_
reflect	_	_
the	_	_
admission	_	_
control	_	_
ability	_	_
of	_	_
the	_	_
algorithm	_	_
,	_	_
while	_	_
the	_	_
"	_	_
area	_	_
"	_	_
does	_	_
.	_	_

#61
In	_	_
this	_	_
work	_	_
,	_	_
we	_	_
propose	_	_
a	_	_
new	_	_
metric	_	_
,	_	_
known	_	_
as	_	_
distortion	_	_
area	_	_
,	_	_
which	_	_
is	_	_
defined	_	_
as	_	_
the	_	_
difference	_	_
between	_	_
the	_	_
approximate	_	_
supported	_	_
QoS	_	_
region	_	_
and	_	_
the	_	_
optimal	_	_
supported	_	_
QoS	_	_
region	_	_
,	_	_
to	_	_
evaluate	_	_
the	_	_
accuracy	_	_
performance	_	_
of	_	_
the	_	_
algorithm	_	_
for	_	_
estimating	_	_
the	_	_
supported	_	_
QoS	_	_
.	_	_

#70
The	_	_
smaller	_	_
ε	_	_
,	_	_
the	_	_
higher	_	_
accuracy	_	_
but	_	_
the	_	_
higher	_	_
computational	_	_
overhead	_	_
.	_	_

#71
Chen	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2008	_	_
)	_	_
design	_	_
heuristic	_	_
techniques	_	_
to	_	_
improve	_	_
the	_	_
performance	_	_
computational	_	_
overhead	_	_
of	_	_
the	_	_
algorithm	_	_
in	_	_
Goel	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2001	_	_
)	_	_
.As	_	_
we	_	_
know	_	_
,	_	_
heuristic	_	_
algorithm	_	_
can	capability	negation
not	_	_
provide	_	_
performance	_	_
guarantees	_	_
and	_	_
the	_	_
introduced	_	_
approximation	_	_
error	_	_
is	_	_
difficult	_	_
to	_	_
be	_	_
bounded	_	_
.	_	_

#72
Xue	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2008	_	_
)	_	_
study	_	_
the	_	_
decision	_	_
version	_	_
of	_	_
the	_	_
problem	_	_
.	_	_

#77
Lu	_	_
and	_	_
Zhu	_	_
(	_	_
2013	_	_
)	_	_
present	_	_
a	_	_
genetic	_	_
algorithm	_	_
to	_	_
find	_	_
a	_	_
path	_	_
satisfying	_	_
a	_	_
connection	_	_
request	_	_
with	_	_
two	_	_
additive	_	_
constraints	_	_
.	_	_

#78
With	_	_
the	_	_
supported	_	_
QoS	_	_
region	_	_
,	_	_
the	_	_
decision	_	_
can	feasibility	_
be	_	_
made	_	_
immediately	_	_
based	_	_
on	_	_
the	_	_
QoS	_	_
requirements	_	_
.	_	_

#79
In	_	_
fact	_	_
,	_	_
the	_	_
common	_	_
technique	_	_
used	_	_
for	_	_
designing	_	_
approximation	_	_
algorithms	_	_
(	_	_
for	_	_
solving	_	_
both	_	_
RSP	_	_
and	_	_
MCP	_	_
)	_	_
is	_	_
to	_	_
map	_	_
the	_	_
cost	_	_
(	_	_
or	_	_
delay	_	_
)	_	_
value	_	_
of	_	_
each	_	_
link	_	_
to	_	_
an	_	_
integer	_	_
.	_	_

#83
Moreover	_	_
,	_	_
there	_	_
is	_	_
another	_	_
quantization	_	_
method	_	_
called	_	_
logarithmic	_	_
scaling	_	_
(	_	_
Orda	_	_
and	_	_
Sprintson	_	_
,	_	_
2003	_	_
)	_	_
,	_	_
and	_	_
we	_	_
shall	_	_
describe	_	_
it	_	_
in	_	_
more	_	_
detail	_	_
later	_	_
.	_	_

#84
After	_	_
quantizing	_	_
the	_	_
link	_	_
costs	_	_
(	_	_
delays	_	_
)	_	_
,	_	_
we	_	_
can	feasibility	_
apply	_	_
the	_	_
approximation	_	_
algorithm	_	_
to	_	_
solve	_	_
RSP	_	_
for	_	_
each	_	_
possible	_	_
cost	_	_
(	_	_
or	_	_
delay	_	_
)	_	_
constraint	_	_
to	_	_
get	_	_
the	_	_
ACOP	_	_
solution	_	_
(	_	_
Orda	_	_
and	_	_
Sprintson	_	_
,	_	_
2003	_	_
)	_	_
.	_	_

#85
Unfortunately	_	_
,	_	_
the	_	_
complexity	_	_
will	_	_
be	_	_
very	_	_
high	_	_
,	_	_
and	_	_
thus	_	_
the	_	_
authors	_	_
in	_	_
Orda	_	_
and	_	_
Sprintson	_	_
(	_	_
2003	_	_
)	_	_
developed	_	_
a	_	_
less	_	_
computationally	_	_
expensive	_	_
approximation	_	_
algorithm	_	_
.	_	_

#87
In	_	_
this	_	_
paper	_	_
,	_	_
we	_	_
shall	_	_
analyze	_	_
the	_	_
upper	_	_
bound	_	_
of	_	_
the	_	_
distortion	_	_
area	_	_
produced	_	_
by	_	_
the	_	_
approximation	_	_
algorithm	_	_
in	_	_
Orda	_	_
and	_	_
Sprintson	_	_
(	_	_
2003	_	_
)	_	_
.	_	_

#88
Nevertheless	_	_
,	_	_
the	_	_
analysis	_	_
can	feasibility	_
be	_	_
generalized	_	_
for	_	_
other	_	_
approximation	_	_
algorithms	_	_
based	_	_
on	_	_
link	_	_
metric	_	_
quantization	_	_
.	_	_

#89
Cui	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2003	_	_
,	_	_
2005	_	_
)	_	_
also	_	_
study	_	_
the	_	_
problem	_	_
of	_	_
precomputing	_	_
the	_	_
supported	_	_
QoS	_	_
.	_	_

#105
For	_	_
the	_	_
given	_	_
path	_	_
P1=A→B→E→G	_	_
,	_	_
the	_	_
corresponding	_	_
optimal	_	_
delay	_	_
function	_	_
is	_	_
DP1opt	_	_
(	_	_
c	_	_
)	_	_
=∞	_	_
(	_	_
ifc	_	_
<	_	_
8	_	_
)	_	_
or4	_	_
(	_	_
ifc≥8	_	_
)	_	_
.	_	_

#106
We	_	_
can	feasibility-rhetorical	_
compute	_	_
the	_	_
optimal	_	_
delay	_	_
function	_	_
DA	_	_
,	_	_
Gopt	_	_
(	_	_
c	_	_
)	_	_
from	_	_
A	_	_
to	_	_
G	_	_
based	_	_
on	_	_
minP∈PA→G	_	_
{	_	_
DPopt	_	_
(	_	_
c	_	_
)	_	_
}	_	_
,	_	_
which	_	_
is	_	_
DA	_	_
,	_	_
Gopt	_	_
(	_	_
c	_	_
)	_	_
=	_	_
{	_	_
4ifc≥85if7≤c	_	_
<	_	_
86if5≤c	_	_
<	_	_
77if4≤c	_	_
<	_	_
5∞ifc	_	_
<	_	_
4	_	_
As	_	_
illustrated	_	_
in	_	_
Fig	_	_
.	_	_
2	_	_
(	_	_
b	_	_
)	_	_
,	_	_
DA	_	_
,	_	_
Gopt	_	_
(	_	_
c	_	_
)	_	_
is	_	_
a	_	_
staircase	_	_
on	_	_
the	_	_
cost-delay	_	_
plane	_	_
,	_	_
which	_	_
is	_	_
also	_	_
called	_	_
the	_	_
efficient	_	_
frontier	_	_
in	_	_
Bauer	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2000	_	_
)	_	_
.	_	_

#107
We	_	_
would	_	_
like	_	_
to	_	_
introduce	_	_
several	_	_
definitions.Definition	_	_
1	_	_
A	_	_
point	_	_
(	_	_
x	_	_
,	_	_
y	_	_
)	_	_
is	_	_
more	_	_
representative	_	_
than	_	_
another	_	_
point	_	_
(	_	_
x′	_	_
,	_	_
y′	_	_
)	_	_
,	_	_
denoted	_	_
by	_	_
(	_	_
x	_	_
,	_	_
y	_	_
)	_	_
≺	_	_
(	_	_
x′	_	_
,	_	_
y′	_	_
)	_	_
,	_	_
if	_	_
x≠x′	_	_
or	_	_
y≠y′	_	_
,	_	_
moreover	_	_
,	_	_
x≤x′	_	_
and	_	_
y≤y′	_	_
.	_	_

#114
Definition	_	_
3	_	_
was	_	_
also	_	_
described	_	_
in	_	_
Bauer	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2000	_	_
)	_	_
and	_	_
Cui	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2003	_	_
,	_	_
2005	_	_
)	_	_
.	_	_

#115
Any	_	_
request	_	_
that	_	_
falls	_	_
in	_	_
the	_	_
feasible	_	_
area	_	_
must	deontic	_
be	_	_
supported	_	_
by	_	_
at	_	_
least	_	_
one	_	_
path	_	_
.	_	_

#116
We	_	_
call	_	_
this	_	_
request	_	_
a	_	_
feasible	_	_
request	_	_
.	_	_

#117
The	_	_
problem	_	_
of	_	_
precomputing	_	_
the	_	_
supported	_	_
QoS	_	_
aims	_	_
at	_	_
finding	_	_
the	_	_
feasible	_	_
area	_	_
Afeasibleopt	_	_
so	_	_
that	_	_
a	_	_
routing	_	_
table	_	_
can	capability	_
tell	_	_
whether	_	_
a	_	_
request	_	_
is	_	_
feasible	_	_
upon	_	_
a	_	_
request	_	_
arrives	_	_
.	_	_

#118
This	_	_
problem	_	_
is	_	_
NP-complete	_	_
.	_	_

#119
The	_	_
feasible	_	_
area	_	_
can	feasibility	_
be	_	_
uniquely	_	_
defined	_	_
by	_	_
the	_	_
set	_	_
of	_	_
the	_	_
optimal	_	_
representative	_	_
points	_	_
PFopt	_	_
.	_	_

#120
In	_	_
Fig	_	_
.	_	_
2	_	_
(	_	_
b	_	_
)	_	_
,	_	_
the	_	_
shaded	_	_
area	_	_
is	_	_
the	_	_
feasible	_	_
area	_	_
which	_	_
is	_	_
on	_	_
the	_	_
upper	_	_
right	_	_
hand	_	_
side	_	_
of	_	_
the	_	_
efficient	_	_
frontier	_	_
.	_	_

#121
For	_	_
instance	_	_
,	_	_
Request	_	_
(	_	_
10,6	_	_
)	_	_
falls	_	_
in	_	_
the	_	_
shaded	_	_
area	_	_
.	_	_

#122
The	_	_
paths	_	_
(	_	_
8,4	_	_
)	_	_
and	_	_
(	_	_
7,5	_	_
)	_	_
can	capability	_
serve	_	_
this	_	_
request	_	_
.	_	_

#123
Thus	_	_
,	_	_
this	_	_
request	_	_
is	_	_
a	_	_
feasible	_	_
request	_	_
.	_	_

#136
The	_	_
distortion	_	_
area	_	_
caused	_	_
by	_	_
the	_	_
approximation	_	_
algorithm	_	_
is	_	_
0.04	_	_
.	_	_

#137
If	_	_
we	_	_
assume	_	_
that	_	_
the	_	_
requirements	_	_
of	_	_
the	_	_
connection	_	_
request	_	_
are	_	_
uniformly	_	_
distributed	_	_
in	_	_
the	_	_
supported	_	_
QoS	_	_
region	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
consider	_	_
that	_	_
almost	_	_
10	_	_
%	_	_
of	_	_
all	_	_
the	_	_
requests	_	_
would	_	_
be	_	_
rejected	_	_
by	_	_
the	_	_
approximation	_	_
algorithm	_	_
,	_	_
while	_	_
these	_	_
requests	_	_
actually	_	_
can	capability	_
be	_	_
supported	_	_
by	_	_
the	_	_
network	_	_
.	_	_

#138
In	_	_
the	_	_
following	_	_
,	_	_
we	_	_
would	_	_
give	_	_
the	_	_
upper	_	_
bound	_	_
of	_	_
the	_	_
distortion	_	_
area	_	_
introduced	_	_
by	_	_
different	_	_
algorithms	_	_
.	_	_

#140
The	_	_
first	_	_
representative	_	_
point	_	_
rc=	_	_
(	_	_
Lc	_	_
,	_	_
Ud	_	_
)	_	_
corresponds	_	_
to	_	_
the	_	_
minimum	_	_
cost	_	_
path	_	_
,	_	_
and	_	_
the	_	_
last	_	_
representative	_	_
point	_	_
rd=	_	_
(	_	_
Uc	_	_
,	_	_
Ld	_	_
)	_	_
corresponds	_	_
to	_	_
the	_	_
minimum	_	_
delay	_	_
path	_	_
.	_	_

#141
All	_	_
other	_	_
representative	_	_
points	_	_
must	deontic	_
have	_	_
a	_	_
cost	_	_
falling	_	_
between	_	_
Lc	_	_
and	_	_
Uc	_	_
,	_	_
and	_	_
a	_	_
delay	_	_
falling	_	_
between	_	_
Ld	_	_
and	_	_
Ud	_	_
(	_	_
Bauer	_	_
et	_	_
al.	_	_
,	_	_
2000	_	_
)	_	_
.	_	_

#142
If	_	_
we	_	_
obtain	_	_
all	_	_
the	_	_
representative	_	_
points	_	_
,	_	_
we	_	_
can	feasibility	_
derive	_	_
the	_	_
optimal	_	_
delay	_	_
function	_	_
Ds	_	_
,	_	_
gopt	_	_
(	_	_
c	_	_
)	_	_
,	_	_
and	_	_
vice	_	_
versa	_	_
.	_	_

#143
For	_	_
example	_	_
,	_	_
in	_	_
Fig	_	_
.	_	_
2	_	_
(	_	_
b	_	_
)	_	_
,	_	_
the	_	_
QoS	_	_
parameter	_	_
of	_	_
the	_	_
minimum	_	_
cost	_	_
path	_	_
is	_	_
(	_	_
4,7	_	_
)	_	_
,	_	_
and	_	_
the	_	_
QoS	_	_
parameter	_	_
of	_	_
the	_	_
minimum	_	_
delay	_	_
path	_	_
is	_	_
(	_	_
8,4	_	_
)	_	_
.	_	_

#146
For	_	_
the	_	_
ease	_	_
of	_	_
the	_	_
subsequent	_	_
discussion	_	_
,	_	_
we	_	_
assume	_	_
that	_	_
Uc	_	_
and	_	_
Ud	_	_
are	_	_
the	_	_
same	_	_
,	_	_
denoted	_	_
by	_	_
UB	_	_
,	_	_
and	_	_
Lc	_	_
and	_	_
Ld	_	_
are	_	_
the	_	_
same	_	_
,	_	_
denoted	_	_
by	_	_
LB=1	_	_
.	_	_

#147
Exact	_	_
algorithm	_	_
Similar	_	_
to	_	_
Hassin	_	_
(	_	_
1992	_	_
)	_	_
and	_	_
Orda	_	_
and	_	_
Sprintson	_	_
(	_	_
2003	_	_
)	_	_
,	_	_
we	_	_
assume	_	_
that	_	_
,	_	_
for	_	_
simplicity	_	_
,	_	_
network	_	_
can	capability-feasibility	_
be	_	_
represented	_	_
by	_	_
a	_	_
directed	_	_
acyclic	_	_
graph	_	_
(	_	_
DAG	_	_
)	_	_
.	_	_

#148
The	_	_
extension	_	_
of	_	_
the	_	_
algorithm	_	_
for	_	_
a	_	_
general	_	_
graph	_	_
is	_	_
straightforward	_	_
.	_	_

#149
In	_	_
DAG	_	_
,	_	_
the	_	_
network	_	_
nodes	_	_
are	_	_
numbered	_	_
in	_	_
a	_	_
way	_	_
such	_	_
that	_	_
(	_	_
i	_	_
,	_	_
j	_	_
)	_	_
∈E	_	_
implies	_	_
i	_	_
<	_	_
j	_	_
.	_	_

#150
If	_	_
the	_	_
cost	_	_
metric	_	_
of	_	_
each	_	_
link	_	_
is	_	_
an	_	_
integer	_	_
,	_	_
we	_	_
can	feasibility	_
develop	_	_
a	_	_
pseudo-polynomial	_	_
algorithm	_	_
for	_	_
computing	_	_
the	_	_
supported	_	_
QoS	_	_
as	_	_
follows	_	_
:	_	_
(	_	_
1	_	_
)	_	_
Dg	_	_
,	_	_
g	_	_
(	_	_
c	_	_
)	_	_
←0	_	_
,	_	_
c≥0	_	_
;	_	_
Di	_	_
,	_	_
g	_	_
(	_	_
c	_	_
)	_	_
←∞	_	_
,	_	_
c≥0	_	_
,	_	_
i∈Vâ§¹	_	_
{	_	_
g	_	_
}	_	_
;	_	_
Di	_	_
,	_	_
g	_	_
(	_	_
c	_	_
)	_	_
=mink∈A	_	_
(	_	_
i	_	_
)	_	_
{	_	_
Dk	_	_
,	_	_
g	_	_
(	_	_
c-c	_	_
(	_	_
i	_	_
,	_	_
k	_	_
)	_	_
)	_	_
+d	_	_
(	_	_
i	_	_
,	_	_
k	_	_
)	_	_
,	_	_
Di	_	_
,	_	_
g	_	_
(	_	_
c-1	_	_
)	_	_
}	_	_
c=0,1,2,3	_	_
,	_	_
…	_	_
,	_	_
UB	_	_
,	_	_
i∈V	_	_
.	_	_

#151
Orda	_	_
and	_	_
Sprintson	_	_
(	_	_
2003	_	_
)	_	_
and	_	_
Hassin	_	_
(	_	_
1992	_	_
)	_	_
give	_	_
the	_	_
pseudo-polynomial	_	_
algorithm	_	_
description	_	_
as	_	_
the	_	_
same	_	_
as	_	_
(	_	_
1	_	_
)	_	_
.	_	_

#155
In	_	_
the	_	_
first	_	_
step	_	_
,	_	_
each	_	_
neighbor	_	_
u	_	_
of	_	_
g	_	_
sets	_	_
Du	_	_
,	_	_
g	_	_
(	_	_
c	_	_
)	_	_
to	_	_
be	_	_
du	_	_
,	_	_
g	_	_
,	_	_
where	_	_
c=cu	_	_
,	_	_
g	_	_
,	_	_
cu	_	_
,	_	_
g+1	_	_
,	_	_
…	_	_
,	_	_
UB	_	_
.	_	_

#156
In	_	_
step	_	_
k	_	_
,	_	_
we	_	_
update	_	_
{	_	_
Di	_	_
,	_	_
g	_	_
(	_	_
c	_	_
)	_	_
,	_	_
c≥0	_	_
}	_	_
for	_	_
those	_	_
nodes	_	_
i	_	_
that	_	_
can	options	_
be	_	_
k	_	_
hops	_	_
away	_	_
from	_	_
g.	_	_
After	_	_
|V|-1	_	_
steps	_	_
,	_	_
the	_	_
algorithm	_	_
terminates	_	_
since	_	_
no	_	_
path	_	_
can	capability	negation
have	_	_
more	_	_
than	_	_
(	_	_
|V|-1	_	_
)	_	_
hops	_	_
.	_	_

#157
As	_	_
referred	_	_
to	_	_
Orda	_	_
and	_	_
Sprintson	_	_
(	_	_
2003	_	_
)	_	_
,	_	_
the	_	_
computational	_	_
complexity	_	_
of	_	_
this	_	_
pseudo-polynomial	_	_
algorithm	_	_
is	_	_
O	_	_
(	_	_
|E|UB	_	_
)	_	_
.	_	_

#162
For	_	_
instance	_	_
,	_	_
if	_	_
the	_	_
cost	_	_
value	_	_
of	_	_
a	_	_
link	_	_
cl	_	_
falls	_	_
between	_	_
sj	_	_
and	_	_
sj+1	_	_
,	_	_
where	_	_
j=1	_	_
,	_	_
…	_	_
,	_	_
n-1	_	_
,	_	_
we	_	_
assume	_	_
cl≈sj+1	_	_
.	_	_

#163
Hence	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
use	_	_
(	_	_
1	_	_
)	_	_
to	_	_
compute	_	_
the	_	_
delay	_	_
function	_	_
at	_	_
the	_	_
samples	_	_
.	_	_

#164
We	_	_
thus	_	_
can	feasibility-rhetorical	_
obtain	_	_
the	_	_
approximated	_	_
representative	_	_
points	_	_
based	_	_
on	_	_
the	_	_
quantized	_	_
cost	_	_
values	_	_
.	_	_

#165
We	_	_
call	_	_
this	_	_
method	_	_
the	_	_
quantization-based	_	_
approximation	_	_
method	_	_
.	_	_

#166
As	_	_
mentioned	_	_
in	_	_
Section	_	_
2	_	_
,	_	_
the	_	_
existing	_	_
approximation	_	_
algorithms	_	_
generally	_	_
apply	_	_
this	_	_
quantization	_	_
method	_	_
to	_	_
solve	_	_
the	_	_
NP-complete	_	_
problem	_	_
.	_	_

#167
Different	_	_
algorithms	_	_
can	options	_
indeed	_	_
apply	_	_
different	_	_
quantization	_	_
methods	_	_
(	_	_
Orda	_	_
and	_	_
Sprintson	_	_
,	_	_
2003	_	_
;	_	_
Hassin	_	_
,	_	_
1992	_	_
;	_	_
Lorenz	_	_
and	_	_
Raz	_	_
,	_	_
2001	_	_
;	_	_
Goel	_	_
et	_	_
al.	_	_
,	_	_
2001	_	_
;	_	_
Chen	_	_
et	_	_
al.	_	_
,	_	_
2008	_	_
;	_	_
Sahni	_	_
,	_	_
1977	_	_
;	_	_
Xue	_	_
et	_	_
al.	_	_
,	_	_
2007	_	_
)	_	_
.	_	_

#168
Most	_	_
of	_	_
them	_	_
apply	_	_
uniform	_	_
scaling	_	_
,	_	_
and	_	_
the	_	_
work	_	_
in	_	_
Orda	_	_
and	_	_
Sprintson	_	_
(	_	_
2003	_	_
)	_	_
applies	_	_
logarithmic	_	_
scaling	_	_
.	_	_

#170
δ	_	_
is	_	_
the	_	_
scaling	_	_
parameter	_	_
.	_	_

#171
Different	_	_
methods	_	_
may	options	_
select	_	_
different	_	_
values	_	_
for	_	_
δ.	_	_
We	_	_
shall	_	_
discuss	_	_
how	_	_
to	_	_
calculate	_	_
the	_	_
distortion	_	_
area	_	_
produced	_	_
by	_	_
uniform	_	_
scaling	_	_
with	_	_
the	_	_
given	_	_
scaling	_	_
parameter	_	_
δ.	_	_
In	_	_
logarithmic	_	_
scaling	_	_
,	_	_
the	_	_
cost	_	_
metric	_	_
of	_	_
each	_	_
path	_	_
is	_	_
selected	_	_
from	_	_
{	_	_
1	_	_
,	_	_
(	_	_
1+δ	_	_
)	_	_
,	_	_
(	_	_
1+δ	_	_
)	_	_
2	_	_
,	_	_
…	_	_
,	_	_
(	_	_
1+δ	_	_
)	_	_
n	_	_
,	_	_
UB	_	_
}	_	_
,	_	_
where	_	_
n=max	_	_
{	_	_
j|	_	_
(	_	_
(	_	_
1+δ	_	_
)	_	_
j	_	_
<	_	_
UB	_	_
)	_	_
(	_	_
j∈Z+	_	_
)	_	_
}	_	_
.	_	_

#172
Consider	_	_
the	_	_
optimal	_	_
delay	_	_
function	_	_
Ds	_	_
,	_	_
gopt	_	_
(	_	_
c	_	_
)	_	_
as	_	_
depicted	_	_
in	_	_
Fig	_	_
.	_	_
3	_	_
.	_	_

#178
The	_	_
resulting	_	_
approximated	_	_
delay	_	_
function	_	_
is	_	_
exhibited	_	_
in	_	_
Fig	_	_
.	_	_
4	_	_
(	_	_
a	_	_
)	_	_
.	_	_

#179
It	_	_
can	feasibility-rhetorical	_
be	_	_
observed	_	_
that	_	_
different	_	_
scaling	_	_
schemes	_	_
lead	_	_
to	_	_
different	_	_
approximated	_	_
delay	_	_
functions	_	_
.	_	_

#180
Define	_	_
Ds	_	_
,	_	_
g	_	_
(	_	_
c	_	_
)	_	_
(	_	_
without	_	_
the	_	_
opt	_	_
superscript	_	_
)	_	_
as	_	_
the	_	_
approximated	_	_
delay	_	_
function	_	_
.	_	_

#186
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
in	_	_
(	_	_
2	_	_
)	_	_
,	_	_
the	_	_
cost	_	_
value	_	_
is	_	_
selected	_	_
from	_	_
a	_	_
set	_	_
of	_	_
real	_	_
numbers	_	_
.	_	_

#187
We	_	_
compute	_	_
the	_	_
minimum	_	_
delay	_	_
values	_	_
at	_	_
the	_	_
discrete	_	_
cost	_	_
values	_	_
,	_	_
which	_	_
may	deontic-options	negation
not	_	_
necessarily	_	_
be	_	_
integers	_	_
.	_	_

#188
By	_	_
applying	_	_
the	_	_
quantization	_	_
method	_	_
,	_	_
the	_	_
representative	_	_
points	_	_
in	_	_
Ds	_	_
,	_	_
g	_	_
(	_	_
c	_	_
)	_	_
must	deontic	_
be	_	_
at	_	_
the	_	_
selected	_	_
cost	_	_
values	_	_
.	_	_

#189
The	_	_
pseudo-code	_	_
of	_	_
the	_	_
approximation	_	_
algorithm	_	_
can	feasibility-rhetorical	_
be	_	_
referred	_	_
to	_	_
http	_	_
:	_	_
//www.eee.hku.hk/research/technical_reports.htm	_	_
.	_	_

#190
As	_	_
we	_	_
only	_	_
consider	_	_
a	_	_
limited	_	_
number	_	_
of	_	_
the	_	_
cost	_	_
values	_	_
,	_	_
some	_	_
representative	_	_
points	_	_
may	options	_
be	_	_
missed	_	_
out	_	_
under	_	_
the	_	_
estimation	_	_
.	_	_

#191
A	_	_
drop	_	_
in	_	_
the	_	_
minimum	_	_
delay	_	_
may	options	_
happen	_	_
at	_	_
a	_	_
later	_	_
quantized	_	_
cost	_	_
value	_	_
.	_	_

#192
For	_	_
example	_	_
,	_	_
the	_	_
representative	_	_
point	_	_
(	_	_
1.5,1.6	_	_
)	_	_
appears	_	_
in	_	_
Fig	_	_
.	_	_
3	_	_
but	_	_
not	_	_
in	_	_
Fig	_	_
.	_	_
5	_	_
(	_	_
a	_	_
)	_	_
.	_	_

#193
Besides	_	_
,	_	_
the	_	_
optimal	_	_
delay	_	_
function	_	_
in	_	_
Fig	_	_
.	_	_
3	_	_
drops	_	_
to	_	_
1.3	_	_
at	_	_
cost	_	_
1.7	_	_
but	_	_
the	_	_
drop	_	_
occurs	_	_
at	_	_
1.8	_	_
in	_	_
Fig	_	_
.	_	_
4	_	_
(	_	_
a	_	_
)	_	_
.	_	_

#194
In	_	_
other	_	_
words	_	_
,	_	_
the	_	_
scaling	_	_
method	_	_
can	capability-options	_
overestimate	_	_
the	_	_
delay	_	_
at	_	_
some	_	_
costs	_	_
.	_	_

#195
The	_	_
following	_	_
lemma	_	_
describes	_	_
this	_	_
phenomena.Lemma	_	_
1	_	_
For	_	_
any	_	_
c	_	_
>	_	_
0	_	_
,	_	_
if	_	_
Ds	_	_
,	_	_
g	_	_
(	_	_
c	_	_
)	_	_
<	_	_
∞	_	_
,	_	_
Ds	_	_
,	_	_
g	_	_
(	_	_
c	_	_
)	_	_
≥Ds	_	_
,	_	_
gopt	_	_
(	_	_
c	_	_
)	_	_
.	_	_

#209
As	_	_
mentioned	_	_
in	_	_
Section	_	_
1	_	_
,	_	_
the	_	_
distortion	_	_
area	_	_
is	_	_
defined	_	_
as	_	_
Aerror=Afeasibleoptâ§¹Afeasible	_	_
.	_	_

#210
Although	_	_
Afeasibleopt	_	_
and	_	_
Afeasible	_	_
are	_	_
both	_	_
infinite	_	_
,	_	_
Aerror	_	_
must	deontic	_
be	_	_
finite	_	_
since	_	_
both	_	_
Afeasibleopt	_	_
and	_	_
Afeasible	_	_
contain	_	_
the	_	_
bounded	_	_
minimum	_	_
cost	_	_
and	_	_
minimum	_	_
delay	_	_
representative	_	_
points	_	_
.	_	_

#211
As	_	_
discussed	_	_
in	_	_
Section	_	_
1	_	_
,	_	_
the	_	_
distortion	_	_
area	_	_
reflects	_	_
the	_	_
admission	_	_
control	_	_
performance	_	_
of	_	_
the	_	_
network	_	_
.	_	_

#219
The	_	_
work	_	_
in	_	_
Orda	_	_
and	_	_
Sprintson	_	_
(	_	_
2003	_	_
)	_	_
also	_	_
shows	_	_
that	_	_
the	_	_
cost-deviation	_	_
at	_	_
cost	_	_
value	_	_
c0	_	_
is	_	_
no	_	_
more	_	_
than	_	_
(	_	_
(	_	_
1+δ	_	_
)	_	_
H-1	_	_
)	_	_
c0	_	_
by	_	_
using	_	_
logarithmic	_	_
scaling	_	_
.	_	_

#220
Since	_	_
Afeasible⊆Afeasibleopt	_	_
,	_	_
the	_	_
cost	_	_
deviation	_	_
at	_	_
any	_	_
cost	_	_
value	_	_
can	capability	negation
not	_	_
be	_	_
negative	_	_
by	_	_
using	_	_
any	_	_
kind	_	_
of	_	_
quantization	_	_
method	_	_
.	_	_

#221
Generally	_	_
,	_	_
denote	_	_
Cmax	_	_
as	_	_
the	_	_
maximum	_	_
cost-deviation	_	_
at	_	_
all	_	_
the	_	_
cost	_	_
values	_	_
.	_	_

#224
Note	_	_
that	_	_
the	_	_
first	_	_
and	_	_
the	_	_
last	_	_
representative	_	_
points	_	_
of	_	_
PFopt	_	_
and	_	_
PF	_	_
are	_	_
the	_	_
same	_	_
because	_	_
these	_	_
two	_	_
points	_	_
are	_	_
the	_	_
minimum	_	_
cost	_	_
and	_	_
minimum	_	_
delay	_	_
representative	_	_
points	_	_
,	_	_
respectively	_	_
.	_	_

#225
They	_	_
can	feasibility	_
be	_	_
easily	_	_
found	_	_
out	_	_
by	_	_
Dijkstra	_	_
's	_	_
algorithm	_	_
.	_	_

#226
We	_	_
first	_	_
study	_	_
how	_	_
to	_	_
calculate	_	_
the	_	_
distortion	_	_
area	_	_
between	_	_
the	_	_
delay	_	_
values	_	_
of	_	_
two	_	_
consecutive	_	_
representative	_	_
points	_	_
ri	_	_
and	_	_
ri-1	_	_
in	_	_
PFopt	_	_
.	_	_

#231
This	_	_
means	_	_
that	_	_
all	_	_
these	_	_
representative	_	_
points	_	_
are	_	_
located	_	_
in	_	_
the	_	_
area	_	_
[	_	_
ri·c	_	_
,	_	_
ri·c+CD	_	_
(	_	_
ri·c	_	_
)	_	_
]	_	_
×	_	_
(	_	_
ri·d	_	_
,	_	_
ri-1·d	_	_
]	_	_
.	_	_

#232
By	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
CD	_	_
(	_	_
r1·c	_	_
)	_	_
=r3′·c	_	_
,	_	_
and	_	_
we	_	_
can	feasibility-rhetorical	_
observe	_	_
that	_	_
both	_	_
points	_	_
r1′	_	_
and	_	_
r2′	_	_
are	_	_
located	_	_
in	_	_
the	_	_
area	_	_
(	_	_
r1·d	_	_
,	_	_
rc·d	_	_
]	_	_
×	_	_
[	_	_
r1·c	_	_
,	_	_
r1·c+CD	_	_
(	_	_
r1·c	_	_
)	_	_
]	_	_
.	_	_

#233
Therefore	_	_
,	_	_
the	_	_
distortion	_	_
area	_	_
between	_	_
the	_	_
delay	_	_
values	_	_
of	_	_
ri·d	_	_
and	_	_
ri-1·d	_	_
is	_	_
no	_	_
more	_	_
than	_	_
(	_	_
ri-1·d-ri·d	_	_
)	_	_
·CD	_	_
(	_	_
ri·c	_	_
)	_	_
.	_	_

#239
Finally	_	_
,	_	_
we	_	_
consider	_	_
both	_	_
quantization	_	_
schemes	_	_
,	_	_
namely	_	_
,	_	_
uniform	_	_
scaling	_	_
and	_	_
logarithmic	_	_
scaling	_	_
,	_	_
and	_	_
compare	_	_
the	_	_
error	_	_
of	_	_
two-dimensional	_	_
scaling	_	_
with	_	_
that	_	_
of	_	_
the	_	_
existing	_	_
quantization-based	_	_
algorithms	_	_
.	_	_

#240
Two-dimensional	_	_
scaling	_	_
In	_	_
the	_	_
existing	_	_
approximation	_	_
algorithms	_	_
,	_	_
the	_	_
cost	_	_
metric	_	_
is	_	_
quantized	_	_
,	_	_
so	_	_
that	_	_
we	_	_
can	feasibility	_
get	_	_
the	_	_
approximate	_	_
delay	_	_
function	_	_
D	_	_
(	_	_
c	_	_
)	_	_
.	_	_

#241
If	_	_
we	_	_
indeed	_	_
quantize	_	_
the	_	_
delay	_	_
metric	_	_
by	_	_
using	_	_
the	_	_
same	_	_
scaling	_	_
mechanism	_	_
(	_	_
logarithmic	_	_
scaling	_	_
or	_	_
uniform	_	_
scaling	_	_
)	_	_
,	_	_
we	_	_
would	_	_
get	_	_
a	_	_
different	_	_
approximate	_	_
cost	_	_
function	_	_
,	_	_
denoted	_	_
by	_	_
C	_	_
(	_	_
d	_	_
)	_	_
.	_	_

#242
D	_	_
(	_	_
c	_	_
)	_	_
and	_	_
C	_	_
(	_	_
d	_	_
)	_	_
may	capability-options	_
represent	_	_
the	_	_
different	_	_
approximate	_	_
supported	_	_
QoS	_	_
regions	_	_
.	_	_

#243
If	_	_
we	_	_
combine	_	_
the	_	_
two	_	_
supported	_	_
QoS	_	_
regions	_	_
represented	_	_
by	_	_
D	_	_
(	_	_
c	_	_
)	_	_
and	_	_
C	_	_
(	_	_
d	_	_
)	_	_
,	_	_
we	_	_
can	feasibility	_
get	_	_
a	_	_
more	_	_
accurate	_	_
supported	_	_
QoS	_	_
region	_	_
than	_	_
the	_	_
one	_	_
denoted	_	_
by	_	_
either	_	_
one	_	_
.	_	_

#244
For	_	_
example	_	_
,	_	_
consider	_	_
the	_	_
optimal	_	_
delay	_	_
function	_	_
depicted	_	_
in	_	_
Fig	_	_
.	_	_
3	_	_
.	_	_

#252
PFu	_	_
,	_	_
gd	_	_
is	_	_
obtained	_	_
by	_	_
computing	_	_
the	_	_
minimum	_	_
delay	_	_
with	_	_
all	_	_
possible	_	_
quantized	_	_
cost	_	_
values	_	_
,	_	_
while	_	_
PFu	_	_
,	_	_
gc	_	_
is	_	_
obtained	_	_
by	_	_
computing	_	_
the	_	_
minimum	_	_
cost	_	_
with	_	_
all	_	_
possible	_	_
quantized	_	_
delay	_	_
values	_	_
.	_	_

#253
Both	_	_
PFu	_	_
,	_	_
gd	_	_
and	_	_
PFu	_	_
,	_	_
gc	_	_
may	capability-options	_
define	_	_
different	_	_
supported	_	_
QoS	_	_
regions	_	_
.	_	_

#254
We	_	_
combine	_	_
both	_	_
sets	_	_
to	_	_
define	_	_
the	_	_
supported	_	_
QoS	_	_
region	_	_
from	_	_
u	_	_
to	_	_
g.	_	_
The	_	_
pseudo-code	_	_
of	_	_
our	_	_
algorithm	_	_
is	_	_
referred	_	_
to	_	_
http	_	_
:	_	_
//www.eee.hku.hk/research/technical_reports.htm	_	_
.	_	_

#257
For	_	_
clarity	_	_
,	_	_
the	_	_
existing	_	_
quantization-based	_	_
algorithms	_	_
use	_	_
cost-scaling	_	_
,	_	_
while	_	_
our	_	_
approach	_	_
employs	_	_
two-dimensional	_	_
scaling	_	_
.	_	_

#258
Either	_	_
kind	_	_
of	_	_
quantization	_	_
schemes	_	_
,	_	_
such	_	_
as	_	_
uniform	_	_
scaling	_	_
or	_	_
logarithmic	_	_
scaling	_	_
,	_	_
can	capability-feasibility	_
be	_	_
applied	_	_
through	_	_
cost-scaling	_	_
or	_	_
two-dimensional	_	_
scaling	_	_
.	_	_

#259
Note	_	_
that	_	_
intuitively	_	_
,	_	_
two-dimensional	_	_
scaling	_	_
produces	_	_
the	_	_
smaller	_	_
distortion	_	_
area	_	_
but	_	_
the	_	_
larger	_	_
computational	_	_
overhead	_	_
if	_	_
it	_	_
uses	_	_
the	_	_
same	_	_
scaling	_	_
parameter	_	_
as	_	_
cost-scaling	_	_
.	_	_

#272
By	_	_
Definitions	_	_
4	_	_
and	_	_
5	_	_
,	_	_
the	_	_
points	_	_
(	_	_
ri·c+CD	_	_
(	_	_
ri·c	_	_
)	_	_
,	_	_
ri·d	_	_
)	_	_
and	_	_
(	_	_
ri·c	_	_
,	_	_
ri·d+DD	_	_
(	_	_
ri·d	_	_
)	_	_
)	_	_
are	_	_
in	_	_
the	_	_
feasible	_	_
area	_	_
found	_	_
by	_	_
our	_	_
mechanism	_	_
.	_	_

#273
This	_	_
implies	_	_
that	_	_
the	_	_
distortion	_	_
area	_	_
must	deontic-inference	_
be	_	_
no	_	_
more	_	_
than	_	_
CD	_	_
(	_	_
ri·c	_	_
)	_	_
·DD	_	_
(	_	_
ri·d	_	_
)	_	_
.	_	_

#274
The	_	_
total	_	_
distortion	_	_
area	_	_
produced	_	_
by	_	_
two-dimensional	_	_
scaling	_	_
is	_	_
no	_	_
more	_	_
than	_	_
∑i=1n-1CD	_	_
(	_	_
ri·c	_	_
)	_	_
·DD	_	_
(	_	_
ri·d	_	_
)	_	_
.	_	_

#275
We	_	_
can	feasibility-rhetorical	_
see	_	_
that	_	_
the	_	_
total	_	_
distortion	_	_
area	_	_
of	_	_
two-dimensional	_	_
scaling	_	_
depends	_	_
on	_	_
the	_	_
number	_	_
of	_	_
the	_	_
optimal	_	_
representative	_	_
points	_	_
n.	_	_
To	_	_
gain	_	_
the	_	_
insight	_	_
into	_	_
n	_	_
,	_	_
we	_	_
assume	_	_
that	_	_
the	_	_
QoS	_	_
metrics	_	_
of	_	_
all	_	_
paths	_	_
are	_	_
independent	_	_
and	_	_
identically	_	_
distributed	_	_
(	_	_
i.i.d	_	_
.	_	_
)	_	_

#276
random	_	_
variables	_	_
(	_	_
Van	_	_
Mieghem	_	_
and	_	_
Kuipers	_	_
,	_	_
2003	_	_
)	_	_
.	_	_

#282
We	_	_
thus	_	_
have	_	_
n≤|V|-2	_	_
.	_	_

#283
Therefore	_	_
,	_	_
the	_	_
distortion	_	_
area	_	_
introduced	_	_
due	_	_
to	_	_
two-dimensional	_	_
scaling	_	_
can	feasibility	_
be	_	_
calculated	_	_
as	_	_
(	_	_
6	_	_
)	_	_
Aerror2-D=∑i=1n-1CD	_	_
(	_	_
ri·c	_	_
)	_	_
·DD	_	_
(	_	_
ri.d	_	_
)	_	_
≤	_	_
(	_	_
|V|-2	_	_
)	_	_
·Cmax2	_	_
If	_	_
two-dimensional	_	_
uniform	_	_
scaling	_	_
is	_	_
applied	_	_
,	_	_
we	_	_
have	_	_
DD	_	_
(	_	_
ri·d	_	_
)	_	_
≤	_	_
(	_	_
|V|-1	_	_
)	_	_
δ	_	_
and	_	_
CD	_	_
(	_	_
ri·d	_	_
)	_	_
≤	_	_
(	_	_
|V|-1	_	_
)	_	_
δ.	_	_
Therefore	_	_
,	_	_
the	_	_
distortion	_	_
area	_	_
is	_	_
(	_	_
7	_	_
)	_	_
Aerror2-D	_	_
,	_	_
uni≤	_	_
(	_	_
|V|-2	_	_
)	_	_
·	_	_
(	_	_
(	_	_
|V|-1	_	_
)	_	_
δ	_	_
)	_	_
2=	_	_
(	_	_
|V|-2	_	_
)	_	_
ε2where	_	_
δ=ε/	_	_
(	_	_
|V|-1	_	_
)	_	_
.	_	_

#284
Similarly	_	_
,	_	_
if	_	_
two-dimensional	_	_
logarithmic	_	_
scaling	_	_
is	_	_
employed	_	_
,	_	_
we	_	_
have	_	_
DD	_	_
(	_	_
ri·d	_	_
)	_	_
≤	_	_
(	_	_
(	_	_
1+δ	_	_
)	_	_
|V|-1-1	_	_
)	_	_
·ri·d	_	_
and	_	_
CD	_	_
(	_	_
ri·c	_	_
)	_	_
≤	_	_
(	_	_
(	_	_
1+δ	_	_
)	_	_
|V|-1-1	_	_
)	_	_
·ri·c	_	_
.	_	_

#296
For	_	_
ease	_	_
of	_	_
discussion	_	_
,	_	_
denote	_	_
δt	_	_
and	_	_
δs	_	_
as	_	_
the	_	_
scaling	_	_
parameters	_	_
adopted	_	_
in	_	_
two-dimensional	_	_
scaling	_	_
and	_	_
cost-scaling	_	_
,	_	_
respectively	_	_
.	_	_

#297
If	_	_
we	_	_
use	_	_
uniform	_	_
scaling	_	_
,	_	_
by	_	_
setting	_	_
δt=2δs	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
consider	_	_
that	_	_
the	_	_
total	_	_
number	_	_
of	_	_
quantized	_	_
cost	_	_
and	_	_
delay	_	_
values	_	_
for	_	_
two-dimensional	_	_
scaling	_	_
is	_	_
the	_	_
same	_	_
as	_	_
that	_	_
for	_	_
cost-scaling	_	_
.	_	_

#298
We	_	_
thus	_	_
consider	_	_
both	_	_
algorithms	_	_
incur	_	_
a	_	_
comparable	_	_
computational	_	_
overhead	_	_
.	_	_

#301
This	_	_
means	_	_
that	_	_
2log1+2δsUB≃log1+δsUB	_	_
.	_	_

#302
Therefore	_	_
,	_	_
if	_	_
we	_	_
set	_	_
δt=2δs	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
consider	_	_
that	_	_
the	_	_
computational	_	_
overheads	_	_
produced	_	_
by	_	_
two-dimensional	_	_
scaling	_	_
and	_	_
cost-scaling	_	_
are	_	_
comparable	_	_
.	_	_

#303
Denote	_	_
δ	_	_
as	_	_
the	_	_
scaling	_	_
parameter	_	_
used	_	_
in	_	_
cost-scaling	_	_
.	_	_

#316
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
the	_	_
total	_	_
number	_	_
of	_	_
the	_	_
cost	_	_
and	_	_
delay	_	_
values	_	_
taken	_	_
by	_	_
two-dimensional	_	_
scaling	_	_
reduces	_	_
with	_	_
the	_	_
same	_	_
rate	_	_
as	_	_
that	_	_
of	_	_
cost-scaling	_	_
.	_	_

#317
This	_	_
implies	_	_
that	_	_
two-dimensional	_	_
scaling	_	_
can	capability	_
effectively	_	_
reduce	_	_
the	_	_
computational	_	_
overhead	_	_
with	_	_
a	_	_
smaller	_	_
increase	_	_
in	_	_
the	_	_
distortion	_	_
area	_	_
when	_	_
compared	_	_
with	_	_
cost-scaling	_	_
.	_	_

#318
As	_	_
the	_	_
actual	_	_
improvement	_	_
depends	_	_
on	_	_
the	_	_
network	_	_
topology	_	_
,	_	_
we	_	_
have	_	_
conducted	_	_
extensive	_	_
simulations	_	_
to	_	_
study	_	_
the	_	_
performance	_	_
,	_	_
which	_	_
will	_	_
be	_	_
discussed	_	_
in	_	_
Section	_	_
6	_	_
.	_	_

#334
We	_	_
apply	_	_
the	_	_
default	_	_
parameters	_	_
provided	_	_
in	_	_
BRITE	_	_
.	_	_

#335
The	_	_
details	_	_
can	feasibility-rhetorical	_
be	_	_
referred	_	_
to	_	_
Xue	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2007	_	_
)	_	_
and	_	_
Huang	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2010	_	_
)	_	_
.	_	_

#336
The	_	_
physical	_	_
links	_	_
in	_	_
the	_	_
networks	_	_
are	_	_
asymmetric	_	_
,	_	_
and	_	_
the	_	_
link	_	_
metrics	_	_
of	_	_
both	_	_
directions	_	_
are	_	_
independently	_	_
generated	_	_
.	_	_

#345
After	_	_
a	_	_
source	_	_
receives	_	_
a	_	_
connection	_	_
request	_	_
,	_	_
it	_	_
first	_	_
determines	_	_
whether	_	_
there	_	_
is	_	_
a	_	_
path	_	_
satisfying	_	_
the	_	_
QoS	_	_
requirement	_	_
of	_	_
a	_	_
request	_	_
.	_	_

#346
The	_	_
network	_	_
will	_	_
accept	_	_
the	_	_
request	_	_
if	_	_
it	_	_
is	_	_
feasible	_	_
or	_	_
reject	_	_
it	_	_
if	_	_
the	_	_
source	_	_
can	capability	negation
not	_	_
find	_	_
a	_	_
feasible	_	_
path	_	_
according	_	_
to	_	_
its	_	_
precomputed	_	_
supported	_	_
QoS	_	_
region	_	_
.	_	_

#347
We	_	_
define	_	_
the	_	_
ratio	_	_
of	_	_
the	_	_
number	_	_
of	_	_
the	_	_
requests	_	_
accepted	_	_
to	_	_
the	_	_
total	_	_
number	_	_
of	_	_
the	_	_
incoming	_	_
requests	_	_
as	_	_
the	_	_
acceptance	_	_
ratio	_	_
.	_	_

#364
In	_	_
the	_	_
following	_	_
,	_	_
we	_	_
are	_	_
going	_	_
to	_	_
show	_	_
that	_	_
the	_	_
computational	_	_
overheads	_	_
of	_	_
our	_	_
approach	_	_
and	_	_
cost-scaling	_	_
are	_	_
almost	_	_
the	_	_
same	_	_
.	_	_

#365
Therefore	_	_
,	_	_
our	_	_
approach	_	_
can	capability	_
provide	_	_
a	_	_
better	_	_
admission	_	_
control	_	_
service	_	_
than	_	_
cost-scaling	_	_
without	_	_
inducing	_	_
additional	_	_
overhead	_	_
.	_	_

#366
Comparing	_	_
Fig	_	_
.	_	_
7	_	_
(	_	_
a	_	_
)	_	_
and	_	_
(	_	_
b	_	_
)	_	_
,	_	_
we	_	_
observe	_	_
that	_	_
the	_	_
relative	_	_
acceptance	_	_
ratio	_	_
with	_	_
fu=0.9	_	_
is	_	_
less	_	_
than	_	_
that	_	_
with	_	_
fu=1	_	_
.	_	_

#370
Figure	_	_
8	_	_
shows	_	_
the	_	_
simulation	_	_
results	_	_
with	_	_
uniform	_	_
scaling	_	_
.	_	_

#371
Figure	_	_
8	_	_
(	_	_
a	_	_
)	_	_
exhibits	_	_
the	_	_
relationship	_	_
between	_	_
the	_	_
region-deviation	_	_
ratios	_	_
and	_	_
the	_	_
scaling	_	_
parameter	_	_
δ.	_	_
We	_	_
can	feasibility-rhetorical	_
see	_	_
that	_	_
the	_	_
region-deviation	_	_
ratio	_	_
for	_	_
cost-scaling	_	_
is	_	_
the	_	_
higher	_	_
than	_	_
that	_	_
for	_	_
two-dimensional	_	_
scaling	_	_
.	_	_

#372
For	_	_
each	_	_
running	_	_
time	_	_
,	_	_
there	_	_
is	_	_
a	_	_
corresponding	_	_
region-deviation	_	_
ratio	_	_
produced	_	_
by	_	_
algorithm	_	_
.	_	_

#393
Finally	_	_
,	_	_
we	_	_
demonstrated	_	_
the	_	_
performance	_	_
of	_	_
our	_	_
method	_	_
and	_	_
compared	_	_
it	_	_
with	_	_
the	_	_
existing	_	_
methods	_	_
by	_	_
conducting	_	_
the	_	_
extensive	_	_
simulation	_	_
experiments	_	_
.	_	_

#394
Our	_	_
method	_	_
can	feasibility	_
be	_	_
extended	_	_
for	_	_
the	_	_
case	_	_
of	_	_
routing	_	_
with	_	_
multiple	_	_
additive	_	_
constraints	_	_
.	_	_

#395
Acknowledgments	_	_
This	_	_
work	_	_
was	_	_
supported	_	_
in	_	_
part	_	_
by	_	_
the	_	_
Cisco	_	_
Research	_	_
Initiative	_	_
Award	_	_
,	_	_
the	_	_
National	_	_
Natural	_	_
Science	_	_
Foundation	_	_
of	_	_
China	_	_
(	_	_
Grant	_	_
nos	_	_
.	_	_