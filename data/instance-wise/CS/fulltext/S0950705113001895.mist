#1
Rough	_	_
set	_	_
theory	_	_
has	_	_
been	_	_
successfully	_	_
used	_	_
in	_	_
information	_	_
systems	_	_
for	_	_
classification	_	_
analysis	_	_
.	_	_

#2
Set-valued	_	_
information	_	_
systems	_	_
are	_	_
generalized	_	_
models	_	_
of	_	_
single-valued	_	_
information	_	_
systems	_	_
,	_	_
which	_	_
can	capability-feasibility	_
be	_	_
classified	_	_
into	_	_
two	_	_
categories	_	_
:	_	_
disjunctive	_	_
and	_	_
conjunctive	_	_
.	_	_

#3
Approximations	_	_
are	_	_
fundamental	_	_
concepts	_	_
of	_	_
rough	_	_
set	_	_
theory	_	_
,	_	_
which	_	_
need	_	_
to	_	_
be	_	_
updated	_	_
incrementally	_	_
while	_	_
the	_	_
object	_	_
set	_	_
varies	_	_
over	_	_
time	_	_
in	_	_
the	_	_
set-valued	_	_
information	_	_
systems	_	_
.	_	_

#20
Considering	_	_
the	_	_
problem	_	_
of	_	_
discretization	_	_
of	_	_
continuous	_	_
attributes	_	_
in	_	_
the	_	_
dynamic	_	_
databases	_	_
,	_	_
Dey	_	_
et	_	_
al	_	_
.	_	_
developed	_	_
a	_	_
dynamic	_	_
discreduction	_	_
method	_	_
based	_	_
on	_	_
RST	_	_
and	_	_
notions	_	_
of	_	_
Statistics	_	_
,	_	_
which	_	_
merges	_	_
the	_	_
two	_	_
tasks	_	_
of	_	_
discretization	_	_
and	_	_
reduction	_	_
of	_	_
attributes	_	_
into	_	_
a	_	_
single	_	_
seamless	_	_
process	_	_
,	_	_
so	_	_
as	_	_
to	_	_
reduce	_	_
the	_	_
computation	_	_
time	_	_
by	_	_
using	_	_
samples	_	_
instead	_	_
of	_	_
the	_	_
whole	_	_
data	_	_
to	_	_
discretize	_	_
the	_	_
variables	_	_
[	_	_
20	_	_
]	_	_
.	_	_

#21
Considering	_	_
the	_	_
problem	_	_
of	_	_
dynamic	_	_
attribute	_	_
reduction	_	_
,	_	_
Hu	_	_
et	_	_
al	_	_
.	_	_
proposed	_	_
an	_	_
incremental	_	_
positive	_	_
region	_	_
reduction	_	_
algorithm	_	_
based	_	_
on	_	_
elementary	_	_
set	_	_
,	_	_
which	_	_
can	capability	_
generate	_	_
a	_	_
new	_	_
positive	_	_
region	_	_
reduction	_	_
quickly	_	_
when	_	_
a	_	_
new	_	_
object	_	_
is	_	_
added	_	_
into	_	_
the	_	_
decision	_	_
information	_	_
systems	_	_
[	_	_
28	_	_
]	_	_
.	_	_

#22
From	_	_
the	_	_
view	_	_
of	_	_
information	_	_
theory	_	_
,	_	_
Wang	_	_
et	_	_
al	_	_
.	_	_
proposed	_	_
an	_	_
incremental	_	_
attribute	_	_
reduction	_	_
algorithm	_	_
based	_	_
on	_	_
three	_	_
representative	_	_
entropies	_	_
by	_	_
considering	_	_
changes	_	_
of	_	_
data	_	_
values	_	_
,	_	_
which	_	_
can	capability	_
generate	_	_
a	_	_
feasible	_	_
reduct	_	_
in	_	_
a	_	_
much	_	_
shorter	_	_
time	_	_
.	_	_

#23
However	_	_
,	_	_
the	_	_
algorithm	_	_
is	_	_
only	_	_
applicable	_	_
on	_	_
the	_	_
case	_	_
of	_	_
the	_	_
variation	_	_
of	_	_
data	_	_
one	_	_
by	_	_
one	_	_
[	_	_
21	_	_
]	_	_
.	_	_

#26
Considering	_	_
the	_	_
problem	_	_
of	_	_
dynamic	_	_
rule	_	_
induction	_	_
,	_	_
Fan	_	_
et	_	_
al	_	_
.	_	_
proposed	_	_
an	_	_
incremental	_	_
rule-extraction	_	_
algorithm	_	_
(	_	_
REA	_	_
)	_	_
based	_	_
on	_	_
RST	_	_
,	_	_
which	_	_
updates	_	_
rule	_	_
sets	_	_
by	_	_
partly	_	_
modifying	_	_
original	_	_
rule	_	_
sets	_	_
without	_	_
re-computing	_	_
rule	_	_
sets	_	_
from	_	_
the	_	_
very	_	_
beginning	_	_
and	_	_
the	_	_
proposal	_	_
approach	_	_
is	_	_
especially	_	_
useful	_	_
in	_	_
a	_	_
large	_	_
database	_	_
,	_	_
since	_	_
it	_	_
does	_	_
not	_	_
re-compute	_	_
the	_	_
reducts/rules	_	_
that	_	_
are	_	_
not	_	_
influenced	_	_
by	_	_
the	_	_
incremental	_	_
data	_	_
set	_	_
[	_	_
23	_	_
]	_	_
.	_	_

#27
Nevertheless	_	_
,	_	_
alternative	_	_
rules	_	_
which	_	_
are	_	_
as	_	_
preferred	_	_
as	_	_
the	_	_
original	_	_
desired	_	_
rules	_	_
might	speculation	_
exist	_	_
since	_	_
the	_	_
maximum	_	_
of	_	_
strength	_	_
index	_	_
is	_	_
not	_	_
unique	_	_
.	_	_

#28
The	_	_
REA	_	_
may	capability-options	_
lead	_	_
to	_	_
non-complete	_	_
rules	_	_
,	_	_
then	_	_
an	_	_
incremental	_	_
alternative	_	_
rule	_	_
extraction	_	_
algorithm	_	_
(	_	_
IAREA	_	_
)	_	_
was	_	_
proposed	_	_
to	_	_
exclude	_	_
the	_	_
repetitive	_	_
rules	_	_
and	_	_
to	_	_
avoid	_	_
the	_	_
problem	_	_
of	_	_
redundant	_	_
rules	_	_
[	_	_
24	_	_
]	_	_
.	_	_

#29
Zheng	_	_
et	_	_
al	_	_
.	_	_
developed	_	_
a	_	_
rough	_	_
set	_	_
and	_	_
rule	_	_
tree	_	_
based	_	_
incremental	_	_
algorithm	_	_
for	_	_
knowledge	_	_
acquisition	_	_
,	_	_
which	_	_
is	_	_
not	_	_
only	_	_
obviously	_	_
quicker	_	_
than	_	_
that	_	_
of	_	_
classic	_	_
algorithm	_	_
,	_	_
but	_	_
also	_	_
has	_	_
a	_	_
better	_	_
performance	_	_
of	_	_
knowledge	_	_
learned	_	_
by	_	_
the	_	_
proposed	_	_
algorithm	_	_
to	_	_
a	_	_
certain	_	_
degree	_	_
[	_	_
25	_	_
]	_	_
.	_	_

#31
The	_	_
main	_	_
goal	_	_
of	_	_
RST	_	_
is	_	_
to	_	_
synthesize	_	_
approximations	_	_
of	_	_
concepts	_	_
from	_	_
the	_	_
acquired	_	_
data	_	_
,	_	_
which	_	_
is	_	_
a	_	_
necessary	_	_
step	_	_
for	_	_
expressing	_	_
and	_	_
reducing	_	_
incomplete	_	_
and	_	_
uncertain	_	_
knowledge	_	_
based	_	_
on	_	_
RST	_	_
[	_	_
30-32	_	_
]	_	_
.	_	_

#32
The	_	_
knowledge	_	_
hidden	_	_
in	_	_
information	_	_
systems	_	_
can	feasibility	_
be	_	_
discovered	_	_
and	_	_
expressed	_	_
in	_	_
the	_	_
form	_	_
of	_	_
decision	_	_
rules	_	_
according	_	_
to	_	_
the	_	_
lower	_	_
and	_	_
upper	_	_
approximations	_	_
[	_	_
36-39	_	_
]	_	_
.	_	_

#33
In	_	_
order	_	_
to	_	_
resolve	_	_
the	_	_
problem	_	_
of	_	_
high	_	_
computation	_	_
complexity	_	_
in	_	_
computing	_	_
approximations	_	_
under	_	_
the	_	_
dynamic	_	_
information	_	_
systems	_	_
,	_	_
many	_	_
incremental	_	_
updating	_	_
algorithms	_	_
have	_	_
been	_	_
proposed	_	_
.	_	_

#34
Therefore	_	_
,	_	_
extensive	_	_
efforts	_	_
have	_	_
been	_	_
devoted	_	_
to	_	_
efficient	_	_
algorithms	_	_
for	_	_
computing	_	_
approximations	_	_
.	_	_

#35
Li	_	_
et	_	_
al	_	_
.	_	_
presented	_	_
an	_	_
incremental	_	_
method	_	_
for	_	_
updating	_	_
approximations	_	_
in	_	_
an	_	_
incomplete	_	_
information	_	_
system	_	_
through	_	_
the	_	_
characteristic	_	_
relation	_	_
when	_	_
the	_	_
attribute	_	_
set	_	_
varies	_	_
over	_	_
time	_	_
,	_	_
which	_	_
can	capability	_
deal	_	_
with	_	_
the	_	_
case	_	_
of	_	_
adding	_	_
and	_	_
removing	_	_
some	_	_
attributes	_	_
simultaneously	_	_
in	_	_
the	_	_
information	_	_
system	_	_
[	_	_
40	_	_
]	_	_
.	_	_

#36
Since	_	_
the	_	_
domain	_	_
of	_	_
attributes	_	_
may	capability-options	_
change	_	_
in	_	_
real-life	_	_
applications	_	_
,	_	_
attributes	_	_
values	_	_
may	feasibility-options	_
be	_	_
added	_	_
to	_	_
or	_	_
deleted	_	_
from	_	_
the	_	_
domain	_	_
,	_	_
Chen	_	_
et	_	_
al	_	_
.	_	_
proposed	_	_
the	_	_
incremental	_	_
updating	_	_
approach	_	_
of	_	_
approximations	_	_
while	_	_
attributes	_	_
values	_	_
coarsening	_	_
or	_	_
refining	_	_
in	_	_
the	_	_
complete	_	_
and	_	_
incomplete	_	_
information	_	_
systems	_	_
[	_	_
35	_	_
]	_	_
.	_	_

#37
Zhang	_	_
et	_	_
al	_	_
.	_	_
discussed	_	_
the	_	_
change	_	_
of	_	_
approximations	_	_
in	_	_
neighborhood	_	_
decision	_	_
systems	_	_
when	_	_
the	_	_
object	_	_
set	_	_
evolves	_	_
over	_	_
time	_	_
,	_	_
and	_	_
proposed	_	_
two	_	_
fast	_	_
incremental	_	_
algorithms	_	_
for	_	_
updating	_	_
approximations	_	_
when	_	_
multiple	_	_
objects	_	_
enter	_	_
into	_	_
or	_	_
get	_	_
out	_	_
of	_	_
the	_	_
neighborhood	_	_
decision	_	_
table	_	_
[	_	_
33	_	_
]	_	_
.	_	_

#41
Set-valued	_	_
information	_	_
systems	_	_
are	_	_
an	_	_
important	_	_
type	_	_
of	_	_
data	_	_
tables	_	_
,	_	_
and	_	_
generalized	_	_
models	_	_
of	_	_
single-valued	_	_
information	_	_
systems	_	_
[	_	_
42	_	_
]	_	_
.	_	_

#42
In	_	_
many	_	_
practical	_	_
decision-making	_	_
issues	_	_
,	_	_
set-valued	_	_
information	_	_
systems	_	_
have	_	_
very	_	_
wide	_	_
applications	_	_
,	_	_
which	_	_
can	feasibility	_
be	_	_
used	_	_
in	_	_
intelligent	_	_
decision-making	_	_
and	_	_
knowledge	_	_
discovery	_	_
from	_	_
information	_	_
systems	_	_
with	_	_
uncertain	_	_
information	_	_
and	_	_
set-valued	_	_
information	_	_
.	_	_

#43
In	_	_
such	_	_
systems	_	_
,	_	_
some	_	_
of	_	_
the	_	_
attribute	_	_
values	_	_
of	_	_
an	_	_
object	_	_
may	deontic-options	_
be	_	_
set-valued	_	_
,	_	_
which	_	_
are	_	_
always	_	_
used	_	_
to	_	_
characterize	_	_
the	_	_
incomplete	_	_
information	_	_
,	_	_
i.e.	_	_
,	_	_
the	_	_
values	_	_
of	_	_
some	_	_
attributes	_	_
are	_	_
unknown	_	_
or	_	_
multi-values	_	_
.	_	_

#44
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
we	_	_
often	_	_
encounter	_	_
the	_	_
scenario	_	_
where	_	_
the	_	_
ordering	_	_
of	_	_
properties	_	_
of	_	_
the	_	_
considering	_	_
attributes	_	_
plays	_	_
a	_	_
crucial	_	_
role	_	_
in	_	_
the	_	_
analysis	_	_
of	_	_
information	_	_
systems	_	_
.	_	_

#48
Furthermore	_	_
,	_	_
Qian	_	_
et	_	_
al	_	_
.	_	_
established	_	_
a	_	_
rough	_	_
set	_	_
approach	_	_
in	_	_
Set-valued	_	_
Ordered	_	_
Information	_	_
Systems	_	_
(	_	_
SOIS	_	_
)	_	_
to	_	_
take	_	_
into	_	_
account	_	_
the	_	_
ordering	_	_
properties	_	_
of	_	_
attributes	_	_
in	_	_
set-valued	_	_
information	_	_
systems	_	_
,	_	_
and	_	_
classified	_	_
the	_	_
SOIS	_	_
into	_	_
two	_	_
categories	_	_
:	_	_
disjunctive	_	_
and	_	_
conjunctive	_	_
systems	_	_
[	_	_
43	_	_
]	_	_
.	_	_

#49
Since	_	_
the	_	_
characteristics	_	_
of	_	_
the	_	_
set-valued	_	_
information	_	_
systems	_	_
is	_	_
different	_	_
from	_	_
that	_	_
of	_	_
single-valued	_	_
information	_	_
systems	_	_
(	_	_
such	_	_
as	_	_
:	_	_
some	_	_
of	_	_
the	_	_
attribute	_	_
values	_	_
for	_	_
an	_	_
object	_	_
are	_	_
set-valued	_	_
)	_	_
,	_	_
the	_	_
method	_	_
for	_	_
knowledge	_	_
acquisition	_	_
in	_	_
the	_	_
single-valued	_	_
information	_	_
systems	_	_
can	capability-feasibility	negation
not	_	_
be	_	_
applied	_	_
directly	_	_
to	_	_
the	_	_
set-valued	_	_
ones	_	_
.	_	_

#50
For	_	_
this	_	_
reason	_	_
,	_	_
the	_	_
incremental	_	_
method	_	_
for	_	_
updating	_	_
approximations	_	_
in	_	_
the	_	_
dynamic	_	_
set-valued	_	_
information	_	_
systems	_	_
is	_	_
discussed	_	_
in	_	_
this	_	_
paper	_	_
.	_	_

#67
Qian	_	_
et	_	_
al	_	_
.	_	_
summarized	_	_
two	_	_
types	_	_
of	_	_
set-valued	_	_
information	_	_
systems	_	_
with	_	_
two	_	_
kinds	_	_
of	_	_
semantics	_	_
,	_	_
which	_	_
are	_	_
known	_	_
as	_	_
conjunctive	_	_
(	_	_
∀x∈U	_	_
and	_	_
c∈C	_	_
,	_	_
f	_	_
(	_	_
x	_	_
,	_	_
c	_	_
)	_	_
is	_	_
interpreted	_	_
conjunctively	_	_
)	_	_
and	_	_
disjunctive	_	_
(	_	_
∀x∈U	_	_
and	_	_
c∈C	_	_
,	_	_
f	_	_
(	_	_
x	_	_
,	_	_
c	_	_
)	_	_
is	_	_
interpreted	_	_
disjunctively	_	_
)	_	_
set-valued	_	_
information	_	_
systems	_	_
.	_	_

#68
According	_	_
to	_	_
the	_	_
introduction	_	_
of	_	_
the	_	_
following	_	_
two	_	_
dominance	_	_
relations	_	_
to	_	_
these	_	_
types	_	_
of	_	_
set-valued	_	_
information	_	_
systems	_	_
,	_	_
SOIS	_	_
can	capability-feasibility	_
be	_	_
also	_	_
classified	_	_
into	_	_
two	_	_
categories	_	_
:	_	_
conjunctive	_	_
and	_	_
disjunctive	_	_
SOIS	_	_
[	_	_
43	_	_
]	_	_
.	_	_

#69
Assume	_	_
the	_	_
domain	_	_
of	_	_
a	_	_
criterion	_	_
a∈C	_	_
is	_	_
completely	_	_
pre-ordered	_	_
by	_	_
an	_	_
outranking	_	_
relation	_	_
⪰a	_	_
;	_	_
x⪰ay	_	_
means	_	_
"	_	_
x	_	_
is	_	_
at	_	_
least	_	_
as	_	_
good	_	_
as	_	_
(	_	_
outranks	_	_
)	_	_
y	_	_
with	_	_
respect	_	_
to	_	_
criterion	_	_
a	_	_
"	_	_
.	_	_

#71
The	_	_
dominance	_	_
relation	_	_
in	_	_
terms	_	_
of	_	_
A	_	_
is	_	_
defined	_	_
as	_	_
:	_	_
(	_	_
1	_	_
)	_	_
RA∧⩾=	_	_
{	_	_
(	_	_
y	_	_
,	_	_
x	_	_
)	_	_
∈U×U|y⪰Ax	_	_
}	_	_
=	_	_
{	_	_
(	_	_
y	_	_
,	_	_
x	_	_
)	_	_
∈U×U|f	_	_
(	_	_
y	_	_
,	_	_
a	_	_
)	_	_
⊇f	_	_
(	_	_
x	_	_
,	_	_
a	_	_
)	_	_
,	_	_
∀a∈A	_	_
}	_	_
Example	_	_
1	_	_
Table	_	_
1	_	_
illustrates	_	_
a	_	_
conjunctive	_	_
SOIS	_	_
,	_	_
where	_	_
U=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
C=	_	_
{	_	_
a1	_	_
,	_	_
a2	_	_
,	_	_
a3	_	_
,	_	_
a4	_	_
}	_	_
,	_	_
d	_	_
is	_	_
the	_	_
decision	_	_
attribute	_	_
,	_	_
VC=	_	_
{	_	_
e	_	_
,	_	_
f	_	_
,	_	_
g	_	_
}	_	_
and	_	_
Vd=	_	_
{	_	_
1,2,4	_	_
}	_	_
.	_	_

#72
Here	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
obtain	_	_
that	_	_
f	_	_
(	_	_
x1	_	_
,	_	_
a1	_	_
)	_	_
=	_	_
{	_	_
e	_	_
}	_	_
,	_	_
f	_	_
(	_	_
x2	_	_
,	_	_
a1	_	_
)	_	_
=	_	_
{	_	_
e	_	_
,	_	_
f	_	_
,	_	_
g	_	_
}	_	_
.	_	_

#73
Since	_	_
{	_	_
e	_	_
,	_	_
f	_	_
,	_	_
g	_	_
}	_	_
⊇	_	_
{	_	_
e	_	_
}	_	_
,	_	_
we	_	_
have	_	_
x2⪰a1x1	_	_
,	_	_
that	_	_
is	_	_
,	_	_
x2	_	_
is	_	_
at	_	_
least	_	_
as	_	_
good	_	_
as	_	_
x1	_	_
with	_	_
respect	_	_
to	_	_
a1	_	_
.	_	_

#75
The	_	_
dominance	_	_
relation	_	_
in	_	_
terms	_	_
of	_	_
A	_	_
is	_	_
defined	_	_
as	_	_
:	_	_
(	_	_
2	_	_
)	_	_
RA∨⩾=	_	_
{	_	_
(	_	_
y	_	_
,	_	_
x	_	_
)	_	_
∈U×U|y⪰Ax	_	_
}	_	_
=	_	_
{	_	_
(	_	_
y	_	_
,	_	_
x	_	_
)	_	_
∈U×U|maxf	_	_
(	_	_
y	_	_
,	_	_
a	_	_
)	_	_
⩾minf	_	_
(	_	_
x	_	_
,	_	_
a	_	_
)	_	_
,	_	_
∀a∈A	_	_
}	_	_
Example	_	_
2	_	_
Table	_	_
2	_	_
illustrates	_	_
a	_	_
disjunctive	_	_
SOIS	_	_
,	_	_
where	_	_
U=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
C=	_	_
{	_	_
a1	_	_
,	_	_
a2	_	_
,	_	_
a3	_	_
,	_	_
a4	_	_
}	_	_
,	_	_
D=	_	_
{	_	_
d	_	_
}	_	_
,	_	_
VC=	_	_
{	_	_
0,1,2	_	_
}	_	_
and	_	_
Vd=	_	_
{	_	_
1,2,4	_	_
}	_	_
.	_	_

#76
Here	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
obtain	_	_
that	_	_
f	_	_
(	_	_
x1	_	_
,	_	_
a1	_	_
)	_	_
=	_	_
{	_	_
1	_	_
}	_	_
,	_	_
f	_	_
(	_	_
x2	_	_
,	_	_
a1	_	_
)	_	_
=	_	_
{	_	_
0,1	_	_
}	_	_
.	_	_

#77
Since	_	_
maxf	_	_
(	_	_
x1	_	_
,	_	_
a1	_	_
)	_	_
=1⩾minf	_	_
(	_	_
x2	_	_
,	_	_
a1	_	_
)	_	_
=0	_	_
,	_	_
we	_	_
have	_	_
x1⪰a1x2	_	_
,	_	_
that	_	_
is	_	_
,	_	_
x1	_	_
is	_	_
at	_	_
least	_	_
as	_	_
good	_	_
as	_	_
x2	_	_
with	_	_
respect	_	_
to	_	_
a1	_	_
.	_	_

#97
From	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
:	_	_
RCΔ⩾̲D1⩽=∅	_	_
,	_	_
RCΔ⩾¯D1⩽=	_	_
{	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
RCΔ⩾̲D2⩽=	_	_
{	_	_
x1	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
RCΔ⩾¯D2⩽=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
RCΔ⩾̲D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x5	_	_
}	_	_
,	_	_
RCΔ⩾¯D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x4	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
,	_	_
RCΔ⩾̲D3⩾=∅	_	_
,	_	_
RCΔ⩾¯D3⩾=	_	_
{	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
}	_	_
.	_	_

#98
Incremental	_	_
updating	_	_
approximations	_	_
in	_	_
SOIS	_	_
when	_	_
the	_	_
object	_	_
set	_	_
varies	_	_
with	_	_
time	_	_
With	_	_
the	_	_
variation	_	_
of	_	_
an	_	_
information	_	_
system	_	_
,	_	_
the	_	_
structure	_	_
of	_	_
information	_	_
granules	_	_
in	_	_
the	_	_
information	_	_
system	_	_
may	options	_
vary	_	_
over	_	_
time	_	_
which	_	_
leads	_	_
to	_	_
the	_	_
change	_	_
of	_	_
knowledge	_	_
induced	_	_
by	_	_
RST	_	_
.	_	_

#99
For	_	_
example	_	_
,	_	_
let	_	_
us	_	_
consider	_	_
a	_	_
practical	_	_
information	_	_
system	_	_
from	_	_
the	_	_
test	_	_
for	_	_
foreign	_	_
language	_	_
ability	_	_
of	_	_
undergraduates	_	_
in	_	_
Shanxi	_	_
University	_	_
,	_	_
the	_	_
test	_	_
results	_	_
can	feasibility-rhetorical	_
be	_	_
expressed	_	_
as	_	_
a	_	_
set-valued	_	_
information	_	_
system	_	_
where	_	_
the	_	_
attributes	_	_
are	_	_
all	_	_
inclusion	_	_
increasing	_	_
preferences	_	_
and	_	_
the	_	_
value	_	_
of	_	_
each	_	_
student	_	_
under	_	_
each	_	_
attribute	_	_
is	_	_
given	_	_
by	_	_
an	_	_
evaluation	_	_
expert	_	_
through	_	_
a	_	_
set-value	_	_
[	_	_
43	_	_
]	_	_
.	_	_

#100
However	_	_
,	_	_
during	_	_
the	_	_
process	_	_
of	_	_
evaluating	_	_
the	_	_
undergraduates	_	_
language	_	_
ability	_	_
,	_	_
data	_	_
in	_	_
an	_	_
information	_	_
system	_	_
does	_	_
not	_	_
usually	_	_
remain	_	_
a	_	_
stable	_	_
condition	_	_
.	_	_

#101
Some	_	_
objects	_	_
may	feasibility-options	_
be	_	_
inserted	_	_
into	_	_
the	_	_
original	_	_
information	_	_
system	_	_
due	_	_
to	_	_
the	_	_
arrival	_	_
of	_	_
the	_	_
new	_	_
students	_	_
.	_	_

#102
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
some	_	_
objects	_	_
will	_	_
be	_	_
deleted	_	_
from	_	_
the	_	_
original	_	_
information	_	_
system	_	_
with	_	_
the	_	_
graduation	_	_
of	_	_
the	_	_
senior	_	_
students	_	_
.	_	_

#103
Then	_	_
the	_	_
discovered	_	_
knowledge	_	_
may	options	_
become	_	_
invalid	_	_
,	_	_
or	_	_
some	_	_
new	_	_
implicit	_	_
information	_	_
may	options	_
emerge	_	_
in	_	_
the	_	_
whole	_	_
updated	_	_
information	_	_
system	_	_
.	_	_

#104
Rather	_	_
than	_	_
restarting	_	_
from	_	_
scratch	_	_
by	_	_
the	_	_
non-incremental	_	_
or	_	_
batch	_	_
learning	_	_
algorithm	_	_
for	_	_
each	_	_
update	_	_
,	_	_
developing	_	_
an	_	_
efficient	_	_
incremental	_	_
algorithm	_	_
to	_	_
avoid	_	_
unnecessary	_	_
computations	_	_
by	_	_
utilizing	_	_
the	_	_
previous	_	_
data	_	_
structures	_	_
or	_	_
results	_	_
is	_	_
thus	_	_
desired	_	_
.	_	_

#110
Here	_	_
,	_	_
we	_	_
only	_	_
discuss	_	_
the	_	_
incremental	_	_
approach	_	_
for	_	_
updating	_	_
approximations	_	_
in	_	_
the	_	_
cases	_	_
that	_	_
a	_	_
single	_	_
object	_	_
enter	_	_
and	_	_
go	_	_
out	_	_
of	_	_
the	_	_
information	_	_
system	_	_
.	_	_

#111
The	_	_
change	_	_
of	_	_
multiple	_	_
objects	_	_
can	feasibility-rhetorical	_
be	_	_
seen	_	_
as	_	_
the	_	_
cumulative	_	_
change	_	_
of	_	_
a	_	_
single	_	_
object	_	_
.	_	_

#112
The	_	_
approximations	_	_
can	feasibility	_
be	_	_
updated	_	_
step	_	_
by	_	_
step	_	_
through	_	_
the	_	_
updating	_	_
principles	_	_
in	_	_
the	_	_
case	_	_
that	_	_
a	_	_
single	_	_
object	_	_
varies	_	_
.	_	_

#113
Principles	_	_
for	_	_
incrementally	_	_
updating	_	_
approximations	_	_
with	_	_
the	_	_
deletion	_	_
of	_	_
a	_	_
single	_	_
object	_	_
Given	_	_
a	_	_
SOIS	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
at	_	_
time	_	_
t	_	_
,	_	_
the	_	_
deletion	_	_
of	_	_
object	_	_
x¯∈U	_	_
(	_	_
x¯	_	_
denotes	_	_
the	_	_
deleted	_	_
object	_	_
)	_	_
will	_	_
change	_	_
the	_	_
original	_	_
information	_	_
granules	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
(	_	_
x∈U	_	_
,	_	_
A⊆C	_	_
)	_	_
and	_	_
the	_	_
union	_	_
of	_	_
decision	_	_
classes	_	_
Di⩾	_	_
(	_	_
1⩽i⩽r	_	_
)	_	_
.	_	_

#135
Proof	_	_
According	_	_
to	_	_
Definition	_	_
4	_	_
,	_	_
we	_	_
have	_	_
RAΔ⩾¯Di⩾=⋃x∈Di⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#136
Thus	_	_
,	_	_
when	_	_
the	_	_
object	_	_
x¯∈Di⩾	_	_
is	_	_
deleted	_	_
from	_	_
U	_	_
,	_	_
the	_	_
A-dominating	_	_
set	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾	_	_
should	deontic	_
be	_	_
removed	_	_
from	_	_
the	_	_
upper	_	_
approximation	_	_
RAΔ⩾¯Di⩾	_	_
,	_	_
i.e.	_	_
,	_	_
RAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾-	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#137
However	_	_
,	_	_
∃x∈Di⩾-	_	_
{	_	_
x¯	_	_
}	_	_
satisfies	_	_
that	_	_
K=	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾∩	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾≠∅	_	_
,	_	_
and	_	_
the	_	_
object	_	_
x∈	_	_
[	_	_
y	_	_
]	_	_
AΔ⩾	_	_
(	_	_
y∈Di⩾-	_	_
{	_	_
x¯	_	_
}	_	_
)	_	_
should	deontic	negation
not	_	_
be	_	_
removed	_	_
from	_	_
RAΔ⩾¯Di⩾	_	_
.	_	_

#138
Therefore	_	_
,	_	_
we	_	_
have	_	_
RAΔ⩾¯Di⩾′=RAΔ⩾¯Di⩾-	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾∪K	_	_
,	_	_
where	_	_
K=	_	_
{	_	_
x|x∈	_	_
[	_	_
x¯	_	_
]	_	_
AΔ⩾∩K′	_	_
}	_	_
,	_	_
K′=⋃x∈Di⩾-	_	_
{	_	_
x¯	_	_
}	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾.□	_	_
Example	_	_
6	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
2	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
upper	_	_
approximation	_	_
of	_	_
D2⩾	_	_
by	_	_
deleting	_	_
x1	_	_
from	_	_
U.	_	_
Assume	_	_
the	_	_
object	_	_
x1	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x1	_	_
}	_	_
.	_	_

#151
On	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
∀x∈Di⩾-RAΔ⩾̲Di⩾	_	_
,	_	_
we	_	_
know	_	_
that	_	_
Di⩾⊉	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#152
However	_	_
,	_	_
it	_	_
may	options	_
exist	_	_
that	_	_
x¯∈	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
and	_	_
after	_	_
the	_	_
deletion	_	_
of	_	_
x¯	_	_
,	_	_
Di⩾⊇	_	_
(	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
)	_	_
′	_	_
.	_	_

#153
Then	_	_
x	_	_
should	deontic	_
be	_	_
added	_	_
to	_	_
RAΔ⩾̲Di⩾′	_	_
,	_	_
that	_	_
is	_	_
,	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾∪	_	_
{	_	_
x	_	_
}	_	_
.	_	_

#154
Therefore	_	_
,	_	_
we	_	_
have	_	_
RAΔ⩾̲Di⩾′=RAΔ⩾̲Di⩾∪K	_	_
,	_	_
where	_	_
K=x|x∈Di⩾-RAΔ⩾̲Di⩾	_	_
,	_	_
Di⩾⊇	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾-	_	_
{	_	_
x¯	_	_
}	_	_
.□	_	_
Example	_	_
7	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
3	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximation	_	_
of	_	_
D2⩾	_	_
by	_	_
deleting	_	_
x3	_	_
from	_	_
U.	_	_
Assume	_	_
the	_	_
object	_	_
x3	_	_
is	_	_
deleted	_	_
from	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U-	_	_
{	_	_
x3	_	_
}	_	_
.	_	_

#178
Therefore	_	_
,	_	_
RAΔ⩾¯D3⩾′=RCΔ⩾¯D3⩾=	_	_
{	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
}	_	_
.	_	_

#179
Principles	_	_
for	_	_
incrementally	_	_
updating	_	_
approximations	_	_
with	_	_
the	_	_
insertion	_	_
of	_	_
a	_	_
new	_	_
object	_	_
Given	_	_
a	_	_
SOIS	_	_
(	_	_
U	_	_
,	_	_
C∪	_	_
{	_	_
d	_	_
}	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
at	_	_
time	_	_
t	_	_
,	_	_
when	_	_
the	_	_
information	_	_
system	_	_
is	_	_
updated	_	_
by	_	_
inserting	_	_
a	_	_
new	_	_
object	_	_
x̃	_	_
(	_	_
x̃	_	_
denotes	_	_
the	_	_
inserted	_	_
object	_	_
)	_	_
into	_	_
the	_	_
unverse	_	_
U	_	_
at	_	_
time	_	_
t+1	_	_
,	_	_
two	_	_
situations	_	_
may	options	_
occur	_	_
:	_	_
(	_	_
1	_	_
)	_	_
x̃	_	_
forms	_	_
a	_	_
new	_	_
decision	_	_
class	_	_
,	_	_
i.e.	_	_
,	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x̃	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
;	_	_
(	_	_
2	_	_
)	_	_
x̃	_	_
does	_	_
not	_	_
form	_	_
a	_	_
new	_	_
decision	_	_
class	_	_
,	_	_
i.e.	_	_
,	_	_
∃x∈U	_	_
,	_	_
f	_	_
(	_	_
x̃	_	_
,	_	_
d	_	_
)	_	_
=f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
.	_	_

#180
The	_	_
difference	_	_
between	_	_
the	_	_
two	_	_
situations	_	_
is	_	_
:	_	_
in	_	_
the	_	_
first	_	_
situation	_	_
,	_	_
in	_	_
addition	_	_
to	_	_
updating	_	_
the	_	_
approximations	_	_
of	_	_
union	_	_
of	_	_
the	_	_
existing	_	_
decision	_	_
classes	_	_
,	_	_
we	_	_
need	_	_
to	_	_
compute	_	_
the	_	_
approximations	_	_
for	_	_
the	_	_
new	_	_
decision	_	_
class	_	_
.	_	_

#206
Since	_	_
Di⩾′=Di⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
,	_	_
then	_	_
we	_	_
have	_	_
RAΔ⩾¯Di⩾′=⋃x∈Di⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#207
Because	_	_
∀x∈U	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
or	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
and	_	_
x̃∈	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
obtain	_	_
that	_	_
RAΔ⩾¯Di⩾′=⋃x∈Di+1⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾=RAΔ⩾¯Di⩾∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾.□	_	_
Example	_	_
10	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
6	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
upper	_	_
approximations	_	_
of	_	_
D2⩾	_	_
when	_	_
the	_	_
object	_	_
x7	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
.	_	_

#208
Assume	_	_
the	_	_
object	_	_
x7	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x7	_	_
}	_	_
.	_	_

#220
Hence	_	_
,	_	_
we	_	_
only	_	_
consider	_	_
the	_	_
object	_	_
x∈RAΔ⩾̲Di⩾	_	_
,	_	_
i.e.	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾⊆Di⩾	_	_
.	_	_

#221
When	_	_
x̃	_	_
is	_	_
deleted	_	_
,	_	_
there	_	_
may	options	_
exist	_	_
that	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#222
Then	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′⊈Di⩾′=Di⩾	_	_
,	_	_
i.e.	_	_
,	_	_
x∉RAΔ⩾̲Di⩾′	_	_
.	_	_

#253
Hence	_	_
RCΔ⩾¯D2⩾′=RCΔ⩾¯D2⩾=	_	_
{	_	_
x1	_	_
,	_	_
x2	_	_
,	_	_
x3	_	_
,	_	_
x5	_	_
,	_	_
x6	_	_
}	_	_
.	_	_

#254
Based	_	_
on	_	_
the	_	_
above	_	_
analysis	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
compute	_	_
the	_	_
approximations	_	_
of	_	_
the	_	_
union	_	_
of	_	_
existing	_	_
decision	_	_
classes	_	_
Di⩾	_	_
(	_	_
1⩽i⩽r	_	_
)	_	_
when	_	_
inserting	_	_
a	_	_
new	_	_
object	_	_
into	_	_
SOIS	_	_
.	_	_

#255
However	_	_
,	_	_
when	_	_
a	_	_
new	_	_
object	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
the	_	_
universe	_	_
,	_	_
it	_	_
might	speculation	_
happen	_	_
that	_	_
x̃	_	_
will	_	_
form	_	_
a	_	_
new	_	_
decision	_	_
class	_	_
,	_	_
i.e.	_	_
,	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x̃	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
.	_	_

#256
Then	_	_
the	_	_
universe	_	_
U′=U∪	_	_
{	_	_
x̃	_	_
}	_	_
will	_	_
be	_	_
divided	_	_
into	_	_
r+1	_	_
partitions	_	_
,	_	_
such	_	_
as	_	_
:	_	_
D=	_	_
{	_	_
D1	_	_
,	_	_
…	_	_
,	_	_
Di	_	_
,	_	_
Dnew	_	_
,	_	_
Di+1	_	_
,	_	_
…	_	_
,	_	_
Dr	_	_
}	_	_
,	_	_
where	_	_
|D|=r+1	_	_
,	_	_
Dnew=	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#257
At	_	_
this	_	_
point	_	_
,	_	_
in	_	_
addition	_	_
to	_	_
updating	_	_
the	_	_
approximations	_	_
of	_	_
the	_	_
existing	_	_
unions	_	_
of	_	_
decision	_	_
classes	_	_
,	_	_
we	_	_
need	_	_
to	_	_
compute	_	_
the	_	_
unions	_	_
of	_	_
new	_	_
decision	_	_
class	_	_
Dnew	_	_
:	_	_
Dnew⩾=Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
.Proposition	_	_
9	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪d	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
,	_	_
A⊆C	_	_
.	_	_

#258
When	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
if	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x̃	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
,	_	_
then	_	_
the	_	_
lower	_	_
approximation	_	_
of	_	_
the	_	_
union	_	_
of	_	_
the	_	_
new	_	_
decision	_	_
class	_	_
Dnew⩾	_	_
can	feasibility-rhetorical	_
be	_	_
computed	_	_
as	_	_
follows	_	_
:	_	_
(	_	_
1	_	_
)	_	_
If	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾⊆Dnew⩾	_	_
,	_	_
where	_	_
Dnew⩾=Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
,	_	_
then	_	_
RAΔ⩾̲Dnew⩾=RAΔ⩾̲Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
;	_	_
(	_	_
2	_	_
)	_	_
Otherwise	_	_
,	_	_
RAΔ⩾̲Dnew⩾=RAΔ⩾̲Di+1⩾	_	_
.	_	_

#259
Proof	_	_
When	_	_
the	_	_
object	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
then	_	_
U′=U∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#276
Proposition	_	_
10	_	_
Let	_	_
S=	_	_
(	_	_
U	_	_
,	_	_
C∪d	_	_
,	_	_
V	_	_
,	_	_
f	_	_
)	_	_
be	_	_
a	_	_
SOIS	_	_
,	_	_
A⊆C	_	_
.	_	_

#277
When	_	_
x̃	_	_
is	_	_
inserted	_	_
into	_	_
U	_	_
,	_	_
if	_	_
∀x∈U	_	_
,	_	_
f	_	_
(	_	_
x̃	_	_
,	_	_
d	_	_
)	_	_
≠f	_	_
(	_	_
x	_	_
,	_	_
d	_	_
)	_	_
,	_	_
then	_	_
the	_	_
upper	_	_
approximation	_	_
of	_	_
the	_	_
union	_	_
of	_	_
the	_	_
new	_	_
decision	_	_
class	_	_
Dnew⩾	_	_
can	feasibility-rhetorical	_
be	_	_
computed	_	_
as	_	_
follows	_	_
:	_	_
RAΔ⩾¯Dnew⩾=RAΔ⩾¯Di+1⩾∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾where	_	_
Dnew⩾=Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#278
Proof	_	_
When	_	_
the	_	_
object	_	_
x̃	_	_
inserts	_	_
into	_	_
U	_	_
,	_	_
U′=U∪	_	_
{	_	_
x̃	_	_
}	_	_
.	_	_

#280
Since	_	_
Dnew⩾=Di+1⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
,	_	_
then	_	_
RAΔ⩾¯Dnew⩾=⋃x∈Di+1⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾	_	_
.	_	_

#281
Because	_	_
∀x∈U	_	_
,	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
{	_	_
x̃	_	_
}	_	_
or	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾′=	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾	_	_
,	_	_
and	_	_
x̃∈	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
obtain	_	_
that	_	_
RAΔ⩾¯Dnew⩾=⋃x∈Di+1⩾	_	_
[	_	_
x	_	_
]	_	_
AΔ⩾∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾=RAΔ⩾¯Di+1⩾∪	_	_
[	_	_
x̃	_	_
]	_	_
AΔ⩾.□	_	_
Example	_	_
14	_	_
Continuation	_	_
of	_	_
Example	_	_
4	_	_
(	_	_
1	_	_
)	_	_
For	_	_
Table	_	_
1	_	_
,	_	_
according	_	_
to	_	_
Proposition	_	_
9	_	_
,	_	_
we	_	_
compute	_	_
the	_	_
lower	_	_
approximations	_	_
of	_	_
Dnew⩾	_	_
when	_	_
the	_	_
object	_	_
x11	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
.	_	_

#282
Assume	_	_
the	_	_
object	_	_
x11	_	_
in	_	_
Table	_	_
3	_	_
inserts	_	_
into	_	_
Table	_	_
1	_	_
,	_	_
and	_	_
U′=U∪	_	_
{	_	_
x11	_	_
}	_	_
.	_	_

#318
In	_	_
our	_	_
experiment	_	_
,	_	_
we	_	_
represent	_	_
all	_	_
the	_	_
missing	_	_
values	_	_
by	_	_
the	_	_
set	_	_
of	_	_
all	_	_
possible	_	_
values	_	_
of	_	_
each	_	_
attribute	_	_
.	_	_

#319
Then	_	_
this	_	_
type	_	_
of	_	_
data	_	_
sets	_	_
can	feasibility	_
be	_	_
regarded	_	_
as	_	_
a	_	_
special	_	_
case	_	_
of	_	_
the	_	_
set-valued	_	_
information	_	_
system	_	_
.	_	_

#320
Besides	_	_
,	_	_
we	_	_
also	_	_
use	_	_
the	_	_
set-valued	_	_
data	_	_
generator	_	_
to	_	_
generate	_	_
two	_	_
artificial	_	_
data	_	_
sets	_	_
5-6	_	_
in	_	_
order	_	_
to	_	_
test	_	_
the	_	_
efficiency	_	_
of	_	_
the	_	_
proposed	_	_
algorithms	_	_
,	_	_
which	_	_
are	_	_
also	_	_
outlined	_	_
in	_	_
Table	_	_
5	_	_
.	_	_

#324
The	_	_
combination	_	_
of	_	_
all	_	_
ten	_	_
parts	_	_
is	_	_
viewed	_	_
as	_	_
the	_	_
10th	_	_
data	_	_
set	_	_
.	_	_

#325
(	_	_
2	_	_
)	_	_
Update	_	_
ratio	_	_
of	_	_
the	_	_
data	_	_
set	_	_
:	_	_
The	_	_
size	_	_
of	_	_
updated	_	_
objects	_	_
which	_	_
inserting	_	_
into	_	_
or	_	_
deleting	_	_
from	_	_
the	_	_
universe	_	_
may	options	negation
different	_	_
,	_	_
that	_	_
is	_	_
,	_	_
the	_	_
update	_	_
ratio	_	_
,	_	_
i.e.	_	_
,	_	_
the	_	_
ratio	_	_
of	_	_
the	_	_
number	_	_
of	_	_
updating	_	_
(	_	_
deleting	_	_
or	_	_
inserting	_	_
)	_	_
data	_	_
and	_	_
original	_	_
data	_	_
,	_	_
may	options	negation
different	_	_
.	_	_

#326
Here	_	_
,	_	_
in	_	_
order	_	_
to	_	_
analyze	_	_
the	_	_
influence	_	_
of	_	_
the	_	_
update	_	_
ratio	_	_
on	_	_
the	_	_
efficiency	_	_
of	_	_
algorithms	_	_
,	_	_
we	_	_
compare	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
the	_	_
static	_	_
and	_	_
incremental	_	_
algorithms	_	_
with	_	_
different	_	_
update	_	_
ratios	_	_
.	_	_

#343
It	_	_
is	_	_
because	_	_
with	_	_
the	_	_
increase	_	_
of	_	_
ratios	_	_
,	_	_
the	_	_
size	_	_
of	_	_
the	_	_
universe	_	_
decreases	_	_
gradually	_	_
.	_	_

#344
On	_	_
the	_	_
contrary	_	_
,	_	_
for	_	_
incremental	_	_
algorithm	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
see	_	_
that	_	_
the	_	_
computational	_	_
efficiency	_	_
for	_	_
computing	_	_
approximations	_	_
is	_	_
changing	_	_
smoothly	_	_
along	_	_
with	_	_
the	_	_
increase	_	_
of	_	_
deleting	_	_
ratios	_	_
.	_	_

#345
It	_	_
is	_	_
easy	_	_
to	_	_
find	_	_
out	_	_
the	_	_
incremental	_	_
algorithm	_	_
always	_	_
performs	_	_
faster	_	_
than	_	_
the	_	_
non-incremental	_	_
algorithm	_	_
for	_	_
computing	_	_
approximations	_	_
until	_	_
a	_	_
threshold	_	_
of	_	_
the	_	_
deleting	_	_
ratio	_	_
.	_	_

#356
We	_	_
use	_	_
the	_	_
star	_	_
lines	_	_
to	_	_
denote	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
static	_	_
algorithm	_	_
(	_	_
Algorithm	_	_
1	_	_
)	_	_
on	_	_
different	_	_
sizes	_	_
of	_	_
data	_	_
sets	_	_
,	_	_
and	_	_
the	_	_
plus	_	_
lines	_	_
denote	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
incremental	_	_
algorithm	_	_
(	_	_
Algorithm	_	_
3	_	_
)	_	_
on	_	_
different	_	_
sizes	_	_
of	_	_
data	_	_
sets	_	_
when	_	_
inserting	_	_
the	_	_
objects	_	_
into	_	_
the	_	_
universe	_	_
.	_	_

#357
Obviously	_	_
,	_	_
according	_	_
to	_	_
Table	_	_
8	_	_
and	_	_
Fig	_	_
.	_	_
3	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
find	_	_
that	_	_
the	_	_
computational	_	_
time	_	_
of	_	_
the	_	_
both	_	_
algorithms	_	_
usually	_	_
increases	_	_
with	_	_
the	_	_
increasing	_	_
size	_	_
of	_	_
data	_	_
sets	_	_
.	_	_

#358
However	_	_
,	_	_
the	_	_
incremental	_	_
algorithm	_	_
is	_	_
much	_	_
faster	_	_
than	_	_
the	_	_
static	_	_
algorithm	_	_
for	_	_
computing	_	_
the	_	_
approximations	_	_
when	_	_
inserting	_	_
the	_	_
objects	_	_
into	_	_
the	_	_
universe	_	_
.	_	_

#366
Through	_	_
discussing	_	_
the	_	_
principles	_	_
of	_	_
updating	_	_
approximations	_	_
by	_	_
deleting	_	_
objects	_	_
from	_	_
the	_	_
information	_	_
system	_	_
and	_	_
inserting	_	_
objects	_	_
into	_	_
the	_	_
information	_	_
system	_	_
,	_	_
respectively	_	_
,	_	_
we	_	_
proposed	_	_
the	_	_
incremental	_	_
algorithms	_	_
for	_	_
updating	_	_
approximations	_	_
based	_	_
on	_	_
SOIS	_	_
in	_	_
terms	_	_
of	_	_
inserting	_	_
or	_	_
deleting	_	_
an	_	_
object	_	_
.	_	_

#367
Experimental	_	_
studies	_	_
pertaining	_	_
to	_	_
four	_	_
UCI	_	_
data	_	_
sets	_	_
and	_	_
two	_	_
artificial	_	_
data	_	_
sets	_	_
showed	_	_
that	_	_
the	_	_
incremental	_	_
algorithms	_	_
can	capability	_
improve	_	_
the	_	_
computational	_	_
efficiency	_	_
for	_	_
updating	_	_
approximations	_	_
when	_	_
the	_	_
object	_	_
set	_	_
in	_	_
the	_	_
information	_	_
system	_	_
varies	_	_
over	_	_
time	_	_
.	_	_

#368
In	_	_
real-world	_	_
applications	_	_
,	_	_
an	_	_
information	_	_
system	_	_
may	feasibility-options	_
be	_	_
updated	_	_
by	_	_
inserting	_	_
and	_	_
deleting	_	_
some	_	_
objects	_	_
at	_	_
the	_	_
same	_	_
time	_	_
.	_	_

#369
In	_	_
our	_	_
further	_	_
work	_	_
,	_	_
we	_	_
will	_	_
focus	_	_
on	_	_
improving	_	_
the	_	_
incremental	_	_
algorithm	_	_
for	_	_
updating	_	_
knowledge	_	_
by	_	_
deleting	_	_
and	_	_
deleting	_	_
some	_	_
objects	_	_
simultaneously	_	_
.	_	_