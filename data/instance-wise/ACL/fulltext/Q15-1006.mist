#7
Through	_	_
this	_	_
simple	_	_
mechanism	_	_
of	_	_
community-based	_	_
question	_	_
answering	_	_
,	_	_
it	_	_
is	_	_
possible	_	_
to	_	_
find	_	_
answers	_	_
to	_	_
personal	_	_
,	_	_
open-ended	_	_
,	_	_
or	_	_
highly	_	_
specialized	_	_
questions	_	_
.	_	_

#8
However	_	_
,	_	_
navigating	_	_
the	_	_
information	_	_
available	_	_
in	_	_
web-archived	_	_
data	_	_
can	options	_
be	_	_
challenging	_	_
given	_	_
the	_	_
lack	_	_
of	_	_
appropriate	_	_
search	_	_
and	_	_
browsing	_	_
facilities	_	_
.	_	_

#9
Table	_	_
1	_	_
shows	_	_
examples	_	_
typical	_	_
of	_	_
the	_	_
problems	_	_
and	_	_
proposed	_	_
solutions	_	_
found	_	_
in	_	_
troubleshooting-	_	_
oriented	_	_
online	_	_
forums	_	_
.	_	_

#10
The	_	_
first	_	_
problem	_	_
concerns	_	_
a	_	_
shaky	_	_
monitor	_	_
and	_	_
has	_	_
three	_	_
solutions	_	_
with	_	_
increasing	_	_
degrees	_	_
of	_	_
complexity	_	_
.	_	_

#11
Solution	_	_
(	_	_
1	_	_
)	_	_
is	_	_
probably	_	_
easiest	_	_
to	_	_
implement	_	_
in	_	_
terms	_	_
of	_	_
user	_	_
time	_	_
,	_	_
effort	_	_
,	_	_
and	_	_
expertise	_	_
;	_	_
solution	_	_
(	_	_
3	_	_
)	_	_
is	_	_
most	_	_
complex	_	_
(	_	_
i.e.	_	_
,	_	_
the	_	_
user	_	_
should	deontic	_
understand	_	_
what	_	_
signal	_	_
timing	_	_
is	_	_
and	_	_
The	_	_
screen	_	_
is	_	_
shaking	_	_
.	_	_

#12
1	_	_
.	_	_

#27
In	_	_
most	_	_
cases	_	_
,	_	_
the	_	_
solutions	_	_
are	_	_
not	_	_
organized	_	_
in	_	_
any	_	_
particular	_	_
fashion	_	_
,	_	_
neither	_	_
in	_	_
terms	_	_
of	_	_
content	_	_
nor	_	_
complexity	_	_
.	_	_

#28
In	_	_
this	_	_
paper	_	_
,	_	_
we	_	_
present	_	_
models	_	_
to	_	_
automatically	_	_
predict	_	_
the	_	_
complexity	_	_
of	_	_
troubleshooting	_	_
solutions	_	_
,	_	_
which	_	_
we	_	_
argue	_	_
could	capability-speculation	_
improve	_	_
user	_	_
experience	_	_
,	_	_
and	_	_
potentially	_	_
help	_	_
solve	_	_
the	_	_
problem	_	_
faster	_	_
(	_	_
e.g.	_	_
,	_	_
by	_	_
prioritizing	_	_
easier	_	_
solutions	_	_
)	_	_
.	_	_

#29
Automatically	_	_
structuring	_	_
solutions	_	_
according	_	_
to	_	_
complexity	_	_
could	capability-speculation	_
also	_	_
facilitate	_	_
search	_	_
through	_	_
large	_	_
archives	_	_
of	_	_
solutions	_	_
or	_	_
serve	_	_
as	_	_
a	_	_
summarization	_	_
tool	_	_
.	_	_

#30
From	_	_
a	_	_
linguistic	_	_
perspective	_	_
,	_	_
learning	_	_
how	_	_
complexity	_	_
is	_	_
verbalized	_	_
can	capability-feasibility	_
be	_	_
viewed	_	_
as	_	_
an	_	_
instance	_	_
of	_	_
grounded	_	_
language	_	_
acquisition	_	_
.	_	_

#31
Solutions	_	_
direct	_	_
users	_	_
to	_	_
carry	_	_
out	_	_
certain	_	_
actions	_	_
(	_	_
e.g.	_	_
,	_	_
on	_	_
their	_	_
computers	_	_
or	_	_
devices	_	_
)	_	_
and	_	_
complexity	_	_
is	_	_
an	_	_
attribute	_	_
of	_	_
these	_	_
actions	_	_
.	_	_

#33
Current	_	_
summarization	_	_
and	_	_
information	_	_
retrieval	_	_
methods	_	_
are	_	_
agnostic	_	_
of	_	_
such	_	_
types	_	_
of	_	_
text	_	_
semantics	_	_
.	_	_

#34
Moreover	_	_
,	_	_
the	_	_
models	_	_
presented	_	_
here	_	_
could	feasibility-options	_
be	_	_
used	_	_
for	_	_
analyzing	_	_
collaborative	_	_
problem	_	_
solving	_	_
and	_	_
its	_	_
social	_	_
networks	_	_
.	_	_

#35
Characterizing	_	_
the	_	_
content	_	_
of	_	_
discussion	_	_
forums	_	_
by	_	_
their	_	_
complexity	_	_
can	capability	_
provide	_	_
additional	_	_
cues	_	_
for	_	_
identifying	_	_
user	_	_
authority	_	_
and	_	_
if	_	_
there	_	_
is	_	_
a	_	_
need	_	_
for	_	_
expert	_	_
intervention	_	_
.	_	_

#36
We	_	_
begin	_	_
by	_	_
validating	_	_
that	_	_
the	_	_
task	_	_
is	_	_
indeed	_	_
meaningful	_	_
and	_	_
that	_	_
humans	_	_
perceive	_	_
varying	_	_
degrees	_	_
of	_	_
complexity	_	_
when	_	_
reading	_	_
troubleshooting	_	_
solutions	_	_
.	_	_

#66
Our	_	_
generative	_	_
models	_	_
are	_	_
trained	_	_
on	_	_
existing	_	_
archives	_	_
of	_	_
problems	_	_
with	_	_
corresponding	_	_
solutions	_	_
(	_	_
approximately	_	_
ordered	_	_
from	_	_
least	_	_
to	_	_
most	_	_
complex	_	_
)	_	_
and	_	_
learn	_	_
to	_	_
predict	_	_
an	_	_
ordering	_	_
for	_	_
new	_	_
sets	_	_
of	_	_
solutions	_	_
.	_	_

#67
This	_	_
setup	_	_
is	_	_
related	_	_
to	_	_
previous	_	_
studies	_	_
on	_	_
information	_	_
ordering	_	_
where	_	_
the	_	_
aim	_	_
is	_	_
to	_	_
learn	_	_
statistical	_	_
patterns	_	_
of	_	_
document	_	_
structure	_	_
which	_	_
can	feasibility	_
be	_	_
then	_	_
used	_	_
to	_	_
order	_	_
new	_	_
sentences	_	_
or	_	_
paragraphs	_	_
in	_	_
a	_	_
coherent	_	_
manner	_	_
.	_	_

#68
Some	_	_
approaches	_	_
approximate	_	_
the	_	_
structure	_	_
of	_	_
a	_	_
document	_	_
via	_	_
topic	_	_
and	_	_
entity	_	_
sequences	_	_
using	_	_
local	_	_
dependencies	_	_
such	_	_
as	_	_
conditional	_	_
probabilities	_	_
(	_	_
Lapata	_	_
,	_	_
2003	_	_
;	_	_
Barzilay	_	_
and	_	_
Lapata	_	_
,	_	_
2008	_	_
)	_	_
or	_	_
Hidden	_	_
Markov	_	_
Models	_	_
(	_	_
Barzilay	_	_
and	_	_
Lee	_	_
,	_	_
2004	_	_
)	_	_
.	_	_

#70
Following	_	_
this	_	_
line	_	_
of	_	_
work	_	_
,	_	_
one	_	_
of	_	_
our	_	_
models	_	_
uses	_	_
the	_	_
Generalized	_	_
Mallows	_	_
Model	_	_
(	_	_
Fligner	_	_
and	_	_
Verducci	_	_
,	_	_
1986	_	_
)	_	_
in	_	_
its	_	_
generative	_	_
process	_	_
which	_	_
allows	_	_
to	_	_
model	_	_
permutations	_	_
of	_	_
complexity	_	_
levels	_	_
in	_	_
the	_	_
training	_	_
data	_	_
.	_	_

#71
3	_	_
Problem	_	_
formulation	_	_
Our	_	_
aim	_	_
in	_	_
this	_	_
work	_	_
is	_	_
to	_	_
learn	_	_
models	_	_
which	_	_
can	capability	_
automatically	_	_
reorder	_	_
solutions	_	_
to	_	_
a	_	_
problem	_	_
from	_	_
low	_	_
to	_	_
high	_	_
complexity	_	_
.	_	_

#72
Let	_	_
G	_	_
=	_	_
(	_	_
c1	_	_
,	_	_
c2	_	_
,	_	_
..	_	_
cN	_	_
)	_	_
be	_	_
a	_	_
collection	_	_
of	_	_
solutions	_	_
to	_	_
a	_	_
specific	_	_
problem	_	_
.	_	_

#81
The	_	_
problems	_	_
were	_	_
mostly	_	_
frequently	_	_
asked	_	_
questions	_	_
(	_	_
FAQs	_	_
)	_	_
referring	_	_
to	_	_
malfunctioning	_	_
personal	_	_
computers	_	_
and	_	_
smart	_	_
phones	_	_
.	_	_

#82
The	_	_
solutions	_	_
were	_	_
provided	_	_
by	_	_
computer	_	_
experts	_	_
or	_	_
experienced	_	_
users	_	_
in	_	_
the	_	_
absence	_	_
1The	_	_
corpus	_	_
can	feasibility	_
be	_	_
downloaded	_	_
from	_	_
http	_	_
:	_	_
//www.homepages.inf.ed.ac.uk/alouis/	_	_
solutionComplexity.html	_	_
.	_	_

#83
2	_	_
3	_	_
4	_	_
5	_	_
6	_	_
7	_	_
8	_	_
9	_	_
10	_	_
11	_	_
12	_	_
13	_	_
14	_	_
15	_	_
16	_	_
Solution	_	_
set	_	_
size	_	_
Fr	_	_
eq	_	_
ue	_	_
nc	_	_
y	_	_
Figure	_	_
1	_	_
:	_	_
Histogram	_	_
of	_	_
solution	_	_
set	_	_
sizes	_	_
of	_	_
any	_	_
interaction	_	_
with	_	_
other	_	_
users	_	_
or	_	_
their	_	_
devices	_	_
and	_	_
thus	_	_
constitute	_	_
a	_	_
generic	_	_
list	_	_
of	_	_
steps	_	_
to	_	_
try	_	_
out	_	_
.	_	_

#92
The	_	_
relative	_	_
complexity	_	_
of	_	_
solutions	_	_
for	_	_
the	_	_
same	_	_
problem	_	_
is	_	_
observed	_	_
,	_	_
however	_	_
,	_	_
the	_	_
relative	_	_
complexity	_	_
of	_	_
solutions	_	_
across	_	_
different	_	_
problems	_	_
is	_	_
unknown	_	_
.	_	_

#93
For	_	_
example	_	_
,	_	_
a	_	_
hardware	_	_
issue	_	_
may	feasibility-speculation	_
generally	_	_
receive	_	_
highly	_	_
complex	_	_
solutions	_	_
whereas	_	_
a	_	_
microphone	_	_
issue	_	_
mostly	_	_
simple	_	_
ones	_	_
.	_	_

#94
3.2	_	_
Task	_	_
Validation	_	_
In	_	_
this	_	_
section	_	_
,	_	_
we	_	_
detail	_	_
an	_	_
annotation	_	_
experiment	_	_
where	_	_
we	_	_
asked	_	_
human	_	_
judges	_	_
to	_	_
rank	_	_
the	_	_
randomly	_	_
permuted	_	_
contents	_	_
of	_	_
a	_	_
solution	_	_
set	_	_
according	_	_
to	_	_
perceived	_	_
complexity	_	_
.	_	_

#110
The	_	_
table	_	_
shows	_	_
fair	_	_
agreement	_	_
between	_	_
the	_	_
annotators	_	_
confirming	_	_
that	_	_
this	_	_
is	_	_
a	_	_
reasonable	_	_
task	_	_
for	_	_
humans	_	_
to	_	_
do	_	_
.	_	_

#111
As	_	_
can	rhetorical	_
be	_	_
seen	_	_
,	_	_
there	_	_
are	_	_
some	_	_
individual	_	_
differences	_	_
,	_	_
with	_	_
the	_	_
inter-annotator	_	_
agreement	_	_
varying	_	_
from	_	_
0.421	_	_
(	_	_
for	_	_
A	_	_
,	_	_
B	_	_
)	_	_
to	_	_
0.625	_	_
(	_	_
for	_	_
A	_	_
,	_	_
D	_	_
)	_	_
.	_	_

#112
The	_	_
last	_	_
column	_	_
in	_	_
Table	_	_
2	_	_
reports	_	_
the	_	_
agreement	_	_
between	_	_
our	_	_
annotator	_	_
rankings	_	_
and	_	_
the	_	_
original	_	_
ordering	_	_
of	_	_
solutions	_	_
in	_	_
the	_	_
FAQ	_	_
data	_	_
.	_	_

#113
Although	_	_
there	_	_
is	_	_
fair	_	_
agreement	_	_
with	_	_
the	_	_
FAQ	_	_
providing	_	_
support	_	_
for	_	_
its	_	_
use	_	_
as	_	_
a	_	_
gold-standard	_	_
,	_	_
the	_	_
overall	_	_
τ	_	_
values	_	_
are	_	_
lower	_	_
compared	_	_
to	_	_
inter-annotator	_	_
agreement	_	_
.	_	_

#114
This	_	_
implies	_	_
that	_	_
the	_	_
ordering	_	_
may	speculation	negation
not	_	_
be	_	_
strictly	_	_
increasing	_	_
in	_	_
complexity	_	_
in	_	_
our	_	_
dataset	_	_
and	_	_
that	_	_
our	_	_
models	_	_
should	deontic	_
allow	_	_
for	_	_
some	_	_
flexibility	_	_
during	_	_
learning	_	_
.	_	_

#115
Several	_	_
reasons	_	_
contributed	_	_
to	_	_
disagreements	_	_
between	_	_
annotators	_	_
and	_	_
with	_	_
the	_	_
FAQ	_	_
ordering	_	_
,	_	_
such	_	_
as	_	_
the	_	_
users’	_	_
expertise	_	_
,	_	_
personal	_	_
preferences	_	_
,	_	_
or	_	_
the	_	_
nature	_	_
of	_	_
the	_	_
solutions	_	_
.	_	_

#127
The	_	_
main	_	_
difference	_	_
between	_	_
the	_	_
two	_	_
models	_	_
is	_	_
in	_	_
the	_	_
way	_	_
they	_	_
capture	_	_
the	_	_
ordering	_	_
between	_	_
levels	_	_
.	_	_

#128
Our	_	_
first	_	_
model	_	_
infers	_	_
a	_	_
distribution	_	_
for	_	_
each	_	_
level	_	_
over	_	_
the	_	_
positions	_	_
at	_	_
which	_	_
a	_	_
solution	_	_
with	_	_
that	_	_
complexity	_	_
can	capability	_
occur	_	_
and	_	_
uses	_	_
this	_	_
distribution	_	_
to	_	_
order	_	_
the	_	_
levels	_	_
.	_	_

#129
Levels	_	_
which	_	_
on	_	_
average	_	_
occur	_	_
at	_	_
greater	_	_
positions	_	_
have	_	_
higher	_	_
complexity	_	_
.	_	_

#175
This	_	_
is	_	_
done	_	_
by	_	_
computing	_	_
an	_	_
inversion	_	_
vector	_	_
representation	_	_
of	_	_
d	_	_
(	_	_
π	_	_
,	_	_
σ	_	_
)	_	_
.	_	_

#176
A	_	_
permutation	_	_
π	_	_
of	_	_
n	_	_
items	_	_
can	capability-feasibility	_
be	_	_
equivalently	_	_
represented	_	_
by	_	_
a	_	_
vector	_	_
of	_	_
inversion	_	_
counts	_	_
v	_	_
of	_	_
length	_	_
n−1	_	_
,	_	_
where	_	_
each	_	_
component	_	_
vi	_	_
equals	_	_
the	_	_
number	_	_
of	_	_
items	_	_
j	_	_
>	_	_
i	_	_
that	_	_
occur	_	_
before	_	_
item	_	_
i	_	_
in	_	_
π.	_	_
The	_	_
dimension	_	_
of	_	_
v	_	_
is	_	_
n−	_	_
1	_	_
since	_	_
there	_	_
can	feasibility	_
be	_	_
no	_	_
items	_	_
greater	_	_
than	_	_
the	_	_
highest	_	_
value	_	_
element	_	_
.	_	_

#177
A	_	_
unique	_	_
inversion	_	_
vector	_	_
can	feasibility	_
be	_	_
computed	_	_
for	_	_
any	_	_
permutation	_	_
and	_	_
vice	_	_
versa	_	_
,	_	_
and	_	_
the	_	_
sum	_	_
of	_	_
the	_	_
inversion	_	_
vector	_	_
elements	_	_
is	_	_
equal	_	_
to	_	_
d	_	_
(	_	_
π	_	_
,	_	_
σ	_	_
)	_	_
.	_	_

#178
Each	_	_
vi	_	_
is	_	_
also	_	_
given	_	_
a	_	_
separate	_	_
dispersion	_	_
penalty	_	_
ρi	_	_
.	_	_

#181
Word	_	_
level	_	_
For	_	_
each	_	_
word	_	_
wijk	_	_
in	_	_
solution	_	_
xij	_	_
,	_	_
-	_	_
Draw	_	_
a	_	_
switch	_	_
value	_	_
to	_	_
indicate	_	_
if	_	_
the	_	_
word	_	_
is	_	_
problem-	_	_
or	_	_
complexity-specific	_	_
,	_	_
sijk	_	_
∼	_	_
Binomial	_	_
(	_	_
ψ	_	_
)	_	_
-	_	_
If	_	_
sijk	_	_
=	_	_
0	_	_
,	_	_
draw	_	_
wijk	_	_
∼	_	_
Multinomial	_	_
(	_	_
φzij	_	_
)	_	_
-	_	_
If	_	_
sijk	_	_
=	_	_
1	_	_
,	_	_
draw	_	_
wijk	_	_
∼	_	_
Multinomial	_	_
(	_	_
λi	_	_
)	_	_
Figure	_	_
3	_	_
:	_	_
Generative	_	_
process	_	_
for	_	_
Permutation	_	_
Model	_	_
.	_	_

#182
And	_	_
can	feasibility	_
be	_	_
further	_	_
factorized	_	_
into	_	_
item-specific	_	_
components	_	_
:	_	_
GMMi	_	_
(	_	_
vi|ρi	_	_
)	_	_
∝	_	_
e−ρivi	_	_
(	_	_
3	_	_
)	_	_
Since	_	_
the	_	_
GMM	_	_
is	_	_
a	_	_
member	_	_
of	_	_
the	_	_
exponential	_	_
family	_	_
,	_	_
a	_	_
conjugate	_	_
prior	_	_
can	feasibility	_
be	_	_
defined	_	_
for	_	_
each	_	_
dispersion	_	_
parameter	_	_
ρi	_	_
which	_	_
allows	_	_
for	_	_
efficient	_	_
inference	_	_
.	_	_

#183
We	_	_
refer	_	_
the	_	_
interested	_	_
reader	_	_
to	_	_
Chen	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2009a	_	_
)	_	_
for	_	_
details	_	_
on	_	_
the	_	_
prior	_	_
distribution	_	_
and	_	_
normalization	_	_
factor	_	_
for	_	_
the	_	_
GMM	_	_
distribution	_	_
.	_	_

#196
The	_	_
z	_	_
assignments	_	_
are	_	_
deterministically	_	_
computed	_	_
by	_	_
ordering	_	_
the	_	_
elements	_	_
of	_	_
b	_	_
according	_	_
to	_	_
the	_	_
permutation	_	_
defined	_	_
by	_	_
v.	_	_
Given	_	_
the	_	_
conditional	_	_
independencies	_	_
of	_	_
our	_	_
model	_	_
,	_	_
the	_	_
posterior	_	_
is	_	_
proportional	_	_
to	_	_
:	_	_
L∏	_	_
m=1	_	_
[	_	_
P	_	_
(	_	_
φm|α	_	_
)	_	_
]	_	_
×	_	_
L−1∏	_	_
r=1	_	_
[	_	_
P	_	_
(	_	_
ρr|µ0	_	_
,	_	_
v0r	_	_
)	_	_
]	_	_
×	_	_
P	_	_
(	_	_
ψ|δ0	_	_
,	_	_
δ1	_	_
)	_	_
×	_	_
N∏	_	_
i=1	_	_
[	_	_
P	_	_
(	_	_
θi|β	_	_
)	_	_
×	_	_
P	_	_
(	_	_
λi|ω	_	_
)	_	_
×	_	_
P	_	_
(	_	_
vi|ρ	_	_
)	_	_
×	_	_
P	_	_
(	_	_
bi|θi	_	_
)	_	_
]	_	_
×	_	_
N∏	_	_
i=1	_	_
NPi∏	_	_
j=1	_	_
|xij	_	_
|∏	_	_
k=1	_	_
[	_	_
P	_	_
(	_	_
sijk|ψ	_	_
)	_	_
P	_	_
(	_	_
wijk|sijk	_	_
,	_	_
φzij	_	_
,	_	_
λi	_	_
)	_	_
]	_	_
where	_	_
L	_	_
is	_	_
the	_	_
number	_	_
of	_	_
complexity	_	_
levels	_	_
,	_	_
N	_	_
the	_	_
total	_	_
problems	_	_
in	_	_
the	_	_
training	_	_
corpus	_	_
,	_	_
NPi	_	_
the	_	_
size	_	_
of	_	_
solution	_	_
set	_	_
for	_	_
problem	_	_
Pi	_	_
,	_	_
and	_	_
|xij	_	_
|	_	_
the	_	_
number	_	_
of	_	_
words	_	_
in	_	_
solution	_	_
xij	_	_
.	_	_

#197
A	_	_
simplified	_	_
posterior	_	_
can	feasibility	_
be	_	_
obtained	_	_
by	_	_
integrating	_	_
out	_	_
the	_	_
ψ	_	_
,	_	_
φ	_	_
,	_	_
λ	_	_
,	_	_
and	_	_
θ	_	_
distributions	_	_
which	_	_
is	_	_
proportional	_	_
to	_	_
:	_	_
N∏	_	_
i=1	_	_
L∏	_	_
m=1	_	_
Γ	_	_
(	_	_
Rmi	_	_
+βm	_	_
)	_	_
Γ	_	_
(	_	_
L∑	_	_
m=1	_	_
Rmi	_	_
+βm	_	_
)	_	_
×	_	_
L−1∏	_	_
r=1	_	_
GMM0	_	_
(	_	_
ρr|µ0	_	_
,	_	_
v0r	_	_
)	_	_
×	_	_
N∏	_	_
i=1	_	_
L−1∏	_	_
r=1	_	_
GMMr	_	_
(	_	_
vir|ρr	_	_
)	_	_
×	_	_
1∏	_	_
u=0	_	_
Γ	_	_
(	_	_
Tu+δu	_	_
)	_	_
Γ	_	_
(	_	_
1∑	_	_
u=0	_	_
Tu+δu	_	_
)	_	_
×	_	_
L∏	_	_
m=1	_	_
V∏	_	_
v=1	_	_
Γ	_	_
(	_	_
T	_	_
0m	_	_
(	_	_
v	_	_
)	_	_
+αv	_	_
)	_	_
Γ	_	_
(	_	_
V∑	_	_
v=1	_	_
T	_	_
0m	_	_
(	_	_
v	_	_
)	_	_
+αv	_	_
)	_	_
×	_	_
N∏	_	_
i=1	_	_
V∏	_	_
v=1	_	_
Γ	_	_
(	_	_
T	_	_
1i	_	_
(	_	_
v	_	_
)	_	_
+ωv	_	_
)	_	_
Γ	_	_
(	_	_
V∑	_	_
v=1	_	_
T	_	_
1i	_	_
(	_	_
v	_	_
)	_	_
+ωv	_	_
)	_	_
where	_	_
theR	_	_
and	_	_
T	_	_
counts	_	_
are	_	_
defined	_	_
similarly	_	_
as	_	_
in	_	_
the	_	_
Expected	_	_
Position	_	_
model	_	_
.	_	_

#198
We	_	_
use	_	_
collapsed	_	_
Gibbs	_	_
sampling	_	_
to	_	_
compute	_	_
samples	_	_
from	_	_
this	_	_
posterior	_	_
.	_	_

#202
Then	_	_
the	_	_
inversion	_	_
vector	_	_
vi	_	_
is	_	_
created	_	_
by	_	_
sampling	_	_
each	_	_
vij	_	_
in	_	_
turn	_	_
.	_	_

#203
At	_	_
this	_	_
point	_	_
,	_	_
the	_	_
complexity	_	_
level	_	_
assignments	_	_
zi	_	_
can	feasibility	_
be	_	_
done	_	_
deterministically	_	_
given	_	_
bi	_	_
and	_	_
vi	_	_
.	_	_

#204
Then	_	_
the	_	_
words	_	_
in	_	_
each	_	_
solution	_	_
set	_	_
are	_	_
sampled	_	_
one	_	_
at	_	_
a	_	_
time	_	_
.	_	_

#219
1.0	_	_
Make	_	_
sure	_	_
your	_	_
computer	_	_
has	_	_
at	_	_
least	_	_
50MB	_	_
of	_	_
free	_	_
hard	_	_
drive	_	_
space	_	_
.	_	_

#220
If	_	_
your	_	_
computer	_	_
has	_	_
less	_	_
than	_	_
50MB	_	_
free	_	_
,	_	_
it	_	_
may	capability-options	_
cause	_	_
the	_	_
computer	_	_
to	_	_
operate	_	_
more	_	_
slowly	_	_
.	_	_

#221
1.0	_	_
If	_	_
the	_	_
iPhone	_	_
is	_	_
in	_	_
a	_	_
protective	_	_
case	_	_
,	_	_
remove	_	_
it	_	_
from	_	_
the	_	_
case	_	_
.	_	_

#238
Expected	_	_
complexity	_	_
values	_	_
are	_	_
shown	_	_
in	_	_
the	_	_
first	_	_
column	_	_
.	_	_

#239
can	feasibility	negation
compute	_	_
the	_	_
expected	_	_
complexity	_	_
for	_	_
any	_	_
solution	_	_
text	_	_
,	_	_
x.	_	_
This	_	_
value	_	_
is	_	_
given	_	_
by	_	_
[	_	_
∑L	_	_
m=1m	_	_
∗	_	_
p	_	_
(	_	_
m|x	_	_
)	_	_
]	_	_
.	_	_

#240
We	_	_
estimate	_	_
the	_	_
second	_	_
term	_	_
,	_	_
p	_	_
(	_	_
m|x	_	_
)	_	_
,	_	_
using	_	_
a	_	_
)	_	_
the	_	_
complexity	_	_
level	_	_
language	_	_
models	_	_
φm	_	_
and	_	_
b	_	_
)	_	_
a	_	_
prior	_	_
over	_	_
levels	_	_
given	_	_
by	_	_
the	_	_
overall	_	_
frequency	_	_
of	_	_
different	_	_
levels	_	_
on	_	_
the	_	_
training	_	_
data	_	_
.	_	_

#242
We	_	_
find	_	_
that	_	_
the	_	_
model	_	_
is	_	_
able	_	_
to	_	_
distinguish	_	_
intuitively	_	_
complex	_	_
solutions	_	_
from	_	_
simpler	_	_
ones	_	_
.	_	_

#243
Aside	_	_
from	_	_
measuring	_	_
expected	_	_
complexity	_	_
in	_	_
absolute	_	_
terms	_	_
,	_	_
our	_	_
models	_	_
can	capability	_
also	_	_
also	_	_
order	_	_
solutions	_	_
in	_	_
terms	_	_
of	_	_
relative	_	_
complexity	_	_
(	_	_
see	_	_
the	_	_
evaluation	_	_
in	_	_
Section	_	_
5	_	_
)	_	_
and	_	_
assign	_	_
a	_	_
complexity	_	_
value	_	_
to	_	_
a	_	_
problem	_	_
as	_	_
a	_	_
whole	_	_
.	_	_

#244
Low	_	_
Complexity	_	_
Problems	_	_
-	_	_
Computer	_	_
appears	_	_
locked	_	_
up	_	_
and	_	_
will	_	_
not	_	_
turn	_	_
off	_	_
when	_	_
the	_	_
power	_	_
button	_	_
is	_	_
pressed	_	_
.	_	_

#249
-	_	_
I	_	_
get	_	_
an	_	_
error	_	_
message	_	_
that	_	_
says	_	_
that	_	_
there	_	_
is	_	_
not	_	_
enough	_	_
disk	_	_
space	_	_
to	_	_
publish	_	_
the	_	_
movie	_	_
.	_	_

#250
What	_	_
can	feasibility	_
I	_	_
do	_	_
?	_	_

#251
-	_	_
Power	_	_
LED	_	_
flashes	_	_
Red	_	_
four	_	_
times	_	_
,	_	_
once	_	_
every	_	_
second	_	_
,	_	_
followed	_	_
by	_	_
two	_	_
second	_	_
pause	_	_
,	_	_
and	_	_
computer	_	_
beeps	_	_
four	_	_
times	_	_
.	_	_

#255
Nevertheless	_	_
,	_	_
the	_	_
models	_	_
are	_	_
able	_	_
to	_	_
rate	_	_
solutions	_	_
on	_	_
a	_	_
global	_	_
scale	_	_
while	_	_
accommodating	_	_
problem-specific	_	_
ordering	_	_
sequences	_	_
.	_	_

#256
Specifically	_	_
,	_	_
we	_	_
can	feasibility	_
compute	_	_
the	_	_
expected	_	_
complexity	_	_
of	_	_
the	_	_
solution	_	_
set	_	_
for	_	_
problem	_	_
i	_	_
,	_	_
using	_	_
the	_	_
inferred	_	_
distribution	_	_
over	_	_
levels	_	_
θi	_	_
:	_	_
∑L	_	_
m=1m	_	_
×	_	_
θim	_	_
.	_	_

#257
Table	_	_
5	_	_
shows	_	_
the	_	_
complexity	_	_
of	_	_
different	_	_
problems	_	_
as	_	_
predicted	_	_
by	_	_
the	_	_
position	_	_
model	_	_
(	_	_
with	_	_
10	_	_
levels	_	_
)	_	_
.	_	_

#258
As	_	_
can	rhetorical	negation
be	_	_
seen	_	_
,	_	_
easy	_	_
problems	_	_
are	_	_
associated	_	_
with	_	_
accessory	_	_
components	_	_
(	_	_
e.g.	_	_
,	_	_
mouse	_	_
or	_	_
keyboard	_	_
)	_	_
,	_	_
whereas	_	_
complex	_	_
problems	_	_
are	_	_
related	_	_
to	_	_
core	_	_
hardware	_	_
and	_	_
operating	_	_
system	_	_
errors	_	_
.	_	_

#259
5	_	_
Evaluation	_	_
Experiments	_	_
In	_	_
the	_	_
previous	_	_
section	_	_
,	_	_
we	_	_
showed	_	_
how	_	_
our	_	_
models	_	_
can	capability	_
assign	_	_
an	_	_
expected	_	_
complexity	_	_
value	_	_
to	_	_
a	_	_
solution	_	_
text	_	_
or	_	_
an	_	_
entire	_	_
problem	_	_
.	_	_

#260
Now	_	_
,	_	_
we	_	_
present	_	_
evaluations	_	_
based	_	_
on	_	_
model	_	_
ability	_	_
to	_	_
order	_	_
solutions	_	_
according	_	_
to	_	_
relative	_	_
complexity	_	_
.	_	_

#264
Firstly	_	_
,	_	_
the	_	_
likelihood	_	_
under	_	_
our	_	_
models	_	_
is	_	_
intractable	_	_
to	_	_
compute	_	_
,	_	_
so	_	_
we	_	_
would	_	_
need	_	_
to	_	_
adopt	_	_
a	_	_
simpler	_	_
and	_	_
less	_	_
precise	_	_
approximation	_	_
(	_	_
such	_	_
as	_	_
the	_	_
Hidden	_	_
Markov	_	_
Model	_	_
discussed	_	_
below	_	_
)	_	_
.	_	_

#265
Secondly	_	_
,	_	_
when	_	_
the	_	_
solution	_	_
set	_	_
size	_	_
is	_	_
large	_	_
,	_	_
we	_	_
can	feasibility	negation
not	_	_
enumerate	_	_
all	_	_
permutations	_	_
and	_	_
need	_	_
to	_	_
adopt	_	_
an	_	_
approximate	_	_
search	_	_
procedure	_	_
.	_	_

#266
We	_	_
opted	_	_
for	_	_
a	_	_
discriminative	_	_
ranking	_	_
approach	_	_
instead	_	_
which	_	_
uses	_	_
the	_	_
generative	_	_
models	_	_
to	_	_
compute	_	_
a	_	_
rich	_	_
set	_	_
of	_	_
features	_	_
.	_	_

#286
The	_	_
feature	_	_
value	_	_
is	_	_
the	_	_
word’s	_	_
expected	_	_
level	_	_
multiplied	_	_
by	_	_
the	_	_
probability	_	_
of	_	_
the	_	_
word	_	_
in	_	_
the	_	_
solution	_	_
text	_	_
.	_	_

#287
Length	_	_
We	_	_
also	_	_
investigated	_	_
whether	_	_
solution	_	_
length	_	_
is	_	_
a	_	_
predictor	_	_
of	_	_
complexity	_	_
(	_	_
e.g.	_	_
,	_	_
simple	_	_
solutions	_	_
may	speculation	_
vary	_	_
in	_	_
length	_	_
and	_	_
amount	_	_
of	_	_
detail	_	_
from	_	_
complex	_	_
ones	_	_
)	_	_
.	_	_

#288
We	_	_
devised	_	_
three	_	_
features	_	_
based	_	_
on	_	_
the	_	_
number	_	_
of	_	_
sentences	_	_
(	_	_
within	_	_
a	_	_
solution	_	_
)	_	_
,	_	_
words	_	_
,	_	_
and	_	_
average	_	_
sentence	_	_
length	_	_
.	_	_

#314
We	_	_
show	_	_
results	_	_
for	_	_
all	_	_
solution	_	_
sets	_	_
(	_	_
All	_	_
)	_	_
and	_	_
broken	_	_
down	_	_
into	_	_
different	_	_
set	_	_
sizes	_	_
(	_	_
e.g.	_	_
,	_	_
2–3	_	_
,	_	_
4–5	_	_
)	_	_
.	_	_

#315
As	_	_
can	rhetorical	negation
be	_	_
seen	_	_
,	_	_
the	_	_
expected	_	_
position	_	_
model	_	_
obtains	_	_
an	_	_
overall	_	_
τ	_	_
of	_	_
0.30	_	_
and	_	_
the	_	_
permutation	_	_
model	_	_
of	_	_
0.26	_	_
.	_	_

#316
These	_	_
values	_	_
lie	_	_
in	_	_
the	_	_
range	_	_
of	_	_
human	_	_
annotator	_	_
agreement	_	_
with	_	_
the	_	_
FAQ	_	_
order	_	_
(	_	_
see	_	_
Section	_	_
3.2	_	_
)	_	_
.	_	_

#344
Interestingly	_	_
,	_	_
the	_	_
generative	_	_
models	_	_
are	_	_
better	_	_
at	_	_
predicting	_	_
the	_	_
most	_	_
difficult	_	_
solution	_	_
(	_	_
35–37	_	_
%	_	_
)	_	_
compared	_	_
to	_	_
the	_	_
easiest	_	_
one	_	_
(	_	_
28–36	_	_
%	_	_
)	_	_
.	_	_

#345
One	_	_
reason	_	_
for	_	_
this	_	_
could	speculation	_
be	_	_
that	_	_
there	_	_
are	_	_
multiple	_	_
easy	_	_
solutions	_	_
to	_	_
try	_	_
out	_	_
but	_	_
the	_	_
most	_	_
difficult	_	_
one	_	_
is	_	_
probably	_	_
more	_	_
unique	_	_
and	_	_
so	_	_
easier	_	_
to	_	_
identify	_	_
.	_	_

#346
Overall	_	_
,	_	_
we	_	_
observe	_	_
that	_	_
the	_	_
two	_	_
generative	_	_
models	_	_
perform	_	_
comparably	_	_
,	_	_
with	_	_
Position	_	_
having	_	_
a	_	_
slight	_	_
lead	_	_
over	_	_
Permutation	_	_
.	_	_

#348
Also	_	_
note	_	_
that	_	_
in	_	_
the	_	_
Permutation	_	_
model	_	_
,	_	_
multiple	_	_
solutions	_	_
with	_	_
the	_	_
same	_	_
complexity	_	_
level	_	_
are	_	_
grouped	_	_
together	_	_
in	_	_
a	_	_
solution	_	_
set	_	_
.	_	_

#349
This	_	_
property	_	_
of	_	_
the	_	_
model	_	_
is	_	_
advantageous	_	_
for	_	_
ordering	_	_
as	_	_
solutions	_	_
with	_	_
similar	_	_
complexity	_	_
should	deontic	_
be	_	_
placed	_	_
adjacent	_	_
to	_	_
each	_	_
other	_	_
.	_	_

#350
At	_	_
the	_	_
same	_	_
time	_	_
,	_	_
if	_	_
levels	_	_
1	_	_
and	_	_
2	_	_
are	_	_
flipped	_	_
in	_	_
the	_	_
permutation	_	_
sampled	_	_
from	_	_
the	_	_
GMM	_	_
,	_	_
then	_	_
any	_	_
solution	_	_
with	_	_
complexity	_	_
level	_	_
1	_	_
will	_	_
be	_	_
ordered	_	_
after	_	_
the	_	_
solution	_	_
with	_	_
complexity	_	_
2	_	_
.	_	_

#351
The	_	_
Position	_	_
model	_	_
on	_	_
the	_	_
other	_	_
hand	_	_
,	_	_
contains	_	_
no	_	_
special	_	_
facility	_	_
for	_	_
grouping	_	_
solutions	_	_
with	_	_
the	_	_
same	_	_
complexity	_	_
.	_	_

#352
In	_	_
sum	_	_
,	_	_
Position	_	_
can	capability	_
more	_	_
flexibly	_	_
assign	_	_
complexity	_	_
levels	_	_
to	_	_
individual	_	_
solutions	_	_
.	_	_

#353
6	_	_
Conclusion	_	_
This	_	_
work	_	_
contains	_	_
a	_	_
first	_	_
proposal	_	_
to	_	_
organize	_	_
and	_	_
navigate	_	_
crowd-generated	_	_
troubleshooting	_	_
data	_	_
according	_	_
to	_	_
the	_	_
complexity	_	_
of	_	_
the	_	_
troubleshooting	_	_
action	_	_
.	_	_

#354
We	_	_
showed	_	_
that	_	_
users	_	_
perceive	_	_
and	_	_
agree	_	_
on	_	_
the	_	_
complexity	_	_
of	_	_
alternative	_	_
suggestions	_	_
,	_	_
and	_	_
presented	_	_
Bayesian	_	_
generative	_	_
models	_	_
of	_	_
the	_	_
troubleshooting	_	_
data	_	_
which	_	_
can	capability	_
sort	_	_
solutions	_	_
by	_	_
complexity	_	_
with	_	_
a	_	_
performance	_	_
close	_	_
to	_	_
human	_	_
agreement	_	_
on	_	_
the	_	_
task	_	_
.	_	_

#355
Our	_	_
results	_	_
suggest	_	_
that	_	_
search	_	_
and	_	_
summarization	_	_
tools	_	_
for	_	_
troubleshooting	_	_
forum	_	_
archives	_	_
can	feasibility-options	_
be	_	_
greatly	_	_
improved	_	_
by	_	_
automatically	_	_
predicting	_	_
and	_	_
using	_	_
the	_	_
complexity	_	_
of	_	_
the	_	_
posted	_	_
solutions	_	_
.	_	_

#356
It	_	_
should	deontic	_
also	_	_
be	_	_
possible	_	_
to	_	_
build	_	_
broad	_	_
coverage	_	_
automated	_	_
troubleshooting	_	_
systems	_	_
by	_	_
bootstrapping	_	_
from	_	_
conversations	_	_
in	_	_
discussion	_	_
forums	_	_
.	_	_

#357
In	_	_
the	_	_
future	_	_
,	_	_
we	_	_
plan	_	_
to	_	_
deploy	_	_
our	_	_
models	_	_
in	_	_
several	_	_
tasks	_	_
such	_	_
as	_	_
user	_	_
authority	_	_
prediction	_	_
,	_	_
expert	_	_
intervention	_	_
,	_	_
and	_	_
thread	_	_
analysis	_	_
.	_	_