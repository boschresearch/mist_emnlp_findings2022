#0
Towards	_	_
a	_	_
Formal	_	_
Distributional	_	_
Semantics	_	_
:	_	_
Simulating	_	_
Logical	_	_
Calculi	_	_
with	_	_
Tensors	_	_
Edward	_	_
Grefenstette	_	_
University	_	_
of	_	_
Oxford	_	_
Department	_	_
of	_	_
Computer	_	_
Science	_	_
Wolfson	_	_
Building	_	_
,	_	_
Parks	_	_
Road	_	_
Oxford	_	_
OX1	_	_
3QD	_	_
,	_	_
UK	_	_
edward.grefenstette	_	_
@	_	_
cs.ox.ac.uk	_	_
Abstract	_	_
The	_	_
development	_	_
of	_	_
compositional	_	_
distributional	_	_
models	_	_
of	_	_
semantics	_	_
reconciling	_	_
the	_	_
empirical	_	_
aspects	_	_
of	_	_
distributional	_	_
semantics	_	_
with	_	_
the	_	_
compositional	_	_
aspects	_	_
of	_	_
formal	_	_
semantics	_	_
is	_	_
a	_	_
popular	_	_
topic	_	_
in	_	_
the	_	_
contemporary	_	_
literature	_	_
.	_	_

#1
This	_	_
paper	_	_
seeks	_	_
to	_	_
bring	_	_
this	_	_
reconciliation	_	_
one	_	_
step	_	_
further	_	_
by	_	_
showing	_	_
how	_	_
the	_	_
mathematical	_	_
constructs	_	_
commonly	_	_
used	_	_
in	_	_
compositional	_	_
distributional	_	_
models	_	_
,	_	_
such	_	_
as	_	_
tensors	_	_
and	_	_
matrices	_	_
,	_	_
can	feasibility	_
be	_	_
used	_	_
to	_	_
simulate	_	_
different	_	_
aspects	_	_
of	_	_
predicate	_	_
logic	_	_
.	_	_

#2
This	_	_
paper	_	_
discusses	_	_
how	_	_
the	_	_
canonical	_	_
isomorphism	_	_
between	_	_
tensors	_	_
and	_	_
multilinear	_	_
maps	_	_
can	feasibility	_
be	_	_
exploited	_	_
to	_	_
simulate	_	_
a	_	_
full-blown	_	_
quantifier-free	_	_
predicate	_	_
calculus	_	_
using	_	_
tensors	_	_
.	_	_

#3
It	_	_
provides	_	_
tensor	_	_
interpretations	_	_
of	_	_
the	_	_
set	_	_
of	_	_
logical	_	_
connectives	_	_
required	_	_
to	_	_
model	_	_
propositional	_	_
calculi	_	_
.	_	_

#4
It	_	_
suggests	_	_
a	_	_
variant	_	_
of	_	_
these	_	_
tensor	_	_
calculi	_	_
capable	_	_
of	_	_
modelling	_	_
quantifiers	_	_
,	_	_
using	_	_
few	_	_
non-linear	_	_
operations	_	_
.	_	_

#5
It	_	_
finally	_	_
discusses	_	_
the	_	_
relation	_	_
between	_	_
these	_	_
variants	_	_
,	_	_
and	_	_
how	_	_
this	_	_
relation	_	_
should	deontic	_
constitute	_	_
the	_	_
subject	_	_
of	_	_
future	_	_
work	_	_
.	_	_

#6
1	_	_
Introduction	_	_
The	_	_
topic	_	_
of	_	_
compositional	_	_
distributional	_	_
semantics	_	_
has	_	_
been	_	_
growing	_	_
in	_	_
popularity	_	_
over	_	_
the	_	_
past	_	_
few	_	_
years	_	_
.	_	_

#16
In	_	_
Section	_	_
3	_	_
,	_	_
I	_	_
give	_	_
mathematical	_	_
foundations	_	_
for	_	_
the	_	_
rest	_	_
of	_	_
the	_	_
paper	_	_
by	_	_
introducing	_	_
tensors	_	_
and	_	_
tensor	_	_
contraction	_	_
as	_	_
a	_	_
way	_	_
of	_	_
modelling	_	_
multilinear	_	_
functions	_	_
.	_	_

#17
In	_	_
Section	_	_
4	_	_
,	_	_
I	_	_
discuss	_	_
how	_	_
predicates	_	_
,	_	_
relations	_	_
,	_	_
and	_	_
logical	_	_
atoms	_	_
of	_	_
a	_	_
quantifier-free	_	_
predicate	_	_
calculus	_	_
can	feasibility	_
be	_	_
modelled	_	_
with	_	_
tensors	_	_
.	_	_

#18
In	_	_
Section	_	_
5	_	_
,	_	_
I	_	_
present	_	_
tensorial	_	_
representations	_	_
of	_	_
logical	_	_
operations	_	_
for	_	_
a	_	_
complete	_	_
propositional	_	_
calculus	_	_
.	_	_

#20
I	_	_
conclude	_	_
,	_	_
in	_	_
Section	_	_
7	_	_
,	_	_
by	_	_
suggesting	_	_
directions	_	_
for	_	_
further	_	_
work	_	_
based	_	_
on	_	_
the	_	_
contents	_	_
of	_	_
this	_	_
paper	_	_
.	_	_

#21
This	_	_
paper	_	_
does	_	_
not	_	_
seek	_	_
to	_	_
address	_	_
the	_	_
question	_	_
of	_	_
how	_	_
to	_	_
determine	_	_
how	_	_
words	_	_
should	deontic	_
be	_	_
translated	_	_
into	_	_
predicates	_	_
and	_	_
relations	_	_
in	_	_
the	_	_
first	_	_
place	_	_
,	_	_
but	_	_
rather	_	_
shows	_	_
how	_	_
such	_	_
predicates	_	_
and	_	_
relations	_	_
can	feasibility	_
be	_	_
modelled	_	_
using	_	_
multilinear	_	_
algebra	_	_
.	_	_

#22
As	_	_
such	_	_
,	_	_
it	_	_
can	capability-feasibility	_
be	_	_
seen	_	_
as	_	_
a	_	_
general	_	_
theoretical	_	_
contribution	_	_
which	_	_
is	_	_
independent	_	_
from	_	_
the	_	_
approaches	_	_
to	_	_
compositional	_	_
distributional	_	_
semantics	_	_
it	_	_
can	feasibility	_
be	_	_
applied	_	_
to	_	_
.	_	_

#23
It	_	_
is	_	_
directly	_	_
compatible	_	_
with	_	_
the	_	_
efforts	_	_
of	_	_
Coecke	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2010	_	_
)	_	_
and	_	_
Grefenstette	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2013	_	_
)	_	_
,	_	_
discussed	_	_
below	_	_
,	_	_
but	_	_
is	_	_
also	_	_
relevant	_	_
to	_	_
any	_	_
other	_	_
approach	_	_
making	_	_
use	_	_
of	_	_
tensors	_	_
or	_	_
matrices	_	_
to	_	_
encode	_	_
semantic	_	_
relations	_	_
.	_	_

#39
[	_	_
[	_	_
like	_	_
]	_	_
]	_	_
(	_	_
x	_	_
,	_	_
y	_	_
)	_	_
[	_	_
[	_	_
milk	_	_
]	_	_
]	_	_
Figure	_	_
1	_	_
:	_	_
A	_	_
simple	_	_
formal	_	_
semantic	_	_
model	_	_
.	_	_

#40
Formal	_	_
semantic	_	_
models	_	_
are	_	_
incredibly	_	_
powerful	_	_
,	_	_
in	_	_
that	_	_
the	_	_
resulting	_	_
logical	_	_
representations	_	_
of	_	_
sentences	_	_
can	feasibility	_
be	_	_
fed	_	_
to	_	_
automated	_	_
theorem	_	_
provers	_	_
to	_	_
perform	_	_
textual	_	_
inference	_	_
,	_	_
consistency	_	_
verification	_	_
,	_	_
question	_	_
answering	_	_
,	_	_
and	_	_
a	_	_
host	_	_
of	_	_
other	_	_
tasks	_	_
which	_	_
are	_	_
well	_	_
developed	_	_
in	_	_
the	_	_
literature	_	_
(	_	_
e.g	_	_
.	_	_
see	_	_
(	_	_
Loveland	_	_
,	_	_
1978	_	_
)	_	_
and	_	_
(	_	_
Fitting	_	_
,	_	_
1996	_	_
)	_	_
)	_	_
.	_	_

#41
However	_	_
,	_	_
the	_	_
sophistication	_	_
of	_	_
such	_	_
formal	_	_
semantic	_	_
models	_	_
comes	_	_
at	_	_
a	_	_
cost	_	_
:	_	_
the	_	_
complex	_	_
set	_	_
of	_	_
rules	_	_
allowing	_	_
for	_	_
the	_	_
logical	_	_
interpretation	_	_
of	_	_
text	_	_
must	deontic	_
either	_	_
be	_	_
provided	_	_
a	_	_
priori	_	_
,	_	_
or	_	_
learned	_	_
.	_	_

#42
Learning	_	_
such	_	_
representations	_	_
is	_	_
a	_	_
complex	_	_
task	_	_
,	_	_
the	_	_
difficulty	_	_
of	_	_
which	_	_
is	_	_
compounded	_	_
by	_	_
issues	_	_
of	_	_
ambiguity	_	_
and	_	_
polysemy	_	_
which	_	_
are	_	_
pervasive	_	_
in	_	_
natural	_	_
languages	_	_
.	_	_

#46
These	_	_
context	_	_
counts	_	_
are	_	_
then	_	_
normalised	_	_
by	_	_
a	_	_
term	_	_
frequencyinverse	_	_
document	_	_
frequency-like	_	_
measure	_	_
(	_	_
e.g	_	_
.	_	_
TFIDF	_	_
,	_	_
pointwise	_	_
mutual	_	_
information	_	_
,	_	_
ratio	_	_
of	_	_
probabilities	_	_
)	_	_
,	_	_
and	_	_
are	_	_
set	_	_
as	_	_
the	_	_
basis	_	_
weights	_	_
of	_	_
the	_	_
vector	_	_
representation	_	_
of	_	_
the	_	_
word’s	_	_
meaning	_	_
.	_	_

#47
Word	_	_
vectors	_	_
can	feasibility	_
then	_	_
be	_	_
compared	_	_
using	_	_
geometric	_	_
distance	_	_
furry	_	_
stroke	_	_
pet	_	_
cat	_	_
dog	_	_
snake	_	_
Figure	_	_
2	_	_
:	_	_
A	_	_
simple	_	_
distributional	_	_
semantic	_	_
model	_	_
.	_	_

#48
metrics	_	_
such	_	_
as	_	_
cosine	_	_
similarity	_	_
,	_	_
allowing	_	_
us	_	_
to	_	_
determine	_	_
the	_	_
similarity	_	_
of	_	_
words	_	_
,	_	_
cluster	_	_
semantically	_	_
related	_	_
words	_	_
,	_	_
and	_	_
so	_	_
on	_	_
.	_	_

#52
However	_	_
,	_	_
while	_	_
such	_	_
models	_	_
provide	_	_
tractable	_	_
ways	_	_
of	_	_
learning	_	_
and	_	_
comparing	_	_
word	_	_
meanings	_	_
,	_	_
they	_	_
do	_	_
not	_	_
naturally	_	_
scale	_	_
beyond	_	_
word	_	_
length	_	_
.	_	_

#53
As	_	_
recently	_	_
pointed	_	_
out	_	_
by	_	_
Turney	_	_
(	_	_
2012	_	_
)	_	_
,	_	_
treating	_	_
larger	_	_
segments	_	_
of	_	_
texts	_	_
as	_	_
lexical	_	_
units	_	_
and	_	_
learning	_	_
their	_	_
representations	_	_
distributionally	_	_
(	_	_
the	_	_
‘holistic	_	_
approach’	_	_
)	_	_
violates	_	_
the	_	_
principle	_	_
of	_	_
linguistic	_	_
creativity	_	_
,	_	_
according	_	_
to	_	_
which	_	_
we	_	_
can	feasibility	_
formulate	_	_
and	_	_
understand	_	_
phrases	_	_
which	_	_
we’ve	_	_
never	_	_
observed	_	_
before	_	_
,	_	_
provided	_	_
we	_	_
know	_	_
the	_	_
meaning	_	_
of	_	_
their	_	_
parts	_	_
and	_	_
how	_	_
they	_	_
are	_	_
combined	_	_
.	_	_

#54
As	_	_
such	_	_
,	_	_
distributional	_	_
semantics	_	_
makes	_	_
no	_	_
effort	_	_
to	_	_
account	_	_
for	_	_
the	_	_
compositional	_	_
nature	_	_
of	_	_
language	_	_
like	_	_
formal	_	_
semantics	_	_
does	_	_
,	_	_
and	_	_
ignores	_	_
issues	_	_
relating	_	_
to	_	_
syntactic	_	_
and	_	_
relational	_	_
aspects	_	_
of	_	_
language	_	_
.	_	_

#58
Clark	_	_
and	_	_
Pulman	_	_
(	_	_
2006	_	_
)	_	_
extend	_	_
this	_	_
approach	_	_
by	_	_
including	_	_
basis	_	_
vectors	_	_
standing	_	_
for	_	_
dependency	_	_
relations	_	_
into	_	_
tensor	_	_
product-based	_	_
representations	_	_
.	_	_

#59
Both	_	_
of	_	_
these	_	_
tensor	_	_
product-based	_	_
approaches	_	_
run	_	_
into	_	_
dimensionality	_	_
problems	_	_
as	_	_
representations	_	_
of	_	_
sentence	_	_
meaning	_	_
for	_	_
sentences	_	_
of	_	_
different	_	_
lengths	_	_
or	_	_
grammatical	_	_
structure	_	_
do	_	_
not	_	_
live	_	_
in	_	_
the	_	_
same	_	_
space	_	_
,	_	_
and	_	_
thus	_	_
can	feasibility	negation
not	_	_
directly	_	_
be	_	_
compared	_	_
.	_	_

#60
Coecke	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2010	_	_
)	_	_
develop	_	_
a	_	_
framework	_	_
using	_	_
category	_	_
theory	_	_
,	_	_
solving	_	_
this	_	_
dimensionality	_	_
problem	_	_
of	_	_
tensor-based	_	_
models	_	_
by	_	_
projecting	_	_
tensored	_	_
vectors	_	_
for	_	_
sentences	_	_
into	_	_
a	_	_
unique	_	_
vector	_	_
space	_	_
for	_	_
sentences	_	_
,	_	_
using	_	_
functions	_	_
dynamically	_	_
generated	_	_
by	_	_
the	_	_
syntactic	_	_
structure	_	_
of	_	_
the	_	_
sentences	_	_
.	_	_

#61
In	_	_
presenting	_	_
their	_	_
framework	_	_
,	_	_
which	_	_
partly	_	_
inspired	_	_
this	_	_
paper	_	_
,	_	_
they	_	_
describe	_	_
how	_	_
a	_	_
verb	_	_
can	feasibility	_
be	_	_
treated	_	_
as	_	_
a	_	_
logical	_	_
relation	_	_
using	_	_
tensors	_	_
in	_	_
order	_	_
to	_	_
evaluate	_	_
the	_	_
truth	_	_
value	_	_
of	_	_
a	_	_
simple	_	_
sentence	_	_
,	_	_
as	_	_
well	_	_
as	_	_
how	_	_
negation	_	_
can	feasibility	_
be	_	_
modelled	_	_
using	_	_
matrices	_	_
.	_	_

#62
maA	_	_
related	_	_
approach	_	_
,	_	_
by	_	_
Baroni	_	_
and	_	_
Zamparelli	_	_
(	_	_
2010	_	_
)	_	_
,	_	_
represents	_	_
unary	_	_
relations	_	_
such	_	_
as	_	_
adjectives	_	_
as	_	_
matrices	_	_
learned	_	_
by	_	_
linear	_	_
regression	_	_
from	_	_
corpus	_	_
data	_	_
,	_	_
and	_	_
models	_	_
adjective-noun	_	_
composition	_	_
as	_	_
matrix-vector	_	_
multiplication	_	_
.	_	_

#64
paFinally	_	_
,	_	_
Socher	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2012	_	_
)	_	_
apply	_	_
deep	_	_
learning	_	_
techniques	_	_
to	_	_
model	_	_
syntax-sensitive	_	_
vector	_	_
composition	_	_
using	_	_
non-linear	_	_
operations	_	_
,	_	_
effectively	_	_
turning	_	_
parse	_	_
trees	_	_
into	_	_
multi-stage	_	_
neural	_	_
networks	_	_
.	_	_

#65
Socher	_	_
shows	_	_
that	_	_
the	_	_
non-linear	_	_
activation	_	_
function	_	_
used	_	_
in	_	_
such	_	_
a	_	_
neural	_	_
network	_	_
can	feasibility	_
be	_	_
tailored	_	_
to	_	_
replicate	_	_
the	_	_
behaviour	_	_
of	_	_
basic	_	_
logical	_	_
connectives	_	_
such	_	_
as	_	_
conjunction	_	_
and	_	_
negation	_	_
.	_	_

#66
3	_	_
Tensors	_	_
and	_	_
multilinear	_	_
maps	_	_
Tensors	_	_
are	_	_
the	_	_
mathematical	_	_
objects	_	_
dealt	_	_
with	_	_
in	_	_
multilinear	_	_
algebra	_	_
just	_	_
as	_	_
vectors	_	_
and	_	_
matrices	_	_
are	_	_
the	_	_
objects	_	_
dealt	_	_
with	_	_
in	_	_
linear	_	_
algebra	_	_
.	_	_

#67
In	_	_
fact	_	_
,	_	_
tensors	_	_
can	capability-feasibility	_
be	_	_
seen	_	_
as	_	_
generalisations	_	_
of	_	_
vectors	_	_
and	_	_
matrices	_	_
by	_	_
introducing	_	_
the	_	_
notion	_	_
of	_	_
tensor	_	_
rank	_	_
.	_	_

#68
Let	_	_
the	_	_
rank	_	_
of	_	_
a	_	_
tensor	_	_
be	_	_
the	_	_
number	_	_
of	_	_
indices	_	_
required	_	_
to	_	_
describe	_	_
a	_	_
vector/matrix-like	_	_
object	_	_
in	_	_
sum	_	_
notation	_	_
.	_	_

#69
A	_	_
vector	_	_
v	_	_
in	_	_
a	_	_
space	_	_
V	_	_
with	_	_
basis	_	_
{	_	_
bVi	_	_
}	_	_
i	_	_
can	feasibility-rhetorical	_
be	_	_
written	_	_
as	_	_
the	_	_
weighted	_	_
sum	_	_
of	_	_
the	_	_
basis	_	_
vectors	_	_
:	_	_
v	_	_
=	_	_
∑	_	_
i	_	_
cvi	_	_
b	_	_
V	_	_
i	_	_
where	_	_
the	_	_
cvi	_	_
elements	_	_
are	_	_
the	_	_
scalar	_	_
basis	_	_
weights	_	_
of	_	_
the	_	_
vector	_	_
.	_	_

#70
Being	_	_
fully	_	_
described	_	_
with	_	_
one	_	_
index	_	_
,	_	_
vectors	_	_
are	_	_
rank	_	_
1	_	_
tensors	_	_
.	_	_

#71
Similarly	_	_
,	_	_
a	_	_
matrix	_	_
M	_	_
is	_	_
an	_	_
element	_	_
of	_	_
a	_	_
space	_	_
V	_	_
⊗W	_	_
with	_	_
basis	_	_
{	_	_
(	_	_
bVi	_	_
,	_	_
b	_	_
W	_	_
j	_	_
)	_	_
}	_	_
i	_	_
j	_	_
(	_	_
such	_	_
pairs	_	_
of	_	_
basis	_	_
vectors	_	_
of	_	_
V	_	_
and	_	_
W	_	_
are	_	_
commonly	_	_
written	_	_
as	_	_
{	_	_
bVi	_	_
⊗b	_	_
W	_	_
j	_	_
}	_	_
i	_	_
j	_	_
in	_	_
multilinear	_	_
algebra	_	_
)	_	_
.	_	_

#72
Such	_	_
matrices	_	_
are	_	_
rank	_	_
2	_	_
tensors	_	_
,	_	_
as	_	_
they	_	_
can	feasibility-rhetorical	_
be	_	_
fully	_	_
described	_	_
using	_	_
two	_	_
indices	_	_
(	_	_
one	_	_
for	_	_
rows	_	_
,	_	_
one	_	_
for	_	_
columns	_	_
)	_	_
:	_	_
M	_	_
=	_	_
∑	_	_
i	_	_
j	_	_
cMi	_	_
j	_	_
b	_	_
V	_	_
i	_	_
⊗	_	_
b	_	_
W	_	_
j	_	_
where	_	_
the	_	_
scalar	_	_
weights	_	_
cMi	_	_
j	_	_
are	_	_
just	_	_
the	_	_
i	_	_
jth	_	_
elements	_	_
of	_	_
the	_	_
matrix	_	_
.	_	_

#73
A	_	_
tensor	_	_
T	_	_
of	_	_
rank	_	_
k	_	_
is	_	_
just	_	_
a	_	_
geometric	_	_
object	_	_
with	_	_
a	_	_
higher	_	_
rank	_	_
.	_	_

#75
.	_	_

#76
.⊗Vk	_	_
;	_	_
we	_	_
can	feasibility-rhetorical	_
express	_	_
T	_	_
as	_	_
follows	_	_
,	_	_
using	_	_
k	_	_
indices	_	_
α1	_	_
.	_	_

#77
.	_	_

#81
.	_	_

#82
⊗	_	_
bVkαk	_	_
In	_	_
this	_	_
paper	_	_
,	_	_
we	_	_
will	_	_
be	_	_
dealing	_	_
with	_	_
tensors	_	_
of	_	_
rank	_	_
1	_	_
(	_	_
vectors	_	_
)	_	_
,	_	_
rank	_	_
2	_	_
(	_	_
matrices	_	_
)	_	_
and	_	_
rank	_	_
3	_	_
,	_	_
which	_	_
can	capability-feasibility	_
be	_	_
pictured	_	_
as	_	_
cuboids	_	_
(	_	_
or	_	_
a	_	_
matrix	_	_
of	_	_
matrices	_	_
)	_	_
.	_	_

#83
Tensor	_	_
contraction	_	_
is	_	_
an	_	_
operation	_	_
which	_	_
allows	_	_
us	_	_
to	_	_
take	_	_
two	_	_
tensors	_	_
and	_	_
produce	_	_
a	_	_
third	_	_
.	_	_

#96
⊗	_	_
bVnαn	_	_
Tensor	_	_
contraction	_	_
takes	_	_
a	_	_
tensor	_	_
of	_	_
rank	_	_
k	_	_
and	_	_
a	_	_
tensor	_	_
of	_	_
rank	_	_
n	_	_
−	_	_
k	_	_
+	_	_
1	_	_
and	_	_
produces	_	_
a	_	_
tensor	_	_
of	_	_
rank	_	_
n	_	_
−	_	_
1	_	_
,	_	_
corresponding	_	_
to	_	_
the	_	_
sum	_	_
of	_	_
the	_	_
ranks	_	_
of	_	_
the	_	_
input	_	_
tensors	_	_
minus	_	_
2	_	_
.	_	_

#97
The	_	_
tensors	_	_
must	deontic	_
satisfy	_	_
the	_	_
following	_	_
restriction	_	_
:	_	_
the	_	_
left	_	_
tensor	_	_
must	deontic	_
have	_	_
a	_	_
rightmost	_	_
index	_	_
spanning	_	_
the	_	_
same	_	_
number	_	_
of	_	_
dimensions	_	_
as	_	_
the	_	_
leftmost	_	_
index	_	_
of	_	_
the	_	_
right	_	_
tensor	_	_
.	_	_

#98
This	_	_
is	_	_
similar	_	_
to	_	_
the	_	_
restriction	_	_
that	_	_
a	_	_
m	_	_
by	_	_
n	_	_
matrix	_	_
can	feasibility	_
only	_	_
be	_	_
multiplied	_	_
with	_	_
a	_	_
p	_	_
by	_	_
q	_	_
matrix	_	_
if	_	_
n	_	_
=	_	_
p	_	_
,	_	_
i.e	_	_
.	_	_
if	_	_
the	_	_
index	_	_
spanning	_	_
the	_	_
columns	_	_
of	_	_
the	_	_
first	_	_
matrix	_	_
covers	_	_
the	_	_
same	_	_
number	_	_
of	_	_
columns	_	_
as	_	_
the	_	_
index	_	_
spanning	_	_
the	_	_
rows	_	_
of	_	_
the	_	_
second	_	_
matrix	_	_
covers	_	_
rows	_	_
.	_	_

#99
Similarly	_	_
to	_	_
how	_	_
the	_	_
columns	_	_
of	_	_
one	_	_
matrix	_	_
‘merge’	_	_
with	_	_
the	_	_
rows	_	_
of	_	_
another	_	_
to	_	_
produce	_	_
a	_	_
third	_	_
matrix	_	_
,	_	_
the	_	_
part	_	_
of	_	_
the	_	_
first	_	_
tensor	_	_
spanned	_	_
by	_	_
the	_	_
index	_	_
k	_	_
merges	_	_
with	_	_
the	_	_
part	_	_
of	_	_
the	_	_
second	_	_
tensor	_	_
spanned	_	_
by	_	_
k	_	_
by	_	_
‘summing	_	_
through’	_	_
the	_	_
shared	_	_
basis	_	_
elements	_	_
bVkαk	_	_
of	_	_
each	_	_
tensor	_	_
.	_	_

#102
.	_	_

#103
.→	_	_
V	_	_
j	_	_
→	_	_
Vk	_	_
can	capability-feasibility-rhetorical	_
be	_	_
represented	_	_
as	_	_
a	_	_
tensor	_	_
T	_	_
f	_	_
∈	_	_
Vk⊗V	_	_
j⊗	_	_
.	_	_

#104
.	_	_

#114
.	_	_

#115
×	_	_
v	_	_
j	_	_
4	_	_
Tensor-based	_	_
predicate	_	_
calculi	_	_
In	_	_
this	_	_
section	_	_
,	_	_
I	_	_
discuss	_	_
how	_	_
the	_	_
isomorphism	_	_
between	_	_
multilinear	_	_
maps	_	_
and	_	_
tensors	_	_
described	_	_
above	_	_
can	feasibility	_
be	_	_
used	_	_
to	_	_
model	_	_
predicates	_	_
,	_	_
relations	_	_
,	_	_
and	_	_
logical	_	_
atoms	_	_
of	_	_
a	_	_
predicate	_	_
calculus	_	_
.	_	_

#116
The	_	_
four	_	_
aspects	_	_
of	_	_
a	_	_
predicate	_	_
calculus	_	_
we	_	_
must	deontic	_
replicate	_	_
here	_	_
using	_	_
tensors	_	_
are	_	_
as	_	_
follows	_	_
:	_	_
truth	_	_
values	_	_
,	_	_
the	_	_
logical	_	_
domain	_	_
and	_	_
its	_	_
elements	_	_
(	_	_
logical	_	_
atoms	_	_
)	_	_
,	_	_
predicates	_	_
,	_	_
and	_	_
relations	_	_
.	_	_

#117
I	_	_
will	_	_
discuss	_	_
logical	_	_
connectives	_	_
in	_	_
the	_	_
next	_	_
section	_	_
.	_	_

#118
Both	_	_
truth	_	_
values	_	_
and	_	_
domain	_	_
objects	_	_
are	_	_
the	_	_
basic	_	_
elements	_	_
of	_	_
a	_	_
predicate	_	_
calculus	_	_
,	_	_
and	_	_
therefore	_	_
it	_	_
makes	_	_
sense	_	_
to	_	_
model	_	_
them	_	_
as	_	_
vectors	_	_
rather	_	_
than	_	_
higher	_	_
rank	_	_
tensors	_	_
,	_	_
which	_	_
I	_	_
will	_	_
reserve	_	_
for	_	_
relations	_	_
.	_	_

#119
We	_	_
first	_	_
must	deontic	_
consider	_	_
the	_	_
vector	_	_
space	_	_
used	_	_
to	_	_
model	_	_
the	_	_
boolean	_	_
truth	_	_
values	_	_
of	_	_
B.	_	_
Coecke	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2010	_	_
)	_	_
suggest	_	_
,	_	_
as	_	_
boolean	_	_
vector	_	_
space	_	_
,	_	_
the	_	_
space	_	_
B	_	_
with	_	_
the	_	_
basis	_	_
{	_	_
>	_	_
,	_	_
⊥	_	_
}	_	_
,	_	_
where	_	_
>	_	_
=	_	_
[	_	_
1	_	_
0	_	_
]	_	_
>	_	_
is	_	_
interpreted	_	_
as	_	_
‘true’	_	_
,	_	_
and	_	_
⊥	_	_
=	_	_
[	_	_
0	_	_
1	_	_
]	_	_
>	_	_
as	_	_
‘false’	_	_
.	_	_

#120
I	_	_
assign	_	_
to	_	_
the	_	_
domain	_	_
D	_	_
,	_	_
the	_	_
set	_	_
of	_	_
objects	_	_
in	_	_
our	_	_
logic	_	_
,	_	_
a	_	_
vector	_	_
space	_	_
D	_	_
on	_	_
R|D|	_	_
with	_	_
basis	_	_
vectors	_	_
{	_	_
di	_	_
}	_	_
i	_	_
which	_	_
are	_	_
in	_	_
bijective	_	_
correspondence	_	_
with	_	_
elements	_	_
of	_	_
D.	_	_
An	_	_
element	_	_
of	_	_
D	_	_
is	_	_
therefore	_	_
represented	_	_
as	_	_
a	_	_
one-hot	_	_
vector	_	_
in	_	_
D	_	_
,	_	_
the	_	_
single	_	_
nonnull	_	_
value	_	_
of	_	_
which	_	_
is	_	_
the	_	_
weight	_	_
for	_	_
the	_	_
basis	_	_
vector	_	_
mapped	_	_
to	_	_
that	_	_
element	_	_
of	_	_
D.	_	_
Similarly	_	_
,	_	_
a	_	_
subset	_	_
of	_	_
D	_	_
is	_	_
a	_	_
vector	_	_
of	_	_
D	_	_
where	_	_
those	_	_
elements	_	_
ofD	_	_
in	_	_
the	_	_
subset	_	_
have	_	_
1	_	_
as	_	_
their	_	_
corresponding	_	_
basis	_	_
weights	_	_
in	_	_
the	_	_
vector	_	_
,	_	_
and	_	_
those	_	_
not	_	_
in	_	_
the	_	_
subset	_	_
have	_	_
0	_	_
.	_	_

#122
Each	_	_
unary	_	_
predicate	_	_
P	_	_
in	_	_
the	_	_
logic	_	_
is	_	_
represented	_	_
in	_	_
the	_	_
logical	_	_
model	_	_
as	_	_
a	_	_
set	_	_
MP	_	_
⊆	_	_
D	_	_
containing	_	_
the	_	_
elements	_	_
of	_	_
the	_	_
domain	_	_
for	_	_
which	_	_
the	_	_
predicate	_	_
is	_	_
true	_	_
.	_	_

#123
Predicates	_	_
can	feasibility	_
be	_	_
viewed	_	_
as	_	_
a	_	_
unary	_	_
function	_	_
fP	_	_
:	_	_
D	_	_
→	_	_
B	_	_
where	_	_
fP	_	_
(	_	_
x	_	_
)	_	_
=	_	_
{	_	_
>	_	_
if	_	_
x	_	_
∈	_	_
MP	_	_
⊥	_	_
otherwise	_	_
These	_	_
predicate	_	_
functions	_	_
can	feasibility	_
be	_	_
modelled	_	_
as	_	_
rank	_	_
2	_	_
tensors	_	_
in	_	_
B	_	_
⊗	_	_
D	_	_
,	_	_
i.e	_	_
.	_	_
matrices	_	_
.	_	_

#124
Such	_	_
a	_	_
matrix	_	_
MP	_	_
is	_	_
expressed	_	_
in	_	_
sum	_	_
notation	_	_
as	_	_
follows	_	_
:	_	_
MP	_	_
=	_	_
∑	_	_
i	_	_
cM	_	_
P	_	_
1i	_	_
>	_	_
⊗	_	_
di	_	_
	_	_
+	_	_
∑	_	_
i	_	_
cM	_	_
P	_	_
2i	_	_
⊥	_	_
⊗	_	_
di	_	_
	_	_
The	_	_
basis	_	_
weights	_	_
are	_	_
defined	_	_
in	_	_
terms	_	_
of	_	_
the	_	_
set	_	_
MP	_	_
as	_	_
follows	_	_
:	_	_
cM	_	_
P	_	_
1i	_	_
=	_	_
1	_	_
if	_	_
the	_	_
logical	_	_
atom	_	_
xi	_	_
associated	_	_
with	_	_
basis	_	_
weight	_	_
di	_	_
is	_	_
in	_	_
MP	_	_
,	_	_
and	_	_
0	_	_
otherwise	_	_
;	_	_
conversely	_	_
,	_	_
cM	_	_
P	_	_
2i	_	_
=	_	_
1	_	_
if	_	_
the	_	_
logical	_	_
atom	_	_
xi	_	_
associated	_	_
with	_	_
basis	_	_
weight	_	_
di	_	_
is	_	_
not	_	_
in	_	_
MP	_	_
,	_	_
and	_	_
0	_	_
otherwise	_	_
.	_	_

#128
Translating	_	_
this	_	_
into	_	_
a	_	_
matrix	_	_
gives	_	_
the	_	_
following	_	_
tensor	_	_
for	_	_
P	_	_
:	_	_
MP	_	_
=	_	_
[	_	_
1	_	_
1	_	_
0	_	_
0	_	_
0	_	_
1	_	_
]	_	_
To	_	_
compute	_	_
the	_	_
truth	_	_
value	_	_
of	_	_
‘John	_	_
is	_	_
a	_	_
mathematician’	_	_
,	_	_
we	_	_
perform	_	_
predicate-argument	_	_
application	_	_
as	_	_
tensor	_	_
contraction	_	_
(	_	_
matrix-vector	_	_
multiplication	_	_
,	_	_
in	_	_
this	_	_
case	_	_
)	_	_
:	_	_
MP	_	_
×	_	_
john	_	_
=	_	_
[	_	_
1	_	_
1	_	_
0	_	_
0	_	_
0	_	_
1	_	_
]	_	_
	_	_
01	_	_
	_	_
=	_	_
[	_	_
]	_	_
=	_	_
>	_	_
Likewise	_	_
for	_	_
‘Tom	_	_
is	_	_
a	_	_
mathematician’	_	_
:	_	_
MP	_	_
×	_	_
tom	_	_
=	_	_
[	_	_
1	_	_
1	_	_
0	_	_
0	_	_
0	_	_
1	_	_
]	_	_
	_	_
00	_	_
	_	_
=	_	_
[	_	_
]	_	_
=	_	_
⊥	_	_
Model	_	_
theory	_	_
for	_	_
predicate	_	_
calculus	_	_
represents	_	_
any	_	_
n-ary	_	_
relation	_	_
R	_	_
,	_	_
such	_	_
as	_	_
a	_	_
verb	_	_
,	_	_
as	_	_
the	_	_
set	_	_
MR	_	_
of	_	_
n-tuples	_	_
of	_	_
elements	_	_
from	_	_
D	_	_
for	_	_
which	_	_
R	_	_
holds	_	_
.	_	_

#129
Therefore	_	_
such	_	_
relations	_	_
can	capability-feasibility	_
be	_	_
viewed	_	_
as	_	_
functions	_	_
fR	_	_
:	_	_
Dn	_	_
→	_	_
B	_	_
where	_	_
:	_	_
fR	_	_
(	_	_
x1	_	_
,	_	_
.	_	_

#130
.	_	_

#134
.	_	_

#135
,	_	_
xn	_	_
)	_	_
∈	_	_
MR	_	_
⊥	_	_
otherwise	_	_
We	_	_
can	feasibility-rhetorical	_
represent	_	_
the	_	_
boolean	_	_
function	_	_
for	_	_
such	_	_
a	_	_
relation	_	_
R	_	_
as	_	_
a	_	_
tensor	_	_
TR	_	_
in	_	_
B	_	_
⊗	_	_
D	_	_
⊗	_	_
.	_	_

#136
.	_	_

#159
The	_	_
logical	_	_
model	_	_
for	_	_
this	_	_
scenario	_	_
is	_	_
as	_	_
follows	_	_
:	_	_
D	_	_
=	_	_
{	_	_
j	_	_
,	_	_
m	_	_
}	_	_
Mloves	_	_
=	_	_
{	_	_
(	_	_
j	_	_
,	_	_
j	_	_
)	_	_
,	_	_
(	_	_
m	_	_
,	_	_
m	_	_
)	_	_
,	_	_
(	_	_
m	_	_
,	_	_
j	_	_
)	_	_
}	_	_
Distributionally	_	_
speaking	_	_
,	_	_
the	_	_
elements	_	_
of	_	_
the	_	_
domain	_	_
will	_	_
be	_	_
mapped	_	_
to	_	_
the	_	_
following	_	_
one-hot	_	_
vectors	_	_
in	_	_
some	_	_
two-dimensional	_	_
space	_	_
D	_	_
as	_	_
follows	_	_
:	_	_
j	_	_
=	_	_
[	_	_
1	_	_
0	_	_
]	_	_
>	_	_
and	_	_
m	_	_
=	_	_
[	_	_
0	_	_
1	_	_
]	_	_
>	_	_
.	_	_

#160
The	_	_
tensor	_	_
for	_	_
‘loves’	_	_
can	feasibility-rhetorical	_
be	_	_
written	_	_
as	_	_
follows	_	_
,	_	_
ignoring	_	_
basis	_	_
elements	_	_
with	_	_
null-valued	_	_
basis	_	_
weights	_	_
,	_	_
and	_	_
using	_	_
the	_	_
distributivity	_	_
of	_	_
the	_	_
tensor	_	_
product	_	_
over	_	_
addition	_	_
:	_	_
Tloves	_	_
=	_	_
>	_	_
⊗	_	_
(	_	_
(	_	_
d1	_	_
⊗	_	_
d1	_	_
)	_	_
+	_	_
(	_	_
d2	_	_
⊗	_	_
d2	_	_
)	_	_
+	_	_
(	_	_
d1	_	_
⊗	_	_
d2	_	_
)	_	_
)	_	_
+	_	_
(	_	_
⊥	_	_
⊗	_	_
d2	_	_
⊗	_	_
d1	_	_
)	_	_
Computing	_	_
“Mary	_	_
loves	_	_
John”	_	_
would	_	_
correspond	_	_
to	_	_
the	_	_
following	_	_
calculation	_	_
:	_	_
(	_	_
Tloves	_	_
×m	_	_
)	_	_
×	_	_
j	_	_
=	_	_
(	_	_
(	_	_
>	_	_
⊗	_	_
d2	_	_
)	_	_
+	_	_
(	_	_
>	_	_
⊗	_	_
d1	_	_
)	_	_
)	_	_
×	_	_
j	_	_
=	_	_
>	_	_
whereas	_	_
“John	_	_
loves	_	_
Mary”	_	_
would	_	_
correspond	_	_
to	_	_
the	_	_
following	_	_
calculation	_	_
:	_	_
(	_	_
Tloves	_	_
×	_	_
j	_	_
)	_	_
×m	_	_
=	_	_
(	_	_
(	_	_
>	_	_
⊗	_	_
d1	_	_
)	_	_
+	_	_
(	_	_
⊥	_	_
⊗	_	_
d2	_	_
)	_	_
)	_	_
×m	_	_
=	_	_
⊥	_	_
5	_	_
Logical	_	_
connectives	_	_
with	_	_
tensors	_	_
In	_	_
this	_	_
section	_	_
,	_	_
I	_	_
discuss	_	_
how	_	_
the	_	_
boolean	_	_
connectives	_	_
of	_	_
a	_	_
propositional	_	_
calculus	_	_
can	feasibility	_
be	_	_
modelled	_	_
using	_	_
tensors	_	_
.	_	_

#161
Combined	_	_
with	_	_
the	_	_
predicate	_	_
and	_	_
relation	_	_
representations	_	_
discussed	_	_
above	_	_
,	_	_
these	_	_
form	_	_
a	_	_
complete	_	_
quantifier-free	_	_
predicate	_	_
calculus	_	_
based	_	_
on	_	_
tensors	_	_
and	_	_
tensor	_	_
contraction	_	_
.	_	_

#162
Negation	_	_
has	_	_
already	_	_
been	_	_
shown	_	_
to	_	_
be	_	_
modelled	_	_
in	_	_
the	_	_
boolean	_	_
space	_	_
described	_	_
earlier	_	_
by	_	_
Coecke	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2010	_	_
)	_	_
as	_	_
the	_	_
swap	_	_
matrix	_	_
:	_	_
T¬	_	_
=	_	_
[	_	_
0	_	_
1	_	_
1	_	_
0	_	_
]	_	_
This	_	_
can	feasibility	_
easily	_	_
be	_	_
verified	_	_
:	_	_
T¬	_	_
×	_	_
>	_	_
=	_	_
[	_	_
0	_	_
1	_	_
1	_	_
0	_	_
]	_	_
[	_	_
]	_	_
=	_	_
[	_	_
]	_	_
=	_	_
⊥	_	_
T¬	_	_
×	_	_
⊥	_	_
=	_	_
[	_	_
0	_	_
1	_	_
1	_	_
0	_	_
]	_	_
[	_	_
]	_	_
=	_	_
[	_	_
]	_	_
=	_	_
>	_	_
All	_	_
other	_	_
logical	_	_
operators	_	_
are	_	_
binary	_	_
,	_	_
and	_	_
hence	_	_
modelled	_	_
as	_	_
rank	_	_
3	_	_
tensors	_	_
.	_	_

#163
To	_	_
make	_	_
talking	_	_
about	_	_
rank	_	_
3	_	_
tensors	_	_
used	_	_
to	_	_
model	_	_
binary	_	_
operations	_	_
easier	_	_
,	_	_
I	_	_
will	_	_
use	_	_
the	_	_
following	_	_
block	_	_
matrix	_	_
notation	_	_
for	_	_
2	_	_
×	_	_
2	_	_
×	_	_
2	_	_
rank	_	_
3	_	_
tensors	_	_
T	_	_
:	_	_
T	_	_
=	_	_
[	_	_
a1	_	_
b1	_	_
a2	_	_
b2	_	_
c1	_	_
d1	_	_
c2	_	_
d2	_	_
]	_	_
which	_	_
allows	_	_
us	_	_
to	_	_
express	_	_
tensor	_	_
contractions	_	_
as	_	_
follows	_	_
:	_	_
T	_	_
×	_	_
v	_	_
=	_	_
[	_	_
a1	_	_
b1	_	_
a2	_	_
b2	_	_
c1	_	_
d1	_	_
c2	_	_
d2	_	_
]	_	_
[	_	_
α	_	_
β	_	_
]	_	_
=	_	_
[	_	_
α	_	_
·	_	_
a1	_	_
+	_	_
β	_	_
·	_	_
a2	_	_
α	_	_
·	_	_
b1	_	_
+	_	_
β	_	_
·	_	_
b2	_	_
α	_	_
·	_	_
c1	_	_
+	_	_
β	_	_
·	_	_
c2	_	_
α	_	_
·	_	_
d1	_	_
+	_	_
β	_	_
·	_	_
d2	_	_
]	_	_
or	_	_
more	_	_
concretely	_	_
:	_	_
T	_	_
×	_	_
>	_	_
=	_	_
[	_	_
a1	_	_
b1	_	_
a2	_	_
b2	_	_
c1	_	_
d1	_	_
c2	_	_
d2	_	_
]	_	_
[	_	_
]	_	_
=	_	_
[	_	_
a1	_	_
b1	_	_
c1	_	_
d1	_	_
]	_	_
T	_	_
×	_	_
⊥	_	_
=	_	_
[	_	_
a1	_	_
b1	_	_
a2	_	_
b2	_	_
c1	_	_
d1	_	_
c2	_	_
d2	_	_
]	_	_
[	_	_
]	_	_
=	_	_
[	_	_
a2	_	_
b2	_	_
c2	_	_
d2	_	_
]	_	_
Using	_	_
this	_	_
notation	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
define	_	_
tensors	_	_
for	_	_
the	_	_
following	_	_
operations	_	_
:	_	_
(	_	_
∨	_	_
)	_	_
7→	_	_
T∨	_	_
=	_	_
[	_	_
1	_	_
1	_	_
1	_	_
0	_	_
0	_	_
0	_	_
0	_	_
1	_	_
]	_	_
(	_	_
∧	_	_
)	_	_
7→	_	_
T∧	_	_
=	_	_
[	_	_
1	_	_
0	_	_
0	_	_
0	_	_
0	_	_
1	_	_
1	_	_
1	_	_
]	_	_
(	_	_
→	_	_
)	_	_
7→	_	_
T→	_	_
=	_	_
[	_	_
1	_	_
0	_	_
1	_	_
1	_	_
0	_	_
1	_	_
0	_	_
0	_	_
]	_	_
I	_	_
leave	_	_
the	_	_
trivial	_	_
proof	_	_
by	_	_
exhaustion	_	_
that	_	_
these	_	_
fit	_	_
the	_	_
bill	_	_
to	_	_
the	_	_
reader	_	_
.	_	_

#164
It	_	_
is	_	_
worth	_	_
noting	_	_
here	_	_
that	_	_
these	_	_
tensors	_	_
preserve	_	_
normalised	_	_
probabilities	_	_
of	_	_
truth	_	_
.	_	_

#168
To	_	_
give	_	_
an	_	_
example	_	_
with	_	_
conjunction	_	_
,	_	_
let	_	_
v	_	_
=	_	_
[	_	_
α1	_	_
β1	_	_
]	_	_
>	_	_
and	_	_
w	_	_
=	_	_
[	_	_
α2	_	_
β2	_	_
]	_	_
>	_	_
with	_	_
α1	_	_
+	_	_
β1	_	_
=	_	_
α2	_	_
+	_	_
β2	_	_
=	_	_
1	_	_
.	_	_

#169
The	_	_
conjunction	_	_
of	_	_
these	_	_
vectors	_	_
is	_	_
calculated	_	_
as	_	_
follows	_	_
:	_	_
(	_	_
T∧	_	_
×	_	_
v	_	_
)	_	_
×	_	_
w	_	_
=	_	_
[	_	_
1	_	_
0	_	_
0	_	_
0	_	_
0	_	_
1	_	_
1	_	_
1	_	_
]	_	_
[	_	_
α1	_	_
β1	_	_
]	_	_
[	_	_
α2	_	_
β2	_	_
]	_	_
=	_	_
[	_	_
α1	_	_
0	_	_
β1	_	_
α1	_	_
+	_	_
β1	_	_
]	_	_
[	_	_
α2	_	_
β2	_	_
]	_	_
=	_	_
[	_	_
α1α2	_	_
β1α2	_	_
+	_	_
(	_	_
α1	_	_
+	_	_
β1	_	_
)	_	_
β2	_	_
]	_	_
To	_	_
check	_	_
that	_	_
the	_	_
probabilities	_	_
are	_	_
normalised	_	_
we	_	_
calculate	_	_
:	_	_
α1α2	_	_
+	_	_
β1α2	_	_
+	_	_
(	_	_
α1	_	_
+	_	_
β1	_	_
)	_	_
β2	_	_
=	_	_
(	_	_
α1	_	_
+	_	_
β1	_	_
)	_	_
α2	_	_
+	_	_
(	_	_
α1	_	_
+	_	_
β1	_	_
)	_	_
β2	_	_
=	_	_
(	_	_
α1	_	_
+	_	_
β1	_	_
)	_	_
(	_	_
α2	_	_
+	_	_
β2	_	_
)	_	_
=	_	_
1	_	_
We	_	_
can	feasibility-rhetorical	_
observe	_	_
that	_	_
the	_	_
resulting	_	_
probability	_	_
distribution	_	_
for	_	_
truth	_	_
is	_	_
still	_	_
normalised	_	_
.	_	_

#170
The	_	_
same	_	_
property	_	_
can	feasibility	_
be	_	_
verified	_	_
for	_	_
the	_	_
other	_	_
connectives	_	_
,	_	_
which	_	_
I	_	_
leave	_	_
as	_	_
an	_	_
exercise	_	_
for	_	_
the	_	_
reader	_	_
.	_	_

#171
6	_	_
Quantifiers	_	_
and	_	_
non-linearity	_	_
The	_	_
predicate	_	_
calculus	_	_
described	_	_
up	_	_
until	_	_
this	_	_
point	_	_
has	_	_
repeatedly	_	_
been	_	_
qualified	_	_
as	_	_
‘quantifier-free’	_	_
,	_	_
for	_	_
the	_	_
simple	_	_
reason	_	_
that	_	_
quantification	_	_
can	feasibility	negation
not	_	_
be	_	_
modelled	_	_
if	_	_
each	_	_
application	_	_
of	_	_
a	_	_
predicate	_	_
or	_	_
relation	_	_
immediately	_	_
yields	_	_
a	_	_
truth	_	_
value	_	_
.	_	_

#172
In	_	_
performing	_	_
such	_	_
reductions	_	_
,	_	_
we	_	_
throw	_	_
away	_	_
the	_	_
information	_	_
required	_	_
for	_	_
quantification	_	_
,	_	_
namely	_	_
the	_	_
information	_	_
which	_	_
indicates	_	_
which	_	_
elements	_	_
of	_	_
a	_	_
domain	_	_
the	_	_
predicate	_	_
holds	_	_
true	_	_
or	_	_
false	_	_
for	_	_
.	_	_

#174
However	_	_
,	_	_
I	_	_
will	_	_
prove	_	_
that	_	_
this	_	_
approach	_	_
to	_	_
quantifier	_	_
modelling	_	_
relies	_	_
on	_	_
non-linear	_	_
functions	_	_
,	_	_
rendering	_	_
them	_	_
non-suitable	_	_
for	_	_
compositional	_	_
distributional	_	_
models	_	_
relying	_	_
solely	_	_
on	_	_
multilinear	_	_
maps	_	_
for	_	_
composition	_	_
(	_	_
or	_	_
alternatively	_	_
,	_	_
rendering	_	_
such	_	_
models	_	_
unsuitable	_	_
for	_	_
the	_	_
modelling	_	_
of	_	_
quantifiers	_	_
by	_	_
this	_	_
method	_	_
)	_	_
.	_	_

#175
We	_	_
saw	_	_
,	_	_
in	_	_
Section	_	_
4	_	_
,	_	_
that	_	_
vectors	_	_
in	_	_
the	_	_
semantic	_	_
space	_	_
D	_	_
standing	_	_
for	_	_
the	_	_
logical	_	_
domain	_	_
could	capability-feasibility	_
model	_	_
logical	_	_
atoms	_	_
as	_	_
well	_	_
as	_	_
sets	_	_
of	_	_
atoms	_	_
.	_	_

#176
With	_	_
this	_	_
in	_	_
mind	_	_
,	_	_
instead	_	_
of	_	_
modelling	_	_
a	_	_
predicate	_	_
P	_	_
as	_	_
a	_	_
truth-function	_	_
,	_	_
let	_	_
us	_	_
now	_	_
view	_	_
it	_	_
as	_	_
standing	_	_
for	_	_
some	_	_
function	_	_
fP	_	_
:	_	_
P	_	_
(	_	_
D	_	_
)	_	_
→	_	_
P	_	_
(	_	_
D	_	_
)	_	_
,	_	_
defined	_	_
as	_	_
:	_	_
fP	_	_
(	_	_
X	_	_
)	_	_
=	_	_
X	_	_
∩	_	_
MP	_	_
where	_	_
X	_	_
is	_	_
a	_	_
set	_	_
of	_	_
domain	_	_
objects	_	_
,	_	_
and	_	_
MP	_	_
is	_	_
the	_	_
set	_	_
modelling	_	_
the	_	_
predicate	_	_
.	_	_

#185
An	_	_
intuitive	_	_
way	_	_
of	_	_
modelling	_	_
universal	_	_
quantification	_	_
is	_	_
as	_	_
follows	_	_
:	_	_
expressions	_	_
of	_	_
the	_	_
form	_	_
“All	_	_
Xs	_	_
are	_	_
Ys”	_	_
are	_	_
true	_	_
if	_	_
and	_	_
only	_	_
if	_	_
MX	_	_
=	_	_
MX∩MY	_	_
,	_	_
where	_	_
MX	_	_
and	_	_
MY	_	_
are	_	_
the	_	_
set	_	_
of	_	_
Xs	_	_
and	_	_
the	_	_
set	_	_
of	_	_
Ys	_	_
,	_	_
respectively	_	_
.	_	_

#186
Using	_	_
this	_	_
,	_	_
we	_	_
can	feasibility-rhetorical	_
define	_	_
the	_	_
map	_	_
forall	_	_
for	_	_
distributional	_	_
universal	_	_
quantification	_	_
modelling	_	_
expressions	_	_
of	_	_
the	_	_
form	_	_
“All	_	_
Xs	_	_
are	_	_
Ys”	_	_
as	_	_
follows	_	_
:	_	_
forall	_	_
(	_	_
X	_	_
,	_	_
Y	_	_
)	_	_
=	_	_
{	_	_
>	_	_
if	_	_
X	_	_
=	_	_
min	_	_
(	_	_
X	_	_
,	_	_
Y	_	_
)	_	_
⊥	_	_
otherwise	_	_
To	_	_
give	_	_
a	_	_
short	_	_
example	_	_
,	_	_
the	_	_
sentence	_	_
‘All	_	_
Greeks	_	_
are	_	_
human’	_	_
is	_	_
verified	_	_
by	_	_
computing	_	_
X	_	_
=	_	_
(	_	_
Mgreek	_	_
×	_	_
1	_	_
)	_	_
,	_	_
Y	_	_
=	_	_
(	_	_
Mhuman	_	_
×	_	_
1	_	_
)	_	_
,	_	_
and	_	_
verifying	_	_
the	_	_
equality	_	_
X	_	_
=	_	_
min	_	_
(	_	_
X	_	_
,	_	_
Y	_	_
)	_	_
.	_	_

#187
Existential	_	_
statements	_	_
of	_	_
the	_	_
form	_	_
“There	_	_
exists	_	_
X”	_	_
can	capability-feasibility	_
be	_	_
modelled	_	_
using	_	_
the	_	_
function	_	_
exists	_	_
,	_	_
which	_	_
tests	_	_
whether	_	_
or	_	_
not	_	_
MX	_	_
is	_	_
empty	_	_
,	_	_
and	_	_
is	_	_
defined	_	_
as	_	_
follows	_	_
:	_	_
exists	_	_
(	_	_
X	_	_
)	_	_
=	_	_
{	_	_
>	_	_
if	_	_
|X|	_	_
>	_	_
0	_	_
⊥	_	_
otherwise	_	_
To	_	_
give	_	_
a	_	_
short	_	_
example	_	_
,	_	_
the	_	_
sentence	_	_
‘there	_	_
exists	_	_
a	_	_
brown	_	_
dog’	_	_
is	_	_
verified	_	_
by	_	_
computing	_	_
X	_	_
=	_	_
(	_	_
Mbrown	_	_
×	_	_
1	_	_
)	_	_
∩	_	_
(	_	_
Mdog	_	_
×	_	_
1	_	_
)	_	_
and	_	_
verifying	_	_
whether	_	_
or	_	_
not	_	_
X	_	_
is	_	_
of	_	_
strictly	_	_
positive	_	_
length	_	_
.	_	_

#188
An	_	_
important	_	_
point	_	_
to	_	_
note	_	_
here	_	_
is	_	_
that	_	_
neither	_	_
of	_	_
these	_	_
quantification	_	_
functions	_	_
are	_	_
multi-linear	_	_
maps	_	_
,	_	_
since	_	_
a	_	_
multilinear	_	_
map	_	_
must	deontic	_
be	_	_
linear	_	_
in	_	_
all	_	_
arguments	_	_
.	_	_

#189
A	_	_
counter	_	_
example	_	_
for	_	_
forall	_	_
is	_	_
to	_	_
consider	_	_
the	_	_
case	_	_
where	_	_
MX	_	_
and	_	_
MY	_	_
are	_	_
empty	_	_
,	_	_
and	_	_
multiply	_	_
their	_	_
vector	_	_
representations	_	_
by	_	_
non-zero	_	_
scalar	_	_
weights	_	_
α	_	_
and	_	_
β.	_	_
αX	_	_
=	_	_
X	_	_
βY	_	_
=	_	_
Y	_	_
forall	_	_
(	_	_
αX	_	_
,	_	_
βY	_	_
)	_	_
=	_	_
forall	_	_
(	_	_
X	_	_
,	_	_
Y	_	_
)	_	_
=	_	_
>	_	_
forall	_	_
(	_	_
αX	_	_
,	_	_
βY	_	_
)	_	_
,	_	_
αβ	_	_
>	_	_
I	_	_
observe	_	_
that	_	_
the	_	_
equations	_	_
above	_	_
demonstrate	_	_
that	_	_
forall	_	_
is	_	_
not	_	_
a	_	_
multilinear	_	_
map	_	_
.	_	_

#192
7	_	_
Conclusions	_	_
and	_	_
future	_	_
work	_	_
In	_	_
this	_	_
paper	_	_
,	_	_
I	_	_
set	_	_
out	_	_
to	_	_
demonstrate	_	_
that	_	_
it	_	_
was	_	_
possible	_	_
to	_	_
replicate	_	_
most	_	_
aspects	_	_
of	_	_
predicate	_	_
logic	_	_
using	_	_
tensor-based	_	_
models	_	_
.	_	_

#193
I	_	_
showed	_	_
that	_	_
tensors	_	_
can	feasibility	_
be	_	_
constructed	_	_
from	_	_
logical	_	_
models	_	_
to	_	_
represent	_	_
predicates	_	_
and	_	_
relations	_	_
,	_	_
with	_	_
vectors	_	_
encoding	_	_
elements	_	_
or	_	_
sets	_	_
of	_	_
elements	_	_
from	_	_
the	_	_
logical	_	_
domain	_	_
.	_	_

#194
I	_	_
discussed	_	_
how	_	_
tensor	_	_
contraction	_	_
allows	_	_
for	_	_
evaluation	_	_
of	_	_
logical	_	_
expressions	_	_
encoded	_	_
as	_	_
tensors	_	_
,	_	_
and	_	_
that	_	_
logical	_	_
connectives	_	_
can	feasibility	_
be	_	_
defined	_	_
as	_	_
tensors	_	_
to	_	_
form	_	_
a	_	_
full	_	_
quantifier-free	_	_
predicate	_	_
calculus	_	_
.	_	_

#195
I	_	_
exposed	_	_
some	_	_
of	_	_
the	_	_
limitations	_	_
of	_	_
this	_	_
approach	_	_
when	_	_
dealing	_	_
with	_	_
variables	_	_
under	_	_
the	_	_
scope	_	_
of	_	_
quantifiers	_	_
,	_	_
and	_	_
proposed	_	_
a	_	_
variant	_	_
for	_	_
the	_	_
tensor	_	_
representation	_	_
of	_	_
predicates	_	_
which	_	_
allows	_	_
us	_	_
to	_	_
deal	_	_
with	_	_
quantification	_	_
.	_	_

#196
Further	_	_
work	_	_
on	_	_
tensor-based	_	_
modelling	_	_
of	_	_
quantifiers	_	_
should	deontic	_
ideally	_	_
seek	_	_
to	_	_
reconcile	_	_
this	_	_
work	_	_
with	_	_
that	_	_
of	_	_
Barwise	_	_
and	_	_
Cooper	_	_
(	_	_
1981	_	_
)	_	_
.	_	_

#197
In	_	_
this	_	_
section	_	_
,	_	_
I	_	_
discuss	_	_
how	_	_
both	_	_
of	_	_
these	_	_
approaches	_	_
to	_	_
predicate	_	_
modelling	_	_
can	feasibility	_
be	_	_
put	_	_
into	_	_
relation	_	_
,	_	_
and	_	_
suggest	_	_
further	_	_
work	_	_
that	_	_
might	options-rhetorical	_
be	_	_
done	_	_
on	_	_
this	_	_
topic	_	_
,	_	_
and	_	_
on	_	_
the	_	_
topic	_	_
of	_	_
integrating	_	_
this	_	_
work	_	_
into	_	_
compositional	_	_
distributional	_	_
models	_	_
of	_	_
semantics	_	_
.	_	_

#198
The	_	_
first	_	_
approach	_	_
to	_	_
predicate	_	_
modelling	_	_
treats	_	_
predicates	_	_
as	_	_
truth	_	_
functions	_	_
represented	_	_
as	_	_
tensors	_	_
,	_	_
while	_	_
the	_	_
second	_	_
treats	_	_
them	_	_
as	_	_
functions	_	_
from	_	_
subsets	_	_
of	_	_
the	_	_
domain	_	_
to	_	_
subsets	_	_
of	_	_
the	_	_
domain	_	_
.	_	_

#201
The	_	_
relation	_	_
between	_	_
these	_	_
representations	_	_
lies	_	_
in	_	_
the	_	_
equality	_	_
diag	_	_
(	_	_
pMP	_	_
)	_	_
=	_	_
M′P	_	_
,	_	_
where	_	_
p	_	_
is	_	_
the	_	_
covector	_	_
[	_	_
1	_	_
0	_	_
]	_	_
(	_	_
and	_	_
hence	_	_
pMP	_	_
yields	_	_
the	_	_
first	_	_
row	_	_
of	_	_
MP	_	_
)	_	_
.	_	_

#202
The	_	_
second	_	_
row	_	_
of	_	_
MP	_	_
being	_	_
defined	_	_
in	_	_
terms	_	_
of	_	_
the	_	_
first	_	_
,	_	_
one	_	_
can	feasibility	_
also	_	_
recover	_	_
MP	_	_
from	_	_
the	_	_
diagonal	_	_
of	_	_
M′P	_	_
.	_	_

#203
Furthermore	_	_
,	_	_
both	_	_
approaches	_	_
deal	_	_
with	_	_
separate	_	_
aspects	_	_
of	_	_
predicate	_	_
logic	_	_
,	_	_
namely	_	_
applying	_	_
predicates	_	_
to	_	_
logical	_	_
atoms	_	_
,	_	_
and	_	_
applying	_	_
them	_	_
to	_	_
bound	_	_
variables	_	_
.	_	_

#204
With	_	_
this	_	_
in	_	_
mind	_	_
,	_	_
it	_	_
is	_	_
possible	_	_
to	_	_
see	_	_
how	_	_
both	_	_
approaches	_	_
can	feasibility	_
be	_	_
used	_	_
sequentially	_	_
by	_	_
noting	_	_
that	_	_
tensor	_	_
contraction	_	_
allows	_	_
for	_	_
partial	_	_
application	_	_
of	_	_
relations	_	_
to	_	_
logical	_	_
atoms	_	_
.	_	_

#205
For	_	_
example	_	_
,	_	_
applying	_	_
a	_	_
binary	_	_
relation	_	_
to	_	_
its	_	_
first	_	_
argument	_	_
under	_	_
the	_	_
first	_	_
tensor-based	_	_
model	_	_
yields	_	_
a	_	_
predicate	_	_
.	_	_

#206
Translating	_	_
this	_	_
predicate	_	_
into	_	_
the	_	_
second	_	_
model’s	_	_
form	_	_
using	_	_
the	_	_
equality	_	_
defined	_	_
above	_	_
then	_	_
permits	_	_
us	_	_
to	_	_
use	_	_
it	_	_
in	_	_
quantified	_	_
expressions	_	_
.	_	_

#207
Using	_	_
this	_	_
,	_	_
we	_	_
can	feasibility	_
evaluate	_	_
expressions	_	_
of	_	_
the	_	_
form	_	_
“There	_	_
exists	_	_
someone	_	_
who	_	_
John	_	_
loves”	_	_
.	_	_

#208
Future	_	_
work	_	_
in	_	_
this	_	_
area	_	_
should	deontic	_
therefore	_	_
focus	_	_
on	_	_
developing	_	_
a	_	_
version	_	_
of	_	_
this	_	_
tensor	_	_
calculus	_	_
which	_	_
permits	_	_
seamless	_	_
transition	_	_
between	_	_
both	_	_
tensor	_	_
formulations	_	_
of	_	_
logical	_	_
predicates	_	_
.	_	_

#209
Finally	_	_
,	_	_
this	_	_
paper	_	_
aims	_	_
to	_	_
provide	_	_
a	_	_
starting	_	_
point	_	_
for	_	_
the	_	_
integration	_	_
of	_	_
logical	_	_
aspects	_	_
into	_	_
compositional	_	_
distributional	_	_
semantic	_	_
models	_	_
.	_	_

#210
The	_	_
work	_	_
presented	_	_
here	_	_
serves	_	_
to	_	_
illustrate	_	_
how	_	_
tensors	_	_
can	capability	_
simulate	_	_
logical	_	_
elements	_	_
and	_	_
operations	_	_
,	_	_
but	_	_
does	_	_
not	_	_
address	_	_
(	_	_
or	_	_
seek	_	_
to	_	_
address	_	_
)	_	_
the	_	_
fact	_	_
that	_	_
the	_	_
vectors	_	_
and	_	_
matrices	_	_
in	_	_
most	_	_
compositional	_	_
distributional	_	_
semantic	_	_
models	_	_
do	_	_
not	_	_
cleanly	_	_
represent	_	_
elements	_	_
of	_	_
a	_	_
logical	_	_
domain	_	_
.	_	_

#211
However	_	_
,	_	_
such	_	_
distributional	_	_
representations	_	_
can	capability-feasibility	_
arguably	_	_
be	_	_
seen	_	_
as	_	_
representing	_	_
the	_	_
properties	_	_
objects	_	_
of	_	_
a	_	_
logical	_	_
domain	_	_
hold	_	_
in	_	_
a	_	_
corpus	_	_
:	_	_
for	_	_
example	_	_
the	_	_
similar	_	_
distributions	_	_
of	_	_
‘car’	_	_
and	_	_
‘automobile’	_	_
could	capability-speculation	_
serve	_	_
to	_	_
indicate	_	_
that	_	_
these	_	_
concepts	_	_
are	_	_
co-extensive	_	_
.	_	_

#212
This	_	_
suggests	_	_
two	_	_
directions	_	_
research	_	_
based	_	_
on	_	_
this	_	_
paper	_	_
could	options	_
take	_	_
.	_	_

#213
One	_	_
could	feasibility-options	_
use	_	_
the	_	_
hypothesis	_	_
that	_	_
similar	_	_
vectors	_	_
indicate	_	_
co-extensive	_	_
concepts	_	_
to	_	_
infer	_	_
a	_	_
(	_	_
probabilistic	_	_
)	_	_
logical	_	_
domain	_	_
and	_	_
set	_	_
of	_	_
predicates	_	_
,	_	_
and	_	_
use	_	_
the	_	_
methods	_	_
described	_	_
above	_	_
without	_	_
modification	_	_
;	_	_
alternatively	_	_
one	_	_
could	feasibility-options	_
use	_	_
the	_	_
form	_	_
of	_	_
the	_	_
logical	_	_
operations	_	_
and	_	_
predicate	_	_
tensors	_	_
described	_	_
in	_	_
this	_	_
paper	_	_
as	_	_
a	_	_
basis	_	_
for	_	_
a	_	_
higher-dimensional	_	_
predicate	_	_
calculus	_	_
,	_	_
and	_	_
investigate	_	_
how	_	_
such	_	_
higher-dimensional	_	_
‘logical’	_	_
operations	_	_
and	_	_
elements	_	_
could	feasibility-options	_
be	_	_
defined	_	_
or	_	_
learned	_	_
.	_	_

#214
Either	_	_
way	_	_
,	_	_
the	_	_
problem	_	_
of	_	_
reconciling	_	_
the	_	_
fuzzy	_	_
‘messiness’	_	_
of	_	_
distributional	_	_
models	_	_
with	_	_
the	_	_
sharp	_	_
‘cleanliness’	_	_
of	_	_
logic	_	_
is	_	_
a	_	_
difficult	_	_
problem	_	_
,	_	_
but	_	_
I	_	_
hope	_	_
to	_	_
have	_	_
demonstrated	_	_
in	_	_
this	_	_
paper	_	_
that	_	_
a	_	_
small	_	_
step	_	_
has	_	_
been	_	_
made	_	_
in	_	_
the	_	_
right	_	_
direction	_	_
.	_	_