#37
In	_	_
both	_	_
cases	_	_
,	_	_
we	_	_
are	_	_
provided	_	_
with	_	_
a	_	_
frame	_	_
lexicon	_	_
that	_	_
contains	_	_
type-level	_	_
information	_	_
for	_	_
lexical	_	_
units	_	_
(	_	_
a	_	_
lemma	_	_
conjoined	_	_
with	_	_
a	_	_
coarse-grained	_	_
partofspeech	_	_
tag	_	_
)	_	_
.1	_	_
For	_	_
each	_	_
lexical	_	_
unit	_	_
,	_	_
a	_	_
list	_	_
of	_	_
senses	_	_
,	_	_
or	_	_
frames	_	_
,	_	_
are	_	_
provided	_	_
,	_	_
where	_	_
each	_	_
frame	_	_
comes	_	_
with	_	_
a	_	_
set	_	_
of	_	_
semantic	_	_
roles	_	_
that	_	_
constitute	_	_
the	_	_
various	_	_
participants	_	_
in	_	_
the	_	_
frame	_	_
.	_	_

#38
These	_	_
roles	_	_
can	options	_
be	_	_
either	_	_
core	_	_
or	_	_
non-core	_	_
to	_	_
the	_	_
frame	_	_
.	_	_

#39
In	_	_
PropBank	_	_
,	_	_
a	_	_
set	_	_
of	_	_
seven	_	_
generic	_	_
core	_	_
role	_	_
labels	_	_
are	_	_
defined	_	_
(	_	_
A0-A5	_	_
and	_	_
AA	_	_
)	_	_
that	_	_
take	_	_
on	_	_
different	_	_
semantics	_	_
for	_	_
each	_	_
frame	_	_
;	_	_
each	_	_
frame	_	_
associates	_	_
with	_	_
a	_	_
subset	_	_
of	_	_
these	_	_
core	_	_
roles	_	_
.	_	_

#59
In	_	_
this	_	_
work	_	_
,	_	_
as	_	_
part	_	_
of	_	_
preprocessing	_	_
,	_	_
we	_	_
use	_	_
a	_	_
part-of-speech	_	_
tagger	_	_
and	_	_
a	_	_
dependency	_	_
parser	_	_
to	_	_
syntactically	_	_
analyze	_	_
the	_	_
sentence	_	_
;	_	_
this	_	_
diverges	_	_
from	_	_
most	_	_
prior	_	_
work	_	_
on	_	_
semantic	_	_
argument	_	_
prediction	_	_
,	_	_
which	_	_
rely	_	_
on	_	_
constituency	_	_
parses	_	_
.	_	_

#60
Next	_	_
,	_	_
we	_	_
take	_	_
each	_	_
disambiguated	_	_
frame	_	_
and	_	_
look	_	_
up	_	_
the	_	_
core	_	_
and	_	_
non-core	_	_
(	_	_
or	_	_
adjunct	_	_
)	_	_
roles	_	_
that	_	_
can	capability	_
associate	_	_
with	_	_
the	_	_
frame	_	_
.	_	_

#61
Given	_	_
the	_	_
predicate	_	_
token	_	_
,	_	_
we	_	_
(	_	_
over-	_	_
)	_	_
generate	_	_
a	_	_
set	_	_
of	_	_
candidate	_	_
spans	_	_
in	_	_
the	_	_
sentence	_	_
,	_	_
that	_	_
are	_	_
then	_	_
labeled	_	_
with	_	_
roles	_	_
from	_	_
the	_	_
set	_	_
of	_	_
core	_	_
roles	_	_
,	_	_
from	_	_
the	_	_
set	_	_
of	_	_
adjunct	_	_
roles	_	_
,	_	_
or	_	_
with	_	_
the	_	_
null	_	_
role	_	_
∅	_	_
(	_	_
role	_	_
labeling	_	_
)	_	_
.2	_	_
Our	_	_
system	_	_
thus	_	_
comprises	_	_
a	_	_
cascade	_	_
of	_	_
two	_	_
statistical	_	_
models	_	_
.	_	_

#74
,	_	_
wn	_	_
)	_	_
,	_	_
we	_	_
seek	_	_
to	_	_
predict	_	_
a	_	_
set	_	_
of	_	_
argument	_	_
spans	_	_
labeled	_	_
with	_	_
their	_	_
semantic	_	_
roles	_	_
.	_	_

#75
We	_	_
assume	_	_
that	_	_
there	_	_
is	_	_
a	_	_
set	_	_
of	_	_
candidate	_	_
spans	_	_
S	_	_
that	_	_
could	capability-speculation	_
potentially	_	_
serve	_	_
as	_	_
arguments	_	_
of	_	_
t.	_	_
Specifically	_	_
,	_	_
we	_	_
derive	_	_
S	_	_
with	_	_
a	_	_
high-recall	_	_
rule-based	_	_
algorithm	_	_
that	_	_
looks	_	_
at	_	_
the	_	_
(	_	_
dependency	_	_
)	_	_
syntactic	_	_
context	_	_
of	_	_
the	_	_
predicate	_	_
word	_	_
t	_	_
,	_	_
as	_	_
described	_	_
in	_	_
§6.3	_	_
.	_	_

#76
Let	_	_
one	_	_
candidate	_	_
span	_	_
be	_	_
s	_	_
∈	_	_
S.	_	_
The	_	_
set	_	_
of	_	_
possible	_	_
rolesR	_	_
is	_	_
composed	_	_
of	_	_
core	_	_
rolesRC	_	_
associating	_	_
with	_	_
f	_	_
,	_	_
adjunct	_	_
rolesRA	_	_
and	_	_
the	_	_
null	_	_
role	_	_
∅	_	_
.	_	_

#80
This	_	_
gives	_	_
us	_	_
a	_	_
global	_	_
score	_	_
which	_	_
is	_	_
a	_	_
sum	_	_
over	_	_
all	_	_
spans	_	_
:	_	_
∑	_	_
s∈S	_	_
max	_	_
r∈R	_	_
g	_	_
(	_	_
s	_	_
,	_	_
r	_	_
)	_	_
,	_	_
(	_	_
1	_	_
)	_	_
with	_	_
the	_	_
solution	_	_
being	_	_
the	_	_
corresponding	_	_
argmax	_	_
.	_	_

#81
3.4	_	_
Semantic	_	_
Role	_	_
Labeling	_	_
as	_	_
an	_	_
ILP	_	_
We	_	_
can	capability-feasibility	_
represent	_	_
any	_	_
prediction	_	_
for	_	_
the	_	_
individual	_	_
classifiers	_	_
with	_	_
a	_	_
set	_	_
of	_	_
indicator	_	_
variables	_	_
z	_	_
=	_	_
{	_	_
zs	_	_
,	_	_
r	_	_
}	_	_
with	_	_
one	_	_
variable	_	_
for	_	_
each	_	_
span	_	_
s	_	_
and	_	_
role	_	_
r.	_	_
An	_	_
equivalent	_	_
formulation	_	_
to	_	_
Equation	_	_
(	_	_
1	_	_
)	_	_
is	_	_
then	_	_
:	_	_
max	_	_
z	_	_
∑	_	_
s∈S	_	_
∑	_	_
r∈R	_	_
zs	_	_
,	_	_
r	_	_
×	_	_
g	_	_
(	_	_
s	_	_
,	_	_
r	_	_
)	_	_
s.t	_	_
.	_	_

#82
z	_	_
∈	_	_
{	_	_
0	_	_
,	_	_
1	_	_
}	_	_
|S||R|	_	_
∑	_	_
r∈R	_	_
zs	_	_
,	_	_
r	_	_
=	_	_
1	_	_
∀s	_	_
∈	_	_
S	_	_
,	_	_
(	_	_
2	_	_
)	_	_
where	_	_
we	_	_
have	_	_
constrained	_	_
the	_	_
indicator	_	_
variables	_	_
to	_	_
take	_	_
on	_	_
binary	_	_
values	_	_
,	_	_
and	_	_
required	_	_
that	_	_
we	_	_
choose	_	_
exactly	_	_
one	_	_
role	_	_
(	_	_
including	_	_
the	_	_
∅	_	_
role	_	_
)	_	_
for	_	_
each	_	_
span	_	_
.	_	_

#84
We	_	_
want	_	_
to	_	_
ensure	_	_
that	_	_
at	_	_
most	_	_
one	_	_
of	_	_
the	_	_
spans	_	_
in	_	_
Si	_	_
have	_	_
an	_	_
overt	_	_
role	_	_
assignment	_	_
:	_	_
∀i	_	_
∈	_	_
[	_	_
1	_	_
,	_	_
n	_	_
]	_	_
,	_	_
∑	_	_
s∈Si	_	_
∑	_	_
r	_	_
6=∅	_	_
zs	_	_
,	_	_
r	_	_
≤	_	_
1	_	_
.	_	_

#85
Unique	_	_
Core	_	_
Roles	_	_
Each	_	_
core	_	_
role	_	_
r	_	_
∈	_	_
RC	_	_
can	deontic	_
be	_	_
overt	_	_
in	_	_
at	_	_
most	_	_
one	_	_
of	_	_
the	_	_
spans	_	_
in	_	_
S	_	_
:	_	_
∀r	_	_
∈	_	_
RC	_	_
,	_	_
∑	_	_
s∈S	_	_
zs	_	_
,	_	_
r	_	_
≤	_	_
1	_	_
.	_	_

#86
Continuation	_	_
Roles	_	_
A	_	_
continuation	_	_
role	_	_
,	_	_
may	deontic	_
only	_	_
be	_	_
assigned	_	_
if	_	_
the	_	_
corresponding	_	_
base	_	_
(	_	_
i.e	_	_
.	_	_
noncontinuation	_	_
,	_	_
non-reference	_	_
)	_	_
role	_	_
is	_	_
assigned	_	_
to	_	_
an	_	_
earlier	_	_
span	_	_
.	_	_

#87
To	_	_
express	_	_
this	_	_
,	_	_
we	_	_
define	_	_
s	_	_
≤	_	_
s′	_	_
to	_	_
mean	_	_
that	_	_
s	_	_
starts	_	_
before	_	_
s′	_	_
.	_	_

#90
3Note	_	_
that	_	_
the	_	_
continuation	_	_
roles	_	_
and	_	_
reference	_	_
roles	_	_
constraints	_	_
below	_	_
are	_	_
only	_	_
applicable	_	_
to	_	_
PropBank	_	_
annotations	_	_
,	_	_
as	_	_
these	_	_
roles	_	_
are	_	_
not	_	_
present	_	_
in	_	_
FrameNet	_	_
annotations	_	_
.	_	_

#91
Reference	_	_
Roles	_	_
Similar	_	_
to	_	_
continuation	_	_
roles	_	_
,	_	_
a	_	_
span	_	_
can	deontic	_
only	_	_
be	_	_
labeled	_	_
with	_	_
a	_	_
reference	_	_
role	_	_
r	_	_
∈	_	_
RR	_	_
if	_	_
another	_	_
span	_	_
is	_	_
labeled	_	_
with	_	_
the	_	_
corresponding	_	_
base	_	_
role	_	_
,	_	_
base	_	_
(	_	_
r	_	_
)	_	_
∈	_	_
RC	_	_
∪RA	_	_
:	_	_
∀r	_	_
∈	_	_
RR	_	_
,	_	_
∀s	_	_
∈	_	_
S	_	_
,	_	_
zs	_	_
,	_	_
r	_	_
≤	_	_
∑	_	_
s′∈S	_	_
zs′	_	_
,	_	_
base	_	_
(	_	_
r	_	_
)	_	_
.	_	_

#92
4	_	_
Dynamic	_	_
Program	_	_
Formulation	_	_
An	_	_
advantage	_	_
of	_	_
the	_	_
formulation	_	_
in	_	_
the	_	_
previous	_	_
section	_	_
is	_	_
that	_	_
the	_	_
constrained	_	_
MAP	_	_
inference	_	_
problem	_	_
can	feasibility	_
be	_	_
solved	_	_
with	_	_
an	_	_
off-the-shelf	_	_
ILP	_	_
solver	_	_
.	_	_

#93
Unfortunately	_	_
,	_	_
these	_	_
solvers	_	_
typically	_	_
fail	_	_
to	_	_
exploit	_	_
the	_	_
problem-specific	_	_
structure	_	_
of	_	_
the	_	_
set	_	_
of	_	_
admissible	_	_
solutions	_	_
,	_	_
which	_	_
often	_	_
leads	_	_
to	_	_
slow	_	_
inference	_	_
.	_	_

#94
As	_	_
an	_	_
alternative	_	_
,	_	_
we	_	_
propose	_	_
a	_	_
dynamic	_	_
program	_	_
that	_	_
takes	_	_
advantage	_	_
of	_	_
the	_	_
sequential	_	_
and	_	_
local	_	_
nature	_	_
of	_	_
the	_	_
problem	_	_
,	_	_
while	_	_
directly	_	_
enforcing	_	_
all	_	_
but	_	_
the	_	_
non-	_	_
core	_	_
continuation	_	_
roles	_	_
constraint	_	_
and	_	_
the	_	_
reference	_	_
roles	_	_
constraint	_	_
;	_	_
the	_	_
remaining	_	_
constraints	_	_
can	feasibility	_
be	_	_
efficiently	_	_
enforced	_	_
by	_	_
a	_	_
straightforward	_	_
search	_	_
over	_	_
the	_	_
k-best	_	_
solutions	_	_
of	_	_
the	_	_
dynamic	_	_
program	_	_
.	_	_

#95
The	_	_
resulting	_	_
inference	_	_
procedure	_	_
is	_	_
guaranteed	_	_
to	_	_
find	_	_
the	_	_
same	_	_
optimal	_	_
solution	_	_
as	_	_
the	_	_
corresponding	_	_
ILP	_	_
(	_	_
modulo	_	_
rounding	_	_
and	_	_
tie	_	_
breaking	_	_
)	_	_
,	_	_
while	_	_
being	_	_
substantially	_	_
faster	_	_
.	_	_

#96
In	_	_
addition	_	_
,	_	_
the	_	_
forward-backward	_	_
algorithm	_	_
can	capability-feasibility	_
be	_	_
applied	_	_
to	_	_
compute	_	_
marginals	_	_
over	_	_
the	_	_
indicator	_	_
variables	_	_
,	_	_
taking	_	_
the	_	_
constraints	_	_
into	_	_
account	_	_
.	_	_

#97
This	_	_
facilitates	_	_
computation	_	_
of	_	_
confidence	_	_
scores	_	_
,	_	_
as	_	_
well	_	_
as	_	_
learning	_	_
with	_	_
a	_	_
constrained	_	_
globally	_	_
normalized	_	_
log-linear	_	_
model	_	_
,	_	_
as	_	_
described	_	_
in	_	_
§5	_	_
.	_	_

#105
of	_	_
mapping	_	_
“It”	_	_
to	_	_
A1	_	_
,	_	_
“to	_	_
rain”	_	_
to	_	_
C-A1	_	_
and	_	_
“rain”	_	_
to	_	_
∅	_	_
.	_	_

#106
The	_	_
dynamic	_	_
program	_	_
needs	_	_
to	_	_
ensure	_	_
that	_	_
regardless	_	_
of	_	_
the	_	_
scores	_	_
,	_	_
either	_	_
“to	_	_
rain”	_	_
or	_	_
“rain”	_	_
must	deontic	_
be	_	_
labeled	_	_
with	_	_
∅	_	_
since	_	_
they	_	_
overlap	_	_
in	_	_
the	_	_
sentence	_	_
.	_	_

#107
We	_	_
satisfy	_	_
the	_	_
latter	_	_
by	_	_
using	_	_
a	_	_
semi-Markov	_	_
model	_	_
formally	_	_
described	_	_
below	_	_
.	_	_

#123
Proof	_	_
Sketch	_	_
We	_	_
already	_	_
described	_	_
how	_	_
to	_	_
construct	_	_
an	_	_
assignment	_	_
from	_	_
any	_	_
path	_	_
through	_	_
the	_	_
lattice	_	_
.	_	_

#124
For	_	_
any	_	_
role	_	_
assignment	_	_
without	_	_
overlaps	_	_
we	_	_
can	feasibility	_
include	_	_
all	_	_
these	_	_
edges	_	_
in	_	_
a	_	_
single	_	_
left-to-right	_	_
path	_	_
,	_	_
and	_	_
complete	_	_
the	_	_
path	_	_
with	_	_
null	_	_
edges	_	_
.	_	_

#125
Since	_	_
there	_	_
are	_	_
no	_	_
overlaps	_	_
,	_	_
we	_	_
will	_	_
not	_	_
need	_	_
to	_	_
include	_	_
incompatible	_	_
edges	_	_
.	_	_

#126
So	_	_
there	_	_
is	_	_
a	_	_
one-to-one	_	_
correspondence	_	_
between	_	_
paths	_	_
and	_	_
valid	_	_
assignments	_	_
.	_	_

#127
To	_	_
see	_	_
that	_	_
the	_	_
score	_	_
is	_	_
the	_	_
same	_	_
as	_	_
the	_	_
path	_	_
length	_	_
,	_	_
we	_	_
can	feasibility	_
use	_	_
induction	_	_
on	_	_
the	_	_
number	_	_
of	_	_
non-null	_	_
edges	_	_
in	_	_
the	_	_
path	_	_
.	_	_

#128
Base	_	_
case	_	_
:	_	_
If	_	_
there	_	_
are	_	_
no	_	_
selected	_	_
arguments	_	_
,	_	_
then	_	_
the	_	_
length	_	_
of	_	_
the	_	_
path	_	_
is	_	_
just	_	_
c∅∗	_	_
which	_	_
is	_	_
exactly	_	_
the	_	_
ILP	_	_
score	_	_
.	_	_

#133
Thus	_	_
,	_	_
the	_	_
change	_	_
in	_	_
ILP	_	_
score	_	_
is	_	_
also	_	_
g	_	_
(	_	_
s	_	_
,	_	_
r	_	_
)	_	_
−	_	_
g	_	_
(	_	_
s	_	_
,	_	_
∅	_	_
)	_	_
.	_	_

#134
The	_	_
above	_	_
construction	_	_
can	capability-feasibility	_
be	_	_
further	_	_
simplified	_	_
.	_	_

#135
Note	_	_
that	_	_
while	_	_
the	_	_
special	_	_
edge	_	_
e∗	_	_
,	_	_
∅	_	_
is	_	_
needed	_	_
for	_	_
the	_	_
direct	_	_
correspondence	_	_
with	_	_
the	_	_
ILP	_	_
score	_	_
,	_	_
its	_	_
weight	_	_
is	_	_
constant	_	_
across	_	_
variable	_	_
assignments	_	_
.	_	_

#148
For	_	_
efficiency	_	_
,	_	_
we	_	_
exclude	_	_
vertices	_	_
and	_	_
edges	_	_
not	_	_
on	_	_
any	_	_
path	_	_
from	_	_
v0	_	_
to	_	_
vn+1	_	_
.	_	_

#149
For	_	_
example	_	_
,	_	_
vk1	_	_
exist	_	_
only	_	_
for	_	_
|k|	_	_
≤	_	_
1	_	_
,	_	_
since	_	_
v0	_	_
corresponds	_	_
to	_	_
no	_	_
core	_	_
roles	_	_
being	_	_
selected	_	_
and	_	_
a	_	_
single	_	_
span	_	_
can	capability	_
add	_	_
at	_	_
most	_	_
one	_	_
core	_	_
role	_	_
.	_	_

#150
Argument	_	_
edges	_	_
eks	_	_
,	_	_
r	_	_
connecting	_	_
vertices	_	_
vki−1	_	_
and	_	_
v	_	_
k′	_	_
j	_	_
corresponds	_	_
to	_	_
assigning	_	_
role	_	_
r	_	_
to	_	_
the	_	_
span	_	_
s	_	_
=	_	_
wi	_	_
,	_	_
.	_	_

#155
The	_	_
edge	_	_
is	_	_
only	_	_
included	_	_
if	_	_
the	_	_
role	_	_
r	_	_
is	_	_
non-core	_	_
,	_	_
or	_	_
if	_	_
kr	_	_
6=	_	_
1	_	_
,	_	_
to	_	_
guarantee	_	_
uniqueness	_	_
of	_	_
core	_	_
roles	_	_
.	_	_

#156
By	_	_
this	_	_
construction	_	_
,	_	_
once	_	_
a	_	_
core	_	_
role	_	_
has	_	_
been	_	_
assigned	_	_
at	_	_
a	_	_
vertex	_	_
vkj	_	_
,	_	_
it	_	_
can	capability-feasibility	negation
not	_	_
be	_	_
assigned	_	_
on	_	_
any	_	_
future	_	_
path	_	_
reachable	_	_
from	_	_
vkj	_	_
.	_	_

#157
Lattice	_	_
Weights	_	_
The	_	_
edges	_	_
are	_	_
weighted	_	_
in	_	_
the	_	_
same	_	_
way	_	_
as	_	_
in	_	_
§4.1	_	_
.	_	_

#159
Since	_	_
the	_	_
weights	_	_
are	_	_
identical	_	_
,	_	_
the	_	_
proof	_	_
of	_	_
Proposition	_	_
1	_	_
carries	_	_
over	_	_
directly	_	_
.	_	_

#160
5We	_	_
note	_	_
that	_	_
the	_	_
approach	_	_
of	_	_
Riedel	_	_
and	_	_
Smith	_	_
(	_	_
2010	_	_
)	_	_
could	feasibility-speculation	_
potentially	_	_
be	_	_
used	_	_
to	_	_
compute	_	_
the	_	_
marginals	_	_
in	_	_
an	_	_
incremental	_	_
fashion	_	_
similar	_	_
to	_	_
Tromble	_	_
and	_	_
Eisner	_	_
(	_	_
2006	_	_
)	_	_
.	_	_

#161
6	_	_
In	_	_
the	_	_
OntoNotes	_	_
5.0	_	_
development	_	_
set	_	_
,	_	_
there	_	_
are	_	_
on	_	_
average	_	_
10.4	_	_
core-role	_	_
combinations	_	_
per	_	_
predicate	_	_
frame	_	_
.	_	_

#166
Dashed	_	_
edges	_	_
indicate	_	_
the	_	_
correct	_	_
path	_	_
.	_	_

#167
4.3	_	_
Core	_	_
Continuation	_	_
Roles	_	_
Recall	_	_
that	_	_
the	_	_
constraint	_	_
for	_	_
continuation	_	_
roles	_	_
is	_	_
that	_	_
they	_	_
must	deontic	_
occur	_	_
after	_	_
their	_	_
corresponding	_	_
base	_	_
role	_	_
.	_	_

#168
We	_	_
enforce	_	_
this	_	_
constraint	_	_
for	_	_
core	_	_
roles	_	_
by	_	_
not	_	_
including	_	_
argument	_	_
edges	_	_
eks	_	_
,	_	_
r	_	_
with	_	_
r	_	_
∈	_	_
RN	_	_
from	_	_
a	_	_
configuration	_	_
k	_	_
which	_	_
does	_	_
not	_	_
have	_	_
the	_	_
corresponding	_	_
base	_	_
role	_	_
set	_	_
(	_	_
kbase	_	_
(	_	_
r	_	_
)	_	_
6=	_	_
1	_	_
)	_	_
.	_	_

#170
4.4	_	_
Remaining	_	_
Constraints	_	_
Unfortunately	_	_
,	_	_
enforcing	_	_
the	_	_
reference	_	_
roles	_	_
constraint	_	_
,	_	_
and	_	_
the	_	_
continuation	_	_
roles	_	_
constraint	_	_
for	_	_
non-	_	_
core	_	_
roles	_	_
,	_	_
directly	_	_
in	_	_
the	_	_
dynamic	_	_
program	_	_
is	_	_
not	_	_
practical	_	_
,	_	_
due	_	_
to	_	_
combinatorial	_	_
explosion	_	_
.	_	_

#171
First	_	_
,	_	_
while	_	_
the	_	_
continuation	_	_
roles	_	_
constraint	_	_
almost	_	_
only	_	_
applies	_	_
to	_	_
core	_	_
roles,7	_	_
every	_	_
role	_	_
in	_	_
RC	_	_
∪	_	_
RA	_	_
may	capability-options	_
have	_	_
a	_	_
corresponding	_	_
reference	_	_
role	_	_
.	_	_

#172
Second	_	_
,	_	_
even	_	_
if	_	_
we	_	_
restrict	_	_
the	_	_
constraints	_	_
to	_	_
core	_	_
reference	_	_
roles	_	_
,	_	_
the	_	_
lack	_	_
of	_	_
ordering	_	_
between	_	_
the	_	_
spans	_	_
in	_	_
the	_	_
constraint	_	_
means	_	_
that	_	_
we	_	_
would	_	_
have	_	_
to	_	_
represent	_	_
all	_	_
subsets	_	_
of	_	_
RC	_	_
×	_	_
{	_	_
r	_	_
|	_	_
r	_	_
∈	_	_
RR	_	_
,	_	_
base	_	_
(	_	_
r	_	_
)	_	_
∈	_	_
RC	_	_
}	_	_
.	_	_

#173
However	_	_
,	_	_
these	_	_
constraints	_	_
are	_	_
rarely	_	_
violated	_	_
in	_	_
practice	_	_
.	_	_

#174
As	_	_
we	_	_
will	_	_
see	_	_
in	_	_
§6	_	_
,	_	_
these	_	_
remaining	_	_
constraints	_	_
can	feasibility	_
be	_	_
enforced	_	_
efficiently	_	_
with	_	_
k-best	_	_
inference	_	_
in	_	_
the	_	_
constrained	_	_
dynamic	_	_
program	_	_
from	_	_
7Less	_	_
than	_	_
2	_	_
%	_	_
of	_	_
continuation	_	_
roles	_	_
correspond	_	_
to	_	_
non-core	_	_
roles	_	_
in	_	_
the	_	_
OntoNotes	_	_
5.0	_	_
development	_	_
set	_	_
.	_	_

#175
Frame	_	_
identification	_	_
features	_	_
•	_	_
the	_	_
predicate	_	_
t	_	_
•	_	_
tag	_	_
of	_	_
t	_	_
•	_	_
the	_	_
lemma	_	_
`	_	_
•	_	_
children	_	_
words	_	_
of	_	_
t	_	_
•	_	_
tag	_	_
of	_	_
t’s	_	_
children	_	_
•	_	_
tag	_	_
of	_	_
t’s	_	_
parent	_	_
•	_	_
parent	_	_
word	_	_
of	_	_
t	_	_
•	_	_
subcat	_	_
.	_	_

#184
We	_	_
treat	_	_
the	_	_
local	_	_
scores	_	_
as	_	_
the	_	_
potentials	_	_
in	_	_
a	_	_
multiclass	_	_
logistic	_	_
regression	_	_
model	_	_
,	_	_
such	_	_
that	_	_
p	_	_
(	_	_
r	_	_
|	_	_
s	_	_
,	_	_
x	_	_
,	_	_
t	_	_
,	_	_
`	_	_
,	_	_
f	_	_
)	_	_
∝	_	_
exp	_	_
(	_	_
g	_	_
(	_	_
s	_	_
,	_	_
r	_	_
)	_	_
)	_	_
,	_	_
and	_	_
estimate	_	_
the	_	_
parameters	_	_
by	_	_
maximizing	_	_
the	_	_
regularized	_	_
conditional	_	_
likelihood	_	_
of	_	_
the	_	_
training	_	_
set	_	_
.	_	_

#185
A	_	_
downside	_	_
of	_	_
estimating	_	_
the	_	_
parameters	_	_
locally	_	_
is	_	_
that	_	_
it	_	_
“wastes”	_	_
model	_	_
capacity	_	_
,	_	_
in	_	_
the	_	_
sense	_	_
that	_	_
the	_	_
learning	_	_
seeks	_	_
to	_	_
move	_	_
probability	_	_
mass	_	_
away	_	_
from	_	_
annotations	_	_
that	_	_
violate	_	_
structural	_	_
constraints	_	_
but	_	_
can	capability-feasibility	negation
never	_	_
be	_	_
predicted	_	_
at	_	_
inference	_	_
time	_	_
.	_	_

#186
With	_	_
the	_	_
dynamic	_	_
program	_	_
formulation	_	_
from	_	_
the	_	_
previous	_	_
section	_	_
,	_	_
we	_	_
can	feasibility	_
instead	_	_
use	_	_
a	_	_
globally	_	_
normalized	_	_
probabilistic	_	_
model	_	_
that	_	_
takes	_	_
the	_	_
constraints	_	_
from	_	_
§4.1-§4.3	_	_
into	_	_
account	_	_
during	_	_
learning	_	_
.	_	_

#187
To	_	_
achieve	_	_
this	_	_
,	_	_
we	_	_
model	_	_
the	_	_
probability	_	_
of	_	_
a	_	_
joint	_	_
assignment	_	_
Features	_	_
additionally	_	_
conjoined	_	_
with	_	_
the	_	_
frame	_	_
•	_	_
starting	_	_
word	_	_
of	_	_
s	_	_
•	_	_
tag	_	_
of	_	_
the	_	_
starting	_	_
word	_	_
of	_	_
s	_	_
•	_	_
ending	_	_
word	_	_
of	_	_
s	_	_
•	_	_
tag	_	_
of	_	_
the	_	_
ending	_	_
word	_	_
of	_	_
s	_	_
•	_	_
head	_	_
word	_	_
of	_	_
s	_	_
•	_	_
tag	_	_
of	_	_
the	_	_
head	_	_
word	_	_
of	_	_
s	_	_
•	_	_
bag	_	_
of	_	_
words	_	_
in	_	_
s	_	_
•	_	_
bag	_	_
of	_	_
tags	_	_
in	_	_
s	_	_
•	_	_
a	_	_
bias	_	_
feature	_	_
•	_	_
cluster	_	_
of	_	_
s’s	_	_
head	_	_
•	_	_
dependency	_	_
path	_	_
between	_	_
s’s	_	_
head	_	_
and	_	_
t	_	_
•	_	_
the	_	_
set	_	_
of	_	_
dependency	_	_
labels	_	_
of	_	_
t’s	_	_
children	_	_
•	_	_
dependency	_	_
path	_	_
conjoined	_	_
with	_	_
the	_	_
tag	_	_
of	_	_
s’s	_	_
head	_	_
•	_	_
dep	_	_
.	_	_

#197
z	_	_
,	_	_
subject	_	_
to	_	_
the	_	_
constraints	_	_
,	_	_
as	_	_
p	_	_
(	_	_
z	_	_
|	_	_
x	_	_
,	_	_
t	_	_
,	_	_
`	_	_
,	_	_
f	_	_
)	_	_
∝	_	_
exp	_	_
(	_	_
∑	_	_
s∈S	_	_
∑	_	_
r∈R	_	_
g	_	_
(	_	_
s	_	_
,	_	_
r	_	_
)	_	_
×	_	_
zs	_	_
,	_	_
r	_	_
)	_	_
s.t	_	_
.	_	_

#198
z	_	_
∈	_	_
{	_	_
0	_	_
,	_	_
1	_	_
}	_	_
|S||R|	_	_
,	_	_
Az	_	_
≤	_	_
b	_	_
,	_	_
where	_	_
Az	_	_
≤	_	_
b	_	_
encodes	_	_
the	_	_
subset	_	_
of	_	_
linear	_	_
constraints	_	_
from	_	_
§3.4	_	_
that	_	_
can	feasibility	_
be	_	_
tractably	_	_
enforced	_	_
in	_	_
the	_	_
dynamic	_	_
program	_	_
.	_	_

#199
In	_	_
effect	_	_
,	_	_
p	_	_
(	_	_
z	_	_
|	_	_
x	_	_
,	_	_
t	_	_
,	_	_
`	_	_
,	_	_
f	_	_
)	_	_
=	_	_
0	_	_
for	_	_
any	_	_
z	_	_
that	_	_
violates	_	_
the	_	_
constraints	_	_
.	_	_

#201
There	_	_
have	_	_
been	_	_
several	_	_
studies	_	_
of	_	_
the	_	_
use	_	_
of	_	_
constrained	_	_
MAP	_	_
inference	_	_
for	_	_
semantic	_	_
role	_	_
labeling	_	_
on	_	_
top	_	_
of	_	_
the	_	_
predictions	_	_
of	_	_
local	_	_
classifiers	_	_
(	_	_
Tromble	_	_
and	_	_
Eisner	_	_
,	_	_
2006	_	_
;	_	_
Punyakanok	_	_
et	_	_
al.	_	_
,	_	_
2008	_	_
;	_	_
Das	_	_
et	_	_
al.	_	_
,	_	_
2012	_	_
)	_	_
,	_	_
as	_	_
well	_	_
as	_	_
on	_	_
ensembles	_	_
for	_	_
combining	_	_
the	_	_
predictions	_	_
of	_	_
separate	_	_
systems	_	_
using	_	_
integer	_	_
linear	_	_
programming	_	_
(	_	_
Surdeanu	_	_
et	_	_
al.	_	_
,	_	_
2007	_	_
;	_	_
Punyakanok	_	_
et	_	_
al.	_	_
,	_	_
2008	_	_
)	_	_
.8	_	_
Meza-Ruiz	_	_
and	_	_
Riedel	_	_
(	_	_
2009	_	_
)	_	_
further	_	_
used	_	_
a	_	_
Markov	_	_
Logic	_	_
Network	_	_
formulation	_	_
to	_	_
incorporate	_	_
a	_	_
subset	_	_
of	_	_
these	_	_
constraints	_	_
during	_	_
learning	_	_
.	_	_

#202
Another	_	_
popular	_	_
approach	_	_
has	_	_
been	_	_
to	_	_
apply	_	_
a	_	_
reranking	_	_
model	_	_
,	_	_
which	_	_
can	capability	_
incorporate	_	_
soft	_	_
structural	_	_
constraints	_	_
in	_	_
the	_	_
form	_	_
of	_	_
features	_	_
,	_	_
on	_	_
top	_	_
of	_	_
the	_	_
k-best	_	_
output	_	_
of	_	_
local	_	_
classifiers	_	_
(	_	_
Toutanova	_	_
et	_	_
al.	_	_
,	_	_
2008	_	_
;	_	_
Johansson	_	_
and	_	_
Nugues	_	_
,	_	_
2008	_	_
)	_	_
.	_	_

#203
However	_	_
,	_	_
none	_	_
of	_	_
these	_	_
methods	_	_
provide	_	_
any	_	_
means	_	_
to	_	_
perform	_	_
efficient	_	_
marginal	_	_
inference	_	_
and	_	_
this	_	_
work	_	_
is	_	_
the	_	_
first	_	_
to	_	_
use	_	_
a	_	_
globally	_	_
normalized	_	_
probabilistic	_	_
model	_	_
with	_	_
structural	_	_
constraints	_	_
for	_	_
this	_	_
task	_	_
.	_	_

#209
Second	_	_
,	_	_
we	_	_
perform	_	_
experiments	_	_
on	_	_
a	_	_
substantially	_	_
larger	_	_
data	_	_
set	_	_
annotated	_	_
according	_	_
to	_	_
PropBank	_	_
conventions	_	_
,	_	_
using	_	_
the	_	_
recent	_	_
OntoNotes	_	_
5.0	_	_
corpus	_	_
(	_	_
Weischedel	_	_
et	_	_
al.	_	_
,	_	_
2011	_	_
)	_	_
,	_	_
with	_	_
the	_	_
CoNLL	_	_
2012	_	_
training	_	_
,	_	_
development	_	_
and	_	_
test	_	_
splits	_	_
from	_	_
Pradhan	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2013	_	_
)	_	_
.	_	_

#210
The	_	_
frame	_	_
lexicon	_	_
for	_	_
these	_	_
experiments	_	_
is	_	_
8While	_	_
the	_	_
dynamic	_	_
program	_	_
in	_	_
§4	_	_
could	feasibility-options	_
be	_	_
used	_	_
to	_	_
efficiently	_	_
implement	_	_
such	_	_
ensembles	_	_
,	_	_
since	_	_
it	_	_
solves	_	_
the	_	_
equivalent	_	_
ILP	_	_
,	_	_
our	_	_
focus	_	_
in	_	_
this	_	_
work	_	_
is	_	_
on	_	_
learning	_	_
a	_	_
single	_	_
accurate	_	_
model	_	_
.	_	_

#211
derived	_	_
from	_	_
the	_	_
OntoNotes	_	_
frame	_	_
files	_	_
.	_	_

#237
The	_	_
full	_	_
dependency	_	_
sub-	_	_
tree	_	_
under	_	_
a	_	_
particular	_	_
head	_	_
word	_	_
often	_	_
merges	_	_
syntactic	_	_
constituents	_	_
.	_	_

#238
For	_	_
example	_	_
,	_	_
in	_	_
the	_	_
tree	_	_
fragment	_	_
The	_	_
man	_	_
who	_	_
knew	_	_
too	_	_
much	_	_
root	_	_
det	_	_
rcmod	_	_
nsubj	_	_
dobj	_	_
advmod	_	_
the	_	_
dependency	_	_
tree	_	_
has	_	_
the	_	_
full	_	_
clause	_	_
as	_	_
the	_	_
subtree	_	_
headed	_	_
by	_	_
man	_	_
,	_	_
making	_	_
it	_	_
non-trivial	_	_
to	_	_
extract	_	_
a	_	_
partial	_	_
subtree	_	_
underneath	_	_
it	_	_
that	_	_
could	capability-options	_
serve	_	_
as	_	_
a	_	_
valid	_	_
argument	_	_
(	_	_
for	_	_
example	_	_
,	_	_
The	_	_
man	_	_
)	_	_
.	_	_

#239
In	_	_
our	_	_
candidate	_	_
argument	_	_
extraction	_	_
algorithm	_	_
,	_	_
first	_	_
,	_	_
we	_	_
select	_	_
all	_	_
the	_	_
children	_	_
subtrees	_	_
of	_	_
a	_	_
given	_	_
predicate	_	_
as	_	_
potential	_	_
arguments	_	_
;	_	_
if	_	_
a	_	_
child	_	_
word	_	_
is	_	_
connected	_	_
via	_	_
the	_	_
conj	_	_
(	_	_
conjunction	_	_
)	_	_
or	_	_
the	_	_
prep	_	_
(	_	_
preposition	_	_
)	_	_
label	_	_
,	_	_
we	_	_
also	_	_
select	_	_
the	_	_
corresponding	_	_
grand-children	_	_
subtrees	_	_
.	_	_

#240
Next	_	_
,	_	_
we	_	_
climb	_	_
up	_	_
to	_	_
the	_	_
predicate’s	_	_
syntactic	_	_
parent	_	_
and	_	_
add	_	_
any	_	_
partial	_	_
subtrees	_	_
headed	_	_
by	_	_
it	_	_
that	_	_
could	capability-options	_
serve	_	_
as	_	_
constituents	_	_
in	_	_
the	_	_
corresponding	_	_
phrase-structure	_	_
tree	_	_
.	_	_

#241
To	_	_
capture	_	_
such	_	_
constructions	_	_
,	_	_
we	_	_
select	_	_
partial	_	_
subtrees	_	_
for	_	_
a	_	_
head	_	_
word	_	_
by	_	_
first	_	_
adding	_	_
the	_	_
head	_	_
word	_	_
,	_	_
then	_	_
adding	_	_
contiguous	_	_
child	_	_
subtrees	_	_
from	_	_
the	_	_
head	_	_
word’s	_	_
rightmost	_	_
left	_	_
child	_	_
towards	_	_
the	_	_
leftmost	_	_
left	_	_
child	_	_
until	_	_
we	_	_
either	_	_
reach	_	_
the	_	_
predicate	_	_
word	_	_
or	_	_
an	_	_
offensive	_	_
dependency	_	_
label.11	_	_
This	_	_
procedure	_	_
is	_	_
then	_	_
symmetrically	_	_
applied	_	_
to	_	_
the	_	_
head	_	_
word’s	_	_
right	_	_
children	_	_
.	_	_

#302
in	_	_
the	_	_
tables	_	_
)	_	_
.	_	_

#303
The	_	_
increase	_	_
in	_	_
recall	_	_
is	_	_
to	_	_
be	_	_
expected	_	_
,	_	_
since	_	_
during	_	_
training	_	_
the	_	_
structured	_	_
model	_	_
can	capability	_
rely	_	_
on	_	_
the	_	_
constraints	_	_
to	_	_
eliminate	_	_
some	_	_
hypotheses	_	_
.	_	_

#304
This	_	_
has	_	_
the	_	_
effect	_	_
of	_	_
alleviating	_	_
some	_	_
of	_	_
the	_	_
label	_	_
imbalance	_	_
seen	_	_
in	_	_
the	_	_
training	_	_
data	_	_
(	_	_
recall	_	_
that	_	_
the	_	_
model	_	_
encounters	_	_
roughly	_	_
four	_	_
times	_	_
as	_	_
many	_	_
null	_	_
roles	_	_
as	_	_
non-null	_	_
role	_	_
assignments	_	_
)	_	_
.	_	_

#335
Across	_	_
data	_	_
points	_	_
for	_	_
which	_	_
such	_	_
k-best	_	_
inference	_	_
is	_	_
necessary	_	_
,	_	_
the	_	_
average	_	_
k	_	_
is	_	_
found	_	_
to	_	_
be	_	_
1.8	_	_
.	_	_

#336
If	_	_
we	_	_
allow	_	_
ourselves	_	_
to	_	_
ignore	_	_
these	_	_
constraints	_	_
,	_	_
we	_	_
can	feasibility	_
avoid	_	_
k-best	_	_
inference	_	_
and	_	_
achieve	_	_
a	_	_
further	_	_
speedup	_	_
,	_	_
as	_	_
shown	_	_
in	_	_
the	_	_
last	_	_
line	_	_
of	_	_
Table	_	_
6	_	_
.	_	_

#337
The	_	_
heuristics	_	_
of	_	_
Toutanova	_	_
et	_	_
al	_	_
.	_	_
(	_	_
2008	_	_
)	_	_
could	feasibility-speculation	_
potentially	_	_
be	_	_
used	_	_
as	_	_
an	_	_
alternative	_	_
way	_	_
of	_	_
satisfying	_	_
these	_	_
constraints	_	_
.	_	_

#338
7	_	_
Conclusions	_	_
We	_	_
described	_	_
a	_	_
dynamic	_	_
program	_	_
for	_	_
constrained	_	_
inference	_	_
in	_	_
semantic	_	_
role	_	_
labeling	_	_
that	_	_
efficiently	_	_
enforces	_	_
a	_	_
majority	_	_
of	_	_
structural	_	_
constraints	_	_
,	_	_
given	_	_
potentially	_	_
overlapping	_	_
candidate	_	_
arguments	_	_
.	_	_